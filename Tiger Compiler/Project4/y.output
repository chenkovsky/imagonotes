Grammar

    0 $accept: program $end

    1 program: exp

    2 exp_em: /* empty */
    3       | exp

    4 exp: INT
    5    | STRING
    6    | lvalue
    7    | NIL
    8    | LPAREN sequencing RPAREN
    9    | exp PLUS exp
   10    | exp MINUS exp
   11    | exp TIMES exp
   12    | exp DIVIDE exp
   13    | exp EQ exp
   14    | exp NEQ exp
   15    | exp LT exp
   16    | exp LE exp
   17    | exp GT exp
   18    | exp GE exp
   19    | exp AND exp
   20    | exp OR exp
   21    | MINUS exp
   22    | LPAREN exp_em RPAREN
   23    | ID LPAREN actuals RPAREN
   24    | lvalue ASSIGN exp
   25    | IF exp THEN exp
   26    | IF exp THEN exp ELSE exp
   27    | WHILE exp DO exp
   28    | FOR ID ASSIGN exp TO exp DO exp
   29    | BREAK
   30    | LET decs IN expseq END
   31    | ID LBRACE rec RBRACE
   32    | ID LBRACK exp RBRACK OF exp

   33 lvalue: ID
   34       | oneormore

   35 oneormore: one
   36          | oneormore DOT ID
   37          | oneormore LBRACK exp RBRACK

   38 one: ID DOT ID
   39    | ID LBRACK exp RBRACK

   40 rec: rec_nonempty
   41    | /* empty */

   42 rec_nonempty: rec_one
   43             | rec_one COMMA rec_nonempty

   44 rec_one: ID EQ exp

   45 sequencing: exp SEMICOLON sequencing_exps

   46 sequencing_exps: exp
   47                | exp SEMICOLON sequencing_exps

   48 actuals: nonemptyactuals
   49        | /* empty */

   50 nonemptyactuals: exp
   51                | exp COMMA nonemptyactuals

   52 expseq: sequencing_exps
   53       | /* empty */

   54 decs: decs_nonempty
   55     | /* empty */

   56 decs_nonempty: decs_nonempty_s
   57              | decs_nonempty_s decs_nonempty

   58 decs_nonempty_s: tydec
   59                | vardec
   60                | fundec

   61 tydec: tydec_one
   62      | tydec_one tydec

   63 tydec_one: TYPE ID EQ ty

   64 ty: ID
   65   | LBRACE tyfields RBRACE
   66   | ARRAY OF ID

   67 tyfields: tyfields_nonempty
   68         | /* empty */

   69 tyfields_nonempty: ID COLON ID
   70                  | ID COLON ID COMMA tyfields_nonempty

   71 vardec: VAR ID ASSIGN exp
   72       | VAR ID COLON ID ASSIGN exp

   73 fundec: fundec_one
   74       | fundec_one fundec

   75 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   76           | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 23 28 31 32 33 36 38 39 44 63 64 66 69 70 71 72 75 76
STRING (259) 5
INT (260) 4
COMMA (261) 43 51 70
COLON (262) 69 70 72 76
SEMICOLON (263) 45 47
LPAREN (264) 8 22 23 75 76
RPAREN (265) 8 22 23 75 76
LBRACK (266) 32 37 39
RBRACK (267) 32 37 39
LBRACE (268) 31 65
RBRACE (269) 31 65
DOT (270) 36 38
PLUS (271) 9
MINUS (272) 10 21
TIMES (273) 11
DIVIDE (274) 12
EQ (275) 13 44 63 75 76
NEQ (276) 14
LT (277) 15
LE (278) 16
GT (279) 17
GE (280) 18
AND (281) 19
OR (282) 20
ASSIGN (283) 24 28 71 72
ARRAY (284) 66
IF (285) 25 26
THEN (286) 25 26
ELSE (287) 26
WHILE (288) 27
FOR (289) 28
TO (290) 28
DO (291) 27 28
LET (292) 30
IN (293) 30
END (294) 30
OF (295) 32 66
BREAK (296) 29
NIL (297) 7
FUNCTION (298) 75 76
VAR (299) 71 72
TYPE (300) 63
LOWER (301)
LOW (302)
UMINUS (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
exp_em (51)
    on left: 2 3, on right: 22
exp (52)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27 28 29 30 31 32, on right: 1 3 9 10 11 12 13 14 15 16
    17 18 19 20 21 24 25 26 27 28 32 37 39 44 45 46 47 50 51 71 72
    75 76
lvalue (53)
    on left: 33 34, on right: 6 24
oneormore (54)
    on left: 35 36 37, on right: 34 36 37
one (55)
    on left: 38 39, on right: 35
rec (56)
    on left: 40 41, on right: 31
rec_nonempty (57)
    on left: 42 43, on right: 40 43
rec_one (58)
    on left: 44, on right: 42 43
sequencing (59)
    on left: 45, on right: 8
sequencing_exps (60)
    on left: 46 47, on right: 45 47 52
actuals (61)
    on left: 48 49, on right: 23
nonemptyactuals (62)
    on left: 50 51, on right: 48 51
expseq (63)
    on left: 52 53, on right: 30
decs (64)
    on left: 54 55, on right: 30
decs_nonempty (65)
    on left: 56 57, on right: 54 57
decs_nonempty_s (66)
    on left: 58 59 60, on right: 56 57
tydec (67)
    on left: 61 62, on right: 58 62
tydec_one (68)
    on left: 63, on right: 61 62
ty (69)
    on left: 64 65 66, on right: 63
tyfields (70)
    on left: 67 68, on right: 65 75 76
tyfields_nonempty (71)
    on left: 69 70, on right: 67 70
vardec (72)
    on left: 71 72, on right: 59
fundec (73)
    on left: 73 74, on right: 60 74
fundec_one (74)
    on left: 75 76, on right: 73 74


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program    go to state 12
    exp        go to state 13
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 1

   23 exp: ID . LPAREN actuals RPAREN
   31    | ID . LBRACE rec RBRACE
   32    | ID . LBRACK exp RBRACK OF exp
   33 lvalue: ID .
   38 one: ID . DOT ID
   39    | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 17
    LBRACK  shift, and go to state 18
    LBRACE  shift, and go to state 19
    DOT     shift, and go to state 20

    $default  reduce using rule 33 (lvalue)


state 2

    5 exp: STRING .

    $default  reduce using rule 5 (exp)


state 3

    4 exp: INT .

    $default  reduce using rule 4 (exp)


state 4

    8 exp: LPAREN . sequencing RPAREN
   22    | LPAREN . exp_em RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 2 (exp_em)

    exp_em      go to state 21
    exp         go to state 22
    lvalue      go to state 14
    oneormore   go to state 15
    one         go to state 16
    sequencing  go to state 23


state 5

   21 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 24
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 6

   25 exp: IF . exp THEN exp
   26    | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 25
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 7

   27 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 26
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 8

   28 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 27


state 9

   30 exp: LET . decs IN expseq END

    FUNCTION  shift, and go to state 28
    VAR       shift, and go to state 29
    TYPE      shift, and go to state 30

    $default  reduce using rule 55 (decs)

    decs             go to state 31
    decs_nonempty    go to state 32
    decs_nonempty_s  go to state 33
    tydec            go to state 34
    tydec_one        go to state 35
    vardec           go to state 36
    fundec           go to state 37
    fundec_one       go to state 38


state 10

   29 exp: BREAK .

    $default  reduce using rule 29 (exp)


state 11

    7 exp: NIL .

    $default  reduce using rule 7 (exp)


state 12

    0 $accept: program . $end

    $end  shift, and go to state 39


state 13

    1 program: exp .
    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51

    $default  reduce using rule 1 (program)


state 14

    6 exp: lvalue .
   24    | lvalue . ASSIGN exp

    ASSIGN  shift, and go to state 52

    $default  reduce using rule 6 (exp)


state 15

   34 lvalue: oneormore .
   36 oneormore: oneormore . DOT ID
   37          | oneormore . LBRACK exp RBRACK

    LBRACK  shift, and go to state 53
    DOT     shift, and go to state 54

    $default  reduce using rule 34 (lvalue)


state 16

   35 oneormore: one .

    $default  reduce using rule 35 (oneormore)


state 17

   23 exp: ID LPAREN . actuals RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 49 (actuals)

    exp              go to state 55
    lvalue           go to state 14
    oneormore        go to state 15
    one              go to state 16
    actuals          go to state 56
    nonemptyactuals  go to state 57


state 18

   32 exp: ID LBRACK . exp RBRACK OF exp
   39 one: ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 58
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 19

   31 exp: ID LBRACE . rec RBRACE

    ID  shift, and go to state 59

    $default  reduce using rule 41 (rec)

    rec           go to state 60
    rec_nonempty  go to state 61
    rec_one       go to state 62


state 20

   38 one: ID DOT . ID

    ID  shift, and go to state 63


state 21

   22 exp: LPAREN exp_em . RPAREN

    RPAREN  shift, and go to state 64


state 22

    3 exp_em: exp .
    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   45 sequencing: exp . SEMICOLON sequencing_exps

    SEMICOLON  shift, and go to state 65
    PLUS       shift, and go to state 40
    MINUS      shift, and go to state 41
    TIMES      shift, and go to state 42
    DIVIDE     shift, and go to state 43
    EQ         shift, and go to state 44
    NEQ        shift, and go to state 45
    LT         shift, and go to state 46
    LE         shift, and go to state 47
    GT         shift, and go to state 48
    GE         shift, and go to state 49
    AND        shift, and go to state 50
    OR         shift, and go to state 51

    $default  reduce using rule 3 (exp_em)


state 23

    8 exp: LPAREN sequencing . RPAREN

    RPAREN  shift, and go to state 66


state 24

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   21    | MINUS exp .

    $default  reduce using rule 21 (exp)


state 25

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   25    | IF exp . THEN exp
   26    | IF exp . THEN exp ELSE exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51
    THEN    shift, and go to state 67


state 26

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   27    | WHILE exp . DO exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51
    DO      shift, and go to state 68


state 27

   28 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 69


state 28

   75 fundec_one: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   76           | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 70


state 29

   71 vardec: VAR . ID ASSIGN exp
   72       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 71


state 30

   63 tydec_one: TYPE . ID EQ ty

    ID  shift, and go to state 72


state 31

   30 exp: LET decs . IN expseq END

    IN  shift, and go to state 73


state 32

   54 decs: decs_nonempty .

    $default  reduce using rule 54 (decs)


state 33

   56 decs_nonempty: decs_nonempty_s .
   57              | decs_nonempty_s . decs_nonempty

    FUNCTION  shift, and go to state 28
    VAR       shift, and go to state 29
    TYPE      shift, and go to state 30

    $default  reduce using rule 56 (decs_nonempty)

    decs_nonempty    go to state 74
    decs_nonempty_s  go to state 33
    tydec            go to state 34
    tydec_one        go to state 35
    vardec           go to state 36
    fundec           go to state 37
    fundec_one       go to state 38


state 34

   58 decs_nonempty_s: tydec .

    $default  reduce using rule 58 (decs_nonempty_s)


state 35

   61 tydec: tydec_one .
   62      | tydec_one . tydec

    TYPE  shift, and go to state 30

    $default  reduce using rule 61 (tydec)

    tydec      go to state 75
    tydec_one  go to state 35


state 36

   59 decs_nonempty_s: vardec .

    $default  reduce using rule 59 (decs_nonempty_s)


state 37

   60 decs_nonempty_s: fundec .

    $default  reduce using rule 60 (decs_nonempty_s)


state 38

   73 fundec: fundec_one .
   74       | fundec_one . fundec

    FUNCTION  shift, and go to state 28

    $default  reduce using rule 73 (fundec)

    fundec      go to state 76
    fundec_one  go to state 38


state 39

    0 $accept: program $end .

    $default  accept


state 40

    9 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 77
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 41

   10 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 78
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 42

   11 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 79
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 43

   12 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 80
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 44

   13 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 81
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 45

   14 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 82
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 46

   15 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 83
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 47

   16 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 84
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 48

   17 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 85
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 49

   18 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 86
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 50

   19 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 87
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 51

   20 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 88
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 52

   24 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 89
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 53

   37 oneormore: oneormore LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 90
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 54

   36 oneormore: oneormore DOT . ID

    ID  shift, and go to state 91


state 55

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   50 nonemptyactuals: exp .
   51                | exp . COMMA nonemptyactuals

    COMMA   shift, and go to state 92
    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51

    $default  reduce using rule 50 (nonemptyactuals)


state 56

   23 exp: ID LPAREN actuals . RPAREN

    RPAREN  shift, and go to state 93


state 57

   48 actuals: nonemptyactuals .

    $default  reduce using rule 48 (actuals)


state 58

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   32    | ID LBRACK exp . RBRACK OF exp
   39 one: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 94
    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51


state 59

   44 rec_one: ID . EQ exp

    EQ  shift, and go to state 95


state 60

   31 exp: ID LBRACE rec . RBRACE

    RBRACE  shift, and go to state 96


state 61

   40 rec: rec_nonempty .

    $default  reduce using rule 40 (rec)


state 62

   42 rec_nonempty: rec_one .
   43             | rec_one . COMMA rec_nonempty

    COMMA  shift, and go to state 97

    $default  reduce using rule 42 (rec_nonempty)


state 63

   38 one: ID DOT ID .

    $default  reduce using rule 38 (one)


state 64

   22 exp: LPAREN exp_em RPAREN .

    $default  reduce using rule 22 (exp)


state 65

   45 sequencing: exp SEMICOLON . sequencing_exps

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 98
    lvalue           go to state 14
    oneormore        go to state 15
    one              go to state 16
    sequencing_exps  go to state 99


state 66

    8 exp: LPAREN sequencing RPAREN .

    $default  reduce using rule 8 (exp)


state 67

   25 exp: IF exp THEN . exp
   26    | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 100
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 68

   27 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 101
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 69

   28 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 102
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 70

   75 fundec_one: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   76           | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 103


state 71

   71 vardec: VAR ID . ASSIGN exp
   72       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 104
    ASSIGN  shift, and go to state 105


state 72

   63 tydec_one: TYPE ID . EQ ty

    EQ  shift, and go to state 106


state 73

   30 exp: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 53 (expseq)

    exp              go to state 98
    lvalue           go to state 14
    oneormore        go to state 15
    one              go to state 16
    sequencing_exps  go to state 107
    expseq           go to state 108


state 74

   57 decs_nonempty: decs_nonempty_s decs_nonempty .

    $default  reduce using rule 57 (decs_nonempty)


state 75

   62 tydec: tydec_one tydec .

    $default  reduce using rule 62 (tydec)


state 76

   74 fundec: fundec_one fundec .

    $default  reduce using rule 74 (fundec)


state 77

    9 exp: exp . PLUS exp
    9    | exp PLUS exp .
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43

    $default  reduce using rule 9 (exp)


state 78

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   10    | exp MINUS exp .
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43

    $default  reduce using rule 10 (exp)


state 79

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   11    | exp TIMES exp .
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    $default  reduce using rule 11 (exp)


state 80

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   12    | exp DIVIDE exp .
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    $default  reduce using rule 12 (exp)


state 81

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   13    | exp EQ exp .
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 13 (exp)


state 82

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   14    | exp NEQ exp .
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 14 (exp)


state 83

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   15    | exp LT exp .
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 15 (exp)


state 84

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   16    | exp LE exp .
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 16 (exp)


state 85

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   17    | exp GT exp .
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 17 (exp)


state 86

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   18    | exp GE exp .
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 18 (exp)


state 87

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   19    | exp AND exp .
   20    | exp . OR exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49

    $default  reduce using rule 19 (exp)


state 88

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   20    | exp OR exp .

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50

    $default  reduce using rule 20 (exp)


state 89

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   24    | lvalue ASSIGN exp .

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51

    $default  reduce using rule 24 (exp)


state 90

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   37 oneormore: oneormore LBRACK exp . RBRACK

    RBRACK  shift, and go to state 109
    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51


state 91

   36 oneormore: oneormore DOT ID .

    $default  reduce using rule 36 (oneormore)


state 92

   51 nonemptyactuals: exp COMMA . nonemptyactuals

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 55
    lvalue           go to state 14
    oneormore        go to state 15
    one              go to state 16
    nonemptyactuals  go to state 110


state 93

   23 exp: ID LPAREN actuals RPAREN .

    $default  reduce using rule 23 (exp)


state 94

   32 exp: ID LBRACK exp RBRACK . OF exp
   39 one: ID LBRACK exp RBRACK .

    OF  shift, and go to state 111

    $default  reduce using rule 39 (one)


state 95

   44 rec_one: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 112
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 96

   31 exp: ID LBRACE rec RBRACE .

    $default  reduce using rule 31 (exp)


state 97

   43 rec_nonempty: rec_one COMMA . rec_nonempty

    ID  shift, and go to state 59

    rec_nonempty  go to state 113
    rec_one       go to state 62


state 98

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   46 sequencing_exps: exp .
   47                | exp . SEMICOLON sequencing_exps

    SEMICOLON  shift, and go to state 114
    PLUS       shift, and go to state 40
    MINUS      shift, and go to state 41
    TIMES      shift, and go to state 42
    DIVIDE     shift, and go to state 43
    EQ         shift, and go to state 44
    NEQ        shift, and go to state 45
    LT         shift, and go to state 46
    LE         shift, and go to state 47
    GT         shift, and go to state 48
    GE         shift, and go to state 49
    AND        shift, and go to state 50
    OR         shift, and go to state 51

    $default  reduce using rule 46 (sequencing_exps)


state 99

   45 sequencing: exp SEMICOLON sequencing_exps .

    $default  reduce using rule 45 (sequencing)


state 100

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   25    | IF exp THEN exp .
   26    | IF exp THEN exp . ELSE exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51
    ELSE    shift, and go to state 115

    $default  reduce using rule 25 (exp)


state 101

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   27    | WHILE exp DO exp .

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51

    $default  reduce using rule 27 (exp)


state 102

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   28    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51
    TO      shift, and go to state 116


state 103

   75 fundec_one: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   76           | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 117

    $default  reduce using rule 68 (tyfields)

    tyfields           go to state 118
    tyfields_nonempty  go to state 119


state 104

   72 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 120


state 105

   71 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 121
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 106

   63 tydec_one: TYPE ID EQ . ty

    ID      shift, and go to state 122
    LBRACE  shift, and go to state 123
    ARRAY   shift, and go to state 124

    ty  go to state 125


state 107

   52 expseq: sequencing_exps .

    $default  reduce using rule 52 (expseq)


state 108

   30 exp: LET decs IN expseq . END

    END  shift, and go to state 126


state 109

   37 oneormore: oneormore LBRACK exp RBRACK .

    $default  reduce using rule 37 (oneormore)


state 110

   51 nonemptyactuals: exp COMMA nonemptyactuals .

    $default  reduce using rule 51 (nonemptyactuals)


state 111

   32 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 127
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 112

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   44 rec_one: ID EQ exp .

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51

    $default  reduce using rule 44 (rec_one)


state 113

   43 rec_nonempty: rec_one COMMA rec_nonempty .

    $default  reduce using rule 43 (rec_nonempty)


state 114

   47 sequencing_exps: exp SEMICOLON . sequencing_exps

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 98
    lvalue           go to state 14
    oneormore        go to state 15
    one              go to state 16
    sequencing_exps  go to state 128


state 115

   26 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 129
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 116

   28 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 130
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 117

   69 tyfields_nonempty: ID . COLON ID
   70                  | ID . COLON ID COMMA tyfields_nonempty

    COLON  shift, and go to state 131


state 118

   75 fundec_one: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   76           | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 132


state 119

   67 tyfields: tyfields_nonempty .

    $default  reduce using rule 67 (tyfields)


state 120

   72 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 133


state 121

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   71 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51

    $default  reduce using rule 71 (vardec)


state 122

   64 ty: ID .

    $default  reduce using rule 64 (ty)


state 123

   65 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 117

    $default  reduce using rule 68 (tyfields)

    tyfields           go to state 134
    tyfields_nonempty  go to state 119


state 124

   66 ty: ARRAY . OF ID

    OF  shift, and go to state 135


state 125

   63 tydec_one: TYPE ID EQ ty .

    $default  reduce using rule 63 (tydec_one)


state 126

   30 exp: LET decs IN expseq END .

    $default  reduce using rule 30 (exp)


state 127

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   32    | ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51

    $default  reduce using rule 32 (exp)


state 128

   47 sequencing_exps: exp SEMICOLON sequencing_exps .

    $default  reduce using rule 47 (sequencing_exps)


state 129

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   26    | IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51

    $default  reduce using rule 26 (exp)


state 130

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   28    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51
    DO      shift, and go to state 136


state 131

   69 tyfields_nonempty: ID COLON . ID
   70                  | ID COLON . ID COMMA tyfields_nonempty

    ID  shift, and go to state 137


state 132

   75 fundec_one: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   76           | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 138
    EQ     shift, and go to state 139


state 133

   72 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 140
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 134

   65 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 141


state 135

   66 ty: ARRAY OF . ID

    ID  shift, and go to state 142


state 136

   28 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 143
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 137

   69 tyfields_nonempty: ID COLON ID .
   70                  | ID COLON ID . COMMA tyfields_nonempty

    COMMA  shift, and go to state 144

    $default  reduce using rule 69 (tyfields_nonempty)


state 138

   76 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 145


state 139

   75 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 146
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 140

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   72 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51

    $default  reduce using rule 72 (vardec)


state 141

   65 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 65 (ty)


state 142

   66 ty: ARRAY OF ID .

    $default  reduce using rule 66 (ty)


state 143

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   28    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51

    $default  reduce using rule 28 (exp)


state 144

   70 tyfields_nonempty: ID COLON ID COMMA . tyfields_nonempty

    ID  shift, and go to state 117

    tyfields_nonempty  go to state 147


state 145

   76 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 148


state 146

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   75 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51

    $default  reduce using rule 75 (fundec_one)


state 147

   70 tyfields_nonempty: ID COLON ID COMMA tyfields_nonempty .

    $default  reduce using rule 70 (tyfields_nonempty)


state 148

   76 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 149
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


state 149

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   76 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51

    $default  reduce using rule 76 (fundec_one)
