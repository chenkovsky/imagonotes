* escape.h .c新建改动了，但是没没用到。
* assem cannon 貌似都不需要考虑
* 我们要做的是将每个函数的局部变量的位置设好 以及 将函数内的指令设好。不需要考虑栈的控制，
* 参数，静态链要传的！！！！
* 定义的时候，将位置设好，应当在表示结构体的数据结构里面加个大小以及位置？
* 所有的结构体都是Heap上的。
* 栈上保存整数
* 字符串保存在静态位置
* 
* debug用的： prabsyn.c printtree.c,
* 我先写frame.c
* 在递归翻译的时候，定义直接进env, 进入scope(函数函数)么加个level，退出scope（函数定义）减个level， 在达到该level中的在该scope需要执行的代码时，首先要考虑栈然后，然后再考虑其他操作。添加将局部变量压栈，的操作（sub esp）然后保存其他寄存器。
* 每个需要变量的操作都弄成取，操作，再存。
* 有临时变量应该至多三个就够了吧。。。
* 书上的栈不理解，还是按照原来的弄，反正这里都是自己控制。原来代码没有涉及。
* 不需要自己控制寄存器！！！
* 注意调用函数的栈
* 如果要a.b.c那么应当将b放入栈中。
* new 结构体那么要新建一个临时变量
* 注意string 的equal。
* 函数的调用均有包装，考虑是否在包装上价格静态链参数，然后。。。。。
