cscope 15 $HOME/Desktop/project_4/Project4               0000469576
	@absyn.c

6 
	~"utû.h
"

7 
	~"symbﬁ.h
"

8 
	~"absyn.h
"

10 
A_v¨
 
	$A_Sim∂eV¨
(
A_pos
 
pos
, 
S_symbﬁ
 
sym
)

11 {
A_v¨
 
p
 = 
	`checked_mÆloc
((*p));

12 
p
->
köd
=
A_sim∂eV¨
;

13 
p
->
pos
=pos;

14 
p
->
u
.
sim∂e
=
sym
;

15  
p
;

16 
	}
}

18 
A_v¨
 
	$A_FõldV¨
(
A_pos
 
pos
, 
A_v¨
 
v¨
, 
S_symbﬁ
 
sym
)

19 {
A_v¨
 
p
 = 
	`checked_mÆloc
((*p));

20 
p
->
köd
=
A_fõldV¨
;

21 
p
->
pos
=pos;

22 
p
->
u
.
fõld
.
v¨
=var;

23 
p
->
u
.
fõld
.
sym
=sym;

24  
p
;

25 
	}
}

27 
A_v¨
 
	$A_Subs¸ùtV¨
(
A_pos
 
pos
, 
A_v¨
 
v¨
, 
A_exp
 
exp
)

28 {
A_v¨
 
p
 = 
	`checked_mÆloc
((*p));

29 
p
->
köd
=
A_subs¸ùtV¨
;

30 
p
->
pos
=pos;

31 
p
->
u
.
subs¸ùt
.
v¨
=var;

32 
p
->
u
.
subs¸ùt
.
exp
=exp;

33  
p
;

34 
	}
}

37 
A_exp
 
	$A_V¨Exp
(
A_pos
 
pos
, 
A_v¨
 
v¨
)

38 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

39 
p
->
köd
=
A_v¨Exp
;

40 
p
->
pos
=pos;

41 
p
->
u
.
v¨
=var;

42  
p
;

43 
	}
}

45 
A_exp
 
	$A_NûExp
(
A_pos
 
pos
)

46 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

47 
p
->
köd
=
A_nûExp
;

48 
p
->
pos
=pos;

49  
p
;

50 
	}
}

52 
A_exp
 
	$A_I¡Exp
(
A_pos
 
pos
, 
i
)

53 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

54 
p
->
köd
=
A_ötExp
;

55 
p
->
pos
=pos;

56 
p
->
u
.
öâ
=
i
;

57  
p
;

58 
	}
}

60 
A_exp
 
	$A_SåögExp
(
A_pos
 
pos
, 
°rög
 
s
)

61 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

62 
p
->
köd
=
A_°rögExp
;

63 
p
->
pos
=pos;

64 
p
->
u
.
°rögg
=
s
;

65  
p
;

66 
	}
}

68 
A_exp
 
	$A_CÆlExp
(
A_pos
 
pos
, 
S_symbﬁ
 
func
, 
A_expLi°
 
¨gs
)

69 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

70 
p
->
köd
=
A_ˇŒExp
;

71 
p
->
pos
=pos;

72 
p
->
u
.
ˇŒ
.
func
=func;

73 
p
->
u
.
ˇŒ
.
¨gs
=args;

74  
p
;

75 
	}
}

77 
A_exp
 
	$A_OpExp
(
A_pos
 
pos
, 
A_›î
 
›î
, 
A_exp
 
À·
, A_ex∞
right
)

78 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

79 
p
->
köd
=
A_›Exp
;

80 
p
->
pos
=pos;

81 
p
->
u
.
›
.
›î
=oper;

82 
p
->
u
.
›
.
À·
=left;

83 
p
->
u
.
›
.
right
=right;

84  
p
;

85 
	}
}

87 
A_exp
 
	$A_Rec‹dExp
(
A_pos
 
pos
, 
S_symbﬁ
 
typ
, 
A_efõldLi°
 
fõlds
)

88 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

89 
p
->
köd
=
A_ªc‹dExp
;

90 
p
->
pos
=pos;

91 
p
->
u
.
ªc‹d
.
typ
=typ;

92 
p
->
u
.
ªc‹d
.
fõlds
=fields;

93  
p
;

94 
	}
}

96 
A_exp
 
	$A_SeqExp
(
A_pos
 
pos
, 
A_expLi°
 
£q
)

97 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

98 
p
->
köd
=
A_£qExp
;

99 
p
->
pos
=pos;

100 
p
->
u
.
£q
=seq;

101  
p
;

102 
	}
}

104 
A_exp
 
	$A_AssignExp
(
A_pos
 
pos
, 
A_v¨
 
v¨
, 
A_exp
 
exp
)

105 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

106 
p
->
köd
=
A_assignExp
;

107 
p
->
pos
=pos;

108 
p
->
u
.
assign
.
v¨
=var;

109 
p
->
u
.
assign
.
exp
=exp;

110  
p
;

111 
	}
}

113 
A_exp
 
	$A_IfExp
(
A_pos
 
pos
, 
A_exp
 
ã°
, A_ex∞
thí
, A_ex∞
ñ£e
)

114 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

115 
p
->
köd
=
A_ifExp
;

116 
p
->
pos
=pos;

117 
p
->
u
.
iff
.
ã°
=test;

118 
p
->
u
.
iff
.
thí
=then;

119 
p
->
u
.
iff
.
ñ£e
=elsee;

120  
p
;

121 
	}
}

123 
A_exp
 
	$A_WhûeExp
(
A_pos
 
pos
, 
A_exp
 
ã°
, A_ex∞
body
)

124 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

125 
p
->
köd
=
A_whûeExp
;

126 
p
->
pos
=pos;

127 
p
->
u
.
whûì
.
ã°
=test;

128 
p
->
u
.
whûì
.
body
=body;

129  
p
;

130 
	}
}

132 
A_exp
 
	$A_F‹Exp
(
A_pos
 
pos
, 
S_symbﬁ
 
v¨
, 
A_exp
 
lo
, A_ex∞
hi
, A_ex∞
body
)

133 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

134 
p
->
köd
=
A_f‹Exp
;

135 
p
->
pos
=pos;

136 
p
->
u
.
f‹r
.
v¨
=var;

137 
p
->
u
.
f‹r
.
lo
=lo;

138 
p
->
u
.
f‹r
.
hi
=hi;

139 
p
->
u
.
f‹r
.
body
=body;

140 
p
->
u
.
f‹r
.
esˇ≥
=
TRUE
;

141  
p
;

142 
	}
}

144 
A_exp
 
	$A_BªakExp
(
A_pos
 
pos
)

145 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

146 
p
->
köd
=
A_bªakExp
;

147 
p
->
pos
=pos;

148  
p
;

149 
	}
}

151 
A_exp
 
	$A_LëExp
(
A_pos
 
pos
, 
A_decLi°
 
decs
, 
A_exp
 
body
)

152 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

153 
p
->
köd
=
A_ÀtExp
;

154 
p
->
pos
=pos;

155 
p
->
u
.
Àt
.
decs
=decs;

156 
p
->
u
.
Àt
.
body
=body;

157  
p
;

158 
	}
}

160 
A_exp
 
	$A_AºayExp
(
A_pos
 
pos
, 
S_symbﬁ
 
typ
, 
A_exp
 
size
, A_ex∞
öô
)

161 {
A_exp
 
p
 = 
	`checked_mÆloc
((*p));

162 
p
->
köd
=
A_¨øyExp
;

163 
p
->
pos
=pos;

164 
p
->
u
.
¨øy
.
typ
=typ;

165 
p
->
u
.
¨øy
.
size
=size;

166 
p
->
u
.
¨øy
.
öô
=init;

167  
p
;

168 
	}
}

170 
A_dec
 
	$A_Fun˘i⁄Dec
(
A_pos
 
pos
, 
A_fundecLi°
 
fun˘i⁄
)

171 {
A_dec
 
p
 = 
	`checked_mÆloc
((*p));

172 
p
->
köd
=
A_fun˘i⁄Dec
;

173 
p
->
pos
=pos;

174 
p
->
u
.
fun˘i⁄
=function;

175  
p
;

176 
	}
}

178 
A_dec
 
	$A_V¨Dec
(
A_pos
 
pos
, 
S_symbﬁ
 
v¨
, S_symbﬁ 
typ
, 
A_exp
 
öô
)

179 {
A_dec
 
p
 = 
	`checked_mÆloc
((*p));

180 
p
->
köd
=
A_v¨Dec
;

181 
p
->
pos
=pos;

182 
p
->
u
.
v¨
.var=var;

183 
p
->
u
.
v¨
.
typ
=typ;

184 
p
->
u
.
v¨
.
öô
=init;

185 
p
->
u
.
v¨
.
esˇ≥
=
TRUE
;

186  
p
;

187 
	}
}

189 
A_dec
 
	$A_Ty≥Dec
(
A_pos
 
pos
, 
A_«mëyLi°
 
ty≥
)

190 {
A_dec
 
p
 = 
	`checked_mÆloc
((*p));

191 
p
->
köd
=
A_ty≥Dec
;

192 
p
->
pos
=pos;

193 
p
->
u
.
ty≥
=type;

194  
p
;

195 
	}
}

197 
A_ty
 
	$A_NameTy
(
A_pos
 
pos
, 
S_symbﬁ
 
«me
)

198 {
A_ty
 
p
 = 
	`checked_mÆloc
((*p));

199 
p
->
köd
=
A_«meTy
;

200 
p
->
pos
=pos;

201 
p
->
u
.
«me
=name;

202  
p
;

203 
	}
}

205 
A_ty
 
	$A_Rec‹dTy
(
A_pos
 
pos
, 
A_fõldLi°
 
ªc‹d
)

206 {
A_ty
 
p
 = 
	`checked_mÆloc
((*p));

207 
p
->
köd
=
A_ªc‹dTy
;

208 
p
->
pos
=pos;

209 
p
->
u
.
ªc‹d
=record;

210  
p
;

211 
	}
}

213 
A_ty
 
	$A_AºayTy
(
A_pos
 
pos
, 
S_symbﬁ
 
¨øy
)

214 {
A_ty
 
p
 = 
	`checked_mÆloc
((*p));

215 
p
->
köd
=
A_¨øyTy
;

216 
p
->
pos
=pos;

217 
p
->
u
.
¨øy
=array;

218  
p
;

219 
	}
}

221 
A_fõld
 
	$A_Fõld
(
A_pos
 
pos
, 
S_symbﬁ
 
«me
, S_symbﬁ 
typ
)

222 {
A_fõld
 
p
 = 
	`checked_mÆloc
((*p));

223 
p
->
pos
=pos;

224 
p
->
«me
=name;

225 
p
->
typ
=typ;

226 
p
->
esˇ≥
=
TRUE
;

227  
p
;

228 
	}
}

230 
A_fõldLi°
 
	$A_FõldLi°
(
A_fõld
 
hód
, 
A_fõldLi°
 
èû
)

231 {
A_fõldLi°
 
p
 = 
	`checked_mÆloc
((*p));

232 
p
->
hód
=head;

233 
p
->
èû
=tail;

234  
p
;

235 
	}
}

237 
A_expLi°
 
	$A_ExpLi°
(
A_exp
 
hód
, 
A_expLi°
 
èû
)

238 {
A_expLi°
 
p
 = 
	`checked_mÆloc
((*p));

239 
p
->
hód
=head;

240 
p
->
èû
=tail;

241  
p
;

242 
	}
}

244 
A_fundec
 
	$A_Fundec
(
A_pos
 
pos
, 
S_symbﬁ
 
«me
, 
A_fõldLi°
 
∑øms
, S_symbﬁ 
ªsu…
,

245 
A_exp
 
body
)

246 {
A_fundec
 
p
 = 
	`checked_mÆloc
((*p));

247 
p
->
pos
=pos;

248 
p
->
«me
=name;

249 
p
->
∑øms
=params;

250 
p
->
ªsu…
=result;

251 
p
->
body
=body;

252  
p
;

253 
	}
}

255 
A_fundecLi°
 
	$A_FundecLi°
(
A_fundec
 
hód
, 
A_fundecLi°
 
èû
)

256 {
A_fundecLi°
 
p
 = 
	`checked_mÆloc
((*p));

257 
p
->
hód
=head;

258 
p
->
èû
=tail;

259  
p
;

260 
	}
}

262 
A_decLi°
 
	$A_DecLi°
(
A_dec
 
hód
, 
A_decLi°
 
èû
)

263 {
A_decLi°
 
p
 = 
	`checked_mÆloc
((*p));

264 
p
->
hód
=head;

265 
p
->
èû
=tail;

266  
p
;

267 
	}
}

269 
A_«mëy
 
	$A_Namëy
(
S_symbﬁ
 
«me
, 
A_ty
 
ty
)

270 {
A_«mëy
 
p
 = 
	`checked_mÆloc
((*p));

271 
p
->
«me
=name;

272 
p
->
ty
=ty;

273  
p
;

274 
	}
}

276 
A_«mëyLi°
 
	$A_NamëyLi°
(
A_«mëy
 
hód
, 
A_«mëyLi°
 
èû
)

277 {
A_«mëyLi°
 
p
 = 
	`checked_mÆloc
((*p));

278 
p
->
hód
=head;

279 
p
->
èû
=tail;

280  
p
;

281 
	}
}

283 
A_efõld
 
	$A_Efõld
(
S_symbﬁ
 
«me
, 
A_exp
 
exp
)

284 {
A_efõld
 
p
 = 
	`checked_mÆloc
((*p));

285 
p
->
«me
=name;

286 
p
->
exp
=exp;

287  
p
;

288 
	}
}

290 
A_efõldLi°
 
	$A_EfõldLi°
(
A_efõld
 
hód
, 
A_efõldLi°
 
èû
)

291 {
A_efõldLi°
 
p
 = 
	`checked_mÆloc
((*p));

292 
p
->
hód
=head;

293 
p
->
èû
=tail;

294  
p
;

295 
	}
}

	@absyn.h

9 #i‚de‡
_ABSYN_H_


10 
	#_ABSYN_H_


	)

11 
	~"symbﬁ.h
"

13 
	tA_pos
;

15 
A_v¨_
 *
	tA_v¨
;

16 
A_exp_
 *
	tA_exp
;

17 
A_dec_
 *
	tA_dec
;

18 
A_ty_
 *
	tA_ty
;

20 
A_decLi°_
 *
	tA_decLi°
;

21 
A_expLi°_
 *
	tA_expLi°
;

22 
A_fõld_
 *
	tA_fõld
;

23 
A_fõldLi°_
 *
	tA_fõldLi°
;

24 
A_fundec_
 *
	tA_fundec
;

25 
A_fundecLi°_
 *
	tA_fundecLi°
;

26 
A_«mëy_
 *
	tA_«mëy
;

27 
A_«mëyLi°_
 *
	tA_«mëyLi°
;

28 
A_efõld_
 *
	tA_efõld
;

29 
A_efõldLi°_
 *
	tA_efõldLi°
;

31 íum {
	mA_∂usOp
, 
	mA_möusOp
, 
	mA_timesOp
, 
	mA_divideOp
,

32 
	mA_eqOp
, 
	mA_√qOp
, 
	mA_…Op
, 
	mA_ÀOp
, 
	mA_gtOp
, 
	mA_geOp
} 
	tA_›î
;

34 
	sA_v¨_


35 {íum {
	mA_sim∂eV¨
, 
	mA_fõldV¨
, 
	mA_subs¸ùtV¨
} 
	mköd
;

36 
A_pos
 
	mpos
;

37 uni⁄ {
S_symbﬁ
 
	msim∂e
;

38 °ru˘ {
A_v¨
 
	mv¨
;

39 
S_symbﬁ
 
	msym
;} 
	mfõld
;

40 °ru˘ {
A_v¨
 
	mv¨
;

41 
A_exp
 
	mexp
;} 
	msubs¸ùt
;

42 } 
	mu
;

45 
	sA_exp_


46 {íum {
	mA_v¨Exp
, 
	mA_nûExp
, 
	mA_ötExp
, 
	mA_°rögExp
, 
	mA_ˇŒExp
,

47 
	mA_›Exp
, 
	mA_ªc‹dExp
, 
	mA_£qExp
, 
	mA_assignExp
, 
	mA_ifExp
,

48 
	mA_whûeExp
, 
	mA_f‹Exp
, 
	mA_bªakExp
, 
	mA_ÀtExp
, 
	mA_¨øyExp
} 
	mköd
;

49 
A_pos
 
	mpos
;

50 uni⁄ {
A_v¨
 
	mv¨
;

52 
	möâ
;

53 
°rög
 
	m°rögg
;

54 °ru˘ {
S_symbﬁ
 
	mfunc
; 
A_expLi°
 
	m¨gs
;} 
	mˇŒ
;

55 °ru˘ {
A_›î
 
	m›î
; 
A_exp
 
	mÀ·
; A_ex∞
	mright
;} 
	m›
;

56 °ru˘ {
S_symbﬁ
 
	mtyp
; 
A_efõldLi°
 
	mfõlds
;} 
	mªc‹d
;

57 
A_expLi°
 
	m£q
;

58 °ru˘ {
A_v¨
 
	mv¨
; 
A_exp
 
	mexp
;} 
	massign
;

59 °ru˘ {
A_exp
 
	mã°
, 
	mthí
, 
	mñ£e
;} 
	miff
;

60 °ru˘ {
A_exp
 
	mã°
, 
	mbody
;} 
	mwhûì
;

61 °ru˘ {
S_symbﬁ
 
	mv¨
; 
A_exp
 
	mlo
,
	mhi
,
	mbody
; 
boﬁ
 
	mesˇ≥
;} 
	mf‹r
;

63 °ru˘ {
A_decLi°
 
	mdecs
; 
A_exp
 
	mbody
;} 
	mÀt
;

64 °ru˘ {
S_symbﬁ
 
	mtyp
; 
A_exp
 
	msize
, 
	möô
;} 
	m¨øy
;

65 } 
	mu
;

68 
	sA_dec_


69 {íum {
	mA_fun˘i⁄Dec
, 
	mA_v¨Dec
, 
	mA_ty≥Dec
} 
	mköd
;

70 
A_pos
 
	mpos
;

71 uni⁄ {
A_fundecLi°
 
	mfun˘i⁄
;

73 °ru˘ {
S_symbﬁ
 
	mv¨
; S_symbﬁ 
	mtyp
; 
A_exp
 
	möô
; 
boﬁ
 
	mesˇ≥
;} var;

74 
A_«mëyLi°
 
	mty≥
;

75 } 
	mu
;

78 
	sA_ty_
 {íum {
	mA_«meTy
, 
	mA_ªc‹dTy
, 
	mA_¨øyTy
} 
	mköd
;

79 
A_pos
 
	mpos
;

80 uni⁄ {
S_symbﬁ
 
	m«me
;

81 
A_fõldLi°
 
	mªc‹d
;

82 
S_symbﬁ
 
	m¨øy
;

83 } 
	mu
;

88 
	sA_fõld_
 {
S_symbﬁ
 
	m«me
, 
	mtyp
; 
A_pos
 
	mpos
; 
boﬁ
 
	mesˇ≥
;};

89 
	sA_fõldLi°_
 {
A_fõld
 
	mhód
; 
A_fõldLi°
 
	mèû
;};

90 
	sA_expLi°_
 {
A_exp
 
	mhód
; 
A_expLi°
 
	mèû
;};

91 
	sA_fundec_
 {
A_pos
 
	mpos
;

92 
S_symbﬁ
 
	m«me
; 
A_fõldLi°
 
	m∑øms
;

93 
S_symbﬁ
 
	mªsu…
; 
A_exp
 
	mbody
;};

95 
	sA_fundecLi°_
 {
A_fundec
 
	mhód
; 
A_fundecLi°
 
	mèû
;};

96 
	sA_decLi°_
 {
A_dec
 
	mhód
; 
A_decLi°
 
	mèû
;};

97 
	sA_«mëy_
 {
S_symbﬁ
 
	m«me
; 
A_ty
 
	mty
;};

98 
	sA_«mëyLi°_
 {
A_«mëy
 
	mhód
; 
A_«mëyLi°
 
	mèû
;};

99 
	sA_efõld_
 {
S_symbﬁ
 
	m«me
; 
A_exp
 
	mexp
;};

100 
	sA_efõldLi°_
 {
A_efõld
 
	mhód
; 
A_efõldLi°
 
	mèû
;};

104 
A_v¨
 
A_Sim∂eV¨
(
A_pos
 
pos
, 
S_symbﬁ
 
sym
);

105 
A_v¨
 
A_FõldV¨
(
A_pos
 
pos
, A_v¨ 
v¨
, 
S_symbﬁ
 
sym
);

106 
A_v¨
 
A_Subs¸ùtV¨
(
A_pos
 
pos
, A_v¨ 
v¨
, 
A_exp
 
exp
);

107 
A_exp
 
A_V¨Exp
(
A_pos
 
pos
, 
A_v¨
 
v¨
);

108 
A_exp
 
A_NûExp
(
A_pos
 
pos
);

109 
A_exp
 
A_I¡Exp
(
A_pos
 
pos
, 
i
);

110 
A_exp
 
A_SåögExp
(
A_pos
 
pos
, 
°rög
 
s
);

111 
A_exp
 
A_CÆlExp
(
A_pos
 
pos
, 
S_symbﬁ
 
func
, 
A_expLi°
 
¨gs
);

112 
A_exp
 
A_OpExp
(
A_pos
 
pos
, 
A_›î
 
›î
, A_ex∞
À·
, A_ex∞
right
);

113 
A_exp
 
A_Rec‹dExp
(
A_pos
 
pos
, 
S_symbﬁ
 
typ
, 
A_efõldLi°
 
fõlds
);

114 
A_exp
 
A_SeqExp
(
A_pos
 
pos
, 
A_expLi°
 
£q
);

115 
A_exp
 
A_AssignExp
(
A_pos
 
pos
, 
A_v¨
 
v¨
, A_ex∞
exp
);

116 
A_exp
 
A_IfExp
(
A_pos
 
pos
, A_ex∞
ã°
, A_ex∞
thí
, A_ex∞
ñ£e
);

117 
A_exp
 
A_WhûeExp
(
A_pos
 
pos
, A_ex∞
ã°
, A_ex∞
body
);

118 
A_exp
 
A_F‹Exp
(
A_pos
 
pos
, 
S_symbﬁ
 
v¨
, A_ex∞
lo
, A_ex∞
hi
, A_ex∞
body
);

119 
A_exp
 
A_BªakExp
(
A_pos
 
pos
);

120 
A_exp
 
A_LëExp
(
A_pos
 
pos
, 
A_decLi°
 
decs
, A_ex∞
body
);

121 
A_exp
 
A_AºayExp
(
A_pos
 
pos
, 
S_symbﬁ
 
typ
, A_ex∞
size
, A_ex∞
öô
);

122 
A_dec
 
A_Fun˘i⁄Dec
(
A_pos
 
pos
, 
A_fundecLi°
 
fun˘i⁄
);

123 
A_dec
 
A_V¨Dec
(
A_pos
 
pos
, 
S_symbﬁ
 
v¨
, S_symbﬁ 
typ
, 
A_exp
 
öô
);

124 
A_dec
 
A_Ty≥Dec
(
A_pos
 
pos
, 
A_«mëyLi°
 
ty≥
);

125 
A_ty
 
A_NameTy
(
A_pos
 
pos
, 
S_symbﬁ
 
«me
);

126 
A_ty
 
A_Rec‹dTy
(
A_pos
 
pos
, 
A_fõldLi°
 
ªc‹d
);

127 
A_ty
 
A_AºayTy
(
A_pos
 
pos
, 
S_symbﬁ
 
¨øy
);

128 
A_fõld
 
A_Fõld
(
A_pos
 
pos
, 
S_symbﬁ
 
«me
, S_symbﬁ 
typ
);

129 
A_fõldLi°
 
A_FõldLi°
(
A_fõld
 
hód
, A_fõldLi° 
èû
);

130 
A_expLi°
 
A_ExpLi°
(
A_exp
 
hód
, A_expLi° 
èû
);

131 
A_fundec
 
A_Fundec
(
A_pos
 
pos
, 
S_symbﬁ
 
«me
, 
A_fõldLi°
 
∑øms
, S_symbﬁ 
ªsu…
,

132 
A_exp
 
body
);

133 
A_fundecLi°
 
A_FundecLi°
(
A_fundec
 
hód
, A_fundecLi° 
èû
);

134 
A_decLi°
 
A_DecLi°
(
A_dec
 
hód
, A_decLi° 
èû
);

135 
A_«mëy
 
A_Namëy
(
S_symbﬁ
 
«me
, 
A_ty
 
ty
);

136 
A_«mëyLi°
 
A_NamëyLi°
(
A_«mëy
 
hód
, A_«mëyLi° 
èû
);

137 
A_efõld
 
A_Efõld
(
S_symbﬁ
 
«me
, 
A_exp
 
exp
);

138 
A_efõldLi°
 
A_EfõldLi°
(
A_efõld
 
hód
, A_efõldLi° 
èû
);

	@assem.c

6 
	~<°dio.h
>

7 
	~<°dlib.h
>

8 
	~<°rög.h
>

9 
	~"utû.h
"

10 
	~"symbﬁ.h
"

11 
	~"absyn.h
"

12 
	~"ãmp.h
"

13 
	~"åì.h
"

14 
	~"as£m.h
"

15 
	~"‰ame.h
"

16 
	~"îr‹msg.h
"

18 
AS_èrgës
 
	$AS_T¨gës
(
Temp_œbñLi°
 
œbñs
) {

19 
AS_èrgës
 
p
 = 
	`checked_mÆloc
 ( *p);

20 
p
->
œbñs
=labels;

21  
p
;

22 
	}
}

24 
AS_ö°r
 
	$AS_O≥r
(
°rög
 
a
, 
Temp_ãmpLi°
 
d
, Temp_ãmpLi° 
s
, 
AS_èrgës
 
j
) {

25 
AS_ö°r
 
p
 = (AS_ö°rË
	`checked_mÆloc
 ( *p);

26 
p
->
köd
 = 
I_OPER
;

27 
p
->
u
.
OPER
.
as£m
=
a
;

28 
p
->
u
.
OPER
.
d°
=
d
;

29 
p
->
u
.
OPER
.
§c
=
s
;

30 
p
->
u
.
OPER
.
jumps
=
j
;

31  
p
;

32 
	}
}

34 
AS_ö°r
 
	$AS_Labñ
(
°rög
 
a
, 
Temp_œbñ
 
œbñ
) {

35 
AS_ö°r
 
p
 = (AS_ö°rË
	`checked_mÆloc
 ( *p);

36 
p
->
köd
 = 
I_LABEL
;

37 
p
->
u
.
LABEL
.
as£m
=
a
;

38 
p
->
u
.
LABEL
.
œbñ
=label;

39  
p
;

40 
	}
}

42 
AS_ö°r
 
	$AS_Move
(
°rög
 
a
, 
Temp_ãmpLi°
 
d
, Temp_ãmpLi° 
s
) {

43 
AS_ö°r
 
p
 = (AS_ö°rË
	`checked_mÆloc
 ( *p);

44 
p
->
köd
 = 
I_MOVE
;

45 
p
->
u
.
MOVE
.
as£m
=
a
;

46 
p
->
u
.
MOVE
.
d°
=
d
;

47 
p
->
u
.
MOVE
.
§c
=
s
;

48  
p
;

49 
	}
}

51 
AS_ö°rLi°
 
	$AS_In°rLi°
(
AS_ö°r
 
hód
, 
AS_ö°rLi°
 
èû
)

52 {
AS_ö°rLi°
 
p
 = (AS_ö°rLi°Ë
	`checked_mÆloc
 ( *p);

53 
p
->
hód
=hód;Ö->
èû
=tail;

54  
p
;

55 
	}
}

58 
AS_ö°rLi°
 
	$AS_•li˚
(
AS_ö°rLi°
 
a
, AS_ö°rLi° 
b
) {

59 
AS_ö°rLi°
 
p
;

60 i‡(
a
==
NULL
Ë 
b
;

61 
p
=
a
;Ö->
èû
!=
NULL
;Ö=p->tail) ;

62 
p
->
èû
=
b
;

63  
a
;

64 
	}
}

66 
Temp_ãmp
 
	$¡hTemp
(
Temp_ãmpLi°
 
li°
, 
i
) {

67 
	`as£π
(
li°
);

68 i‡(
i
==0Ë 
li°
->
hód
;

69  
	`¡hTemp
(
li°
->
èû
,
i
-1);

70 
	}
}

72 
Temp_œbñ
 
	$¡hLabñ
(
Temp_œbñLi°
 
li°
, 
i
) {

73 
	`as£π
(
li°
);

74 i‡(
i
==0Ë 
li°
->
hód
;

75  
	`¡hLabñ
(
li°
->
èû
,
i
-1);

76 
	}
}

79 
°rög
 
	$C⁄vît_to_physiˇl
(
Temp_ãmp
 
r
)

81 if(
r
 =
	`F_FP
())

83 if(
r
 =
	`F_RV
())

85 if(
r
 =
	`F_S¸©chTemp
())

87 if(
r
 =
	`F_As£mS¸©chTemp
(0))

89 if(
r
 =
	`F_As£mS¸©chTemp
(1))

91 if(
r
 =
	`F_SP
())

94 
	`as£π
(0);

95 
	}
}

101 
	$f‹m©
(*
ªsu…
, 
°rög
 
as£m
,

102 
Temp_ãmpLi°
 
d°
, Temp_ãmpLi° 
§c
,

103 
AS_èrgës
 
jumps
)

105 *
p
;

106 
i
 = 0;

107 
p
 = 
as£m
;Ö && *p != '\0';Ö++)

108 i‡(*
p
 == '`')

109 *(++
p
)) {

110 's': {
n
 = 
	`©oi
(++
p
);

111 
°rög
 
s
 = 
	`C⁄vît_to_physiˇl
(
	`¡hTemp
(
§c
, 
n
));

112 
	`°r˝y
(
ªsu…
+
i
, 
s
);

113 
i
 +
	`°æí
(
s
);

116 'd': {
n
 = 
	`©oi
(++
p
);

117 
°rög
 
s
 = 
	`C⁄vît_to_physiˇl
(
	`¡hTemp
(
d°
, 
n
));

118 
	`°r˝y
(
ªsu…
+
i
, 
s
);

119 
i
 +
	`°æí
(
s
);

122 'j': 
	`as£π
(
jumps
);

123 {
n
 = 
	`©oi
(++
p
);

124 
°rög
 
s
 = 
	`Temp_œbñ°rög
(
	`¡hLabñ
(
jumps
->
œbñs
,
n
));

125 
	`°r˝y
(
ªsu…
+
i
, 
s
);

126 
i
 +
	`°æí
(
s
);

129 '`': 
ªsu…
[
i
] = '`'; i++;

131 : 
	`as£π
(0);

133 {
ªsu…
[
i
] = *
p
; i++; }

134 
ªsu…
[
i
] = '\0';

135 
	}
}

138 
	$AS_¥öt
(
FILE
 *
out
, 
AS_ö°r
 
i
)

140 
r
[200];

141 
i
->
köd
) {

142 
I_OPER
:

143 
	`f‹m©
(
r
, 
i
->
u
.
OPER
.
as£m
, i->u.OPER.
d°
, i->u.OPER.
§c
, i->u.OPER.
jumps
);

144 
	`Ârötf
(
out
, "\t%s\n", 
r
);

146 
I_LABEL
:

147 
	`f‹m©
(
r
, 
i
->
u
.
LABEL
.
as£m
, 
NULL
, NULL, NULL);

148 
	`Ârötf
(
out
, "%s\n", 
r
);

151 
I_MOVE
:

152 
	`f‹m©
(
r
, 
i
->
u
.
MOVE
.
as£m
, i->u.MOVE.
d°
, i->u.MOVE.
§c
, 
NULL
);

153 
	`Ârötf
(
out
, "\t%s\n", 
r
);

156 
	}
}

159 
	$AS_¥ötIn°rLi°
 (
FILE
 *
out
, 
AS_ö°rLi°
 
iLi°
)

161 ; 
iLi°
; iLi°=iLi°->
èû
) {

162 
	`AS_¥öt
(
out
, 
iLi°
->
hód
);

164 
	`Ârötf
(
out
, "\n");

165 
	}
}

167 
AS_¥oc
 
	$AS_Proc
(
°rög
 
p
, 
AS_ö°rLi°
 
b
, såög 
e
)

168 {
AS_¥oc
 
¥oc
 = 
	`checked_mÆloc
((*proc));

169 
¥oc
->
¥ﬁog
=
p
;Öroc->
body
=
b
;Öroc->
ïûog
=
e
;

170  
¥oc
;

171 
	}
}

	@assem.h

5 #i‚de‡
_ASSEM_H_


6 
	#_ASSEM_H_


	)

9 °ru˘ {
Temp_œbñLi°
 
	mœbñs
;} *
	tAS_èrgës
;

10 
AS_èrgës
 
AS_T¨gës
(
Temp_œbñLi°
 
œbñs
);

12 
AS_ö°r_
 *
	tAS_ö°r
;

13 
	sAS_ö°r_
 {Énum {
	mI_OPER
, 
	mI_LABEL
, 
	mI_MOVE
} 
	mköd
;

14 uni⁄ {°ru˘ {
°rög
 
	mas£m
; 
Temp_ãmpLi°
 
	md°
, 
	m§c
;

15 
AS_èrgës
 
	mjumps
;} 
	mOPER
;

16 °ru˘ {
°rög
 
	mas£m
; 
Temp_œbñ
 
	mœbñ
;} 
	mLABEL
;

17 °ru˘ {
°rög
 
	mas£m
; 
Temp_ãmpLi°
 
	md°
, 
	m§c
;} 
	mMOVE
;

18 } 
	mu
;

21 
AS_ö°r
 
AS_O≥r
(
°rög
 
a
, 
Temp_ãmpLi°
 
d
, Temp_ãmpLi° 
s
, 
AS_èrgës
 
j
);

22 
AS_ö°r
 
AS_Labñ
(
°rög
 
a
, 
Temp_œbñ
 
œbñ
);

23 
AS_ö°r
 
AS_Move
(
°rög
 
a
, 
Temp_ãmpLi°
 
d
, Temp_ãmpLi° 
s
);

25 
AS_¥öt
(
FILE
 *
out
, 
AS_ö°r
 
i
);

27 
AS_ö°rLi°_
 *
	tAS_ö°rLi°
;

28 
	sAS_ö°rLi°_
 { 
AS_ö°r
 
	mhód
; 
AS_ö°rLi°
 
	mèû
;};

29 
AS_ö°rLi°
 
AS_In°rLi°
(
AS_ö°r
 
hód
, AS_ö°rLi° 
èû
);

31 
AS_ö°rLi°
 
AS_•li˚
(AS_ö°rLi° 
a
, AS_ö°rLi° 
b
);

32 
AS_¥ötIn°rLi°
 (
FILE
 *
out
, 
AS_ö°rLi°
 
iLi°
);

34 
AS_¥oc_
 *
	tAS_¥oc
;

35 
	sAS_¥oc_
 {

36 
°rög
 
	m¥ﬁog
;

37 
AS_ö°rLi°
 
	mbody
;

38 
°rög
 
	mïûog
;

41 
AS_¥oc
 
AS_Proc
(
°rög
 
p
, 
AS_ö°rLi°
 
b
, såög 
e
);

	@canon.c

5 
	~<°dio.h
>

6 
	~"utû.h
"

7 
	~"symbﬁ.h
"

8 
	~"ãmp.h
"

9 
	~"åì.h
"

10 
	~"ˇn⁄.h
"

12 
expRefLi°_
 *
	texpRefLi°
;

13 
	sexpRefLi°_
 {
T_exp
 *
	mhód
; 
expRefLi°
 
	mèû
;};

16 
T_°m
 
do_°m
(T_°m 
°m
);

17 
°mExp
 
do_exp
(
T_exp
 
exp
);

18 
C_°mLi°Li°
 
mkBlocks
(
T_°mLi°
 
°ms
, 
Temp_œbñ
 
d⁄e
);

19 
T_°mLi°
 
gëNext
();

21 
expRefLi°
 
	$ExpRefLi°
(
T_exp
 *
hód
, 
expRefLi°
 
èû
)

22 {
expRefLi°
 
p
 = (expRefLi°Ë
	`checked_mÆloc
 ( *p);

23 
p
->
hód
=hód;Ö->
èû
=tail;

24  
p
;

25 
	}
}

27 
boﬁ
 
	$isN›
(
T_°m
 
x
)

28 {  
x
->
köd
 =
T_EXP
 && x->
u
.
EXP
->köd =
T_CONST
;

29 
	}
}

31 
T_°m
 
	$£q
(
T_°m
 
x
, T_°m 
y
)

33 i‡(
	`isN›
(
x
)Ë 
y
;

34 i‡(
	`isN›
(
y
)Ë 
x
;

35  
	`T_Seq
(
x
,
y
);

36 
	}
}

38 
boﬁ
 
	$commuã
(
T_°m
 
x
, 
T_exp
 
y
)

40 i‡(
	`isN›
(
x
)Ë 
TRUE
;

41 i‡(
y
->
köd
 =
T_NAME
 || y->köd =
T_CONST
Ë 
TRUE
;

42  
FALSE
;

43 
	}
}

45 
	s°mExp
 {
T_°m
 
	ms
; 
T_exp
 
	me
;};

47 
T_°m
 
	$ª‹dî
(
expRefLi°
 
æi°
) {

48 i‡(!
æi°
Ë 
	`T_Exp
(
	`T_C⁄°
(0));

49 i‡((*
æi°
->
hód
)->
köd
==
T_CALL
) {

51 
Temp_ãmp
 
t
 = 
	`F_RV
();

52 *
æi°
->
hód
 = 
	`T_E£q
(
	`T_Move
(
	`T_Temp
(
t
),*rlist->head),T_Temp(t));

53  
	`ª‹dî
(
æi°
);

56 
°mExp
 
hd
 = 
	`do_exp
(*
æi°
->
hód
);

57 
T_°m
 
s
 = 
	`ª‹dî
(
æi°
->
èû
);

58 i‡(
	`commuã
(
s
,
hd
.
e
)) {

59 *
æi°
->
hód
=
hd
.
e
;

60  
	`£q
(
hd
.
s
,s);

65 
off£t
 = 
	`F_√wSpûlLoˇti⁄
();

66 *
æi°
->
hód
=
	`T_Mem
(
	`T_Bö›
(
T_∂us
, 
	`T_Temp
(
	`F_FP
()), 
	`T_C⁄°
(
off£t
)));

67  
	`£q
(
hd
.
s
, seq(
	`T_Move
(
	`T_Mem
(
	`T_Bö›
(
T_∂us
, 
	`T_Temp
(
	`F_FP
()), 
	`T_C⁄°
(
off£t
))), hd.
e
), s));

70 
	}
}

72 
expRefLi°
 
	$gë_ˇŒ_æi°
(
T_exp
 
exp
)

73 {
expRefLi°
 
æi°
, 
cuº
;

74 
T_expLi°
 
¨gs
 = 
exp
->
u
.
CALL
.args;

75 
cuº
 = 
æi°
 = 
	`ExpRefLi°
(&
exp
->
u
.
CALL
.
fun
, 
NULL
);

76 ;
¨gs
;árgs˜rgs->
èû
) {

77 
cuº
 = cuº->
èû
 = 
	`ExpRefLi°
(&
¨gs
->
hód
, 
NULL
);

79  
æi°
;

80 
	}
}

82 
°mExp
 
	$StmExp
(
T_°m
 
°m
, 
T_exp
 
exp
) {

83 
°mExp
 
x
;

84 
x
.
s
 = 
°m
;

85 
x
.
e
 = 
exp
;

86  
x
;

87 
	}
}

89 
°mExp
 
	$do_exp
(
T_exp
 
exp
)

91 
exp
->
köd
) {

92 
T_BINOP
:

93  
	`StmExp
(
	`ª‹dî
(
	`ExpRefLi°
(&
exp
->
u
.
BINOP
.
À·
,

94 
	`ExpRefLi°
(&
exp
->
u
.
BINOP
.
right
, 
NULL
))),

95 
exp
);

96 
T_MEM
:

97  
	`StmExp
(
	`ª‹dî
(
	`ExpRefLi°
(&
exp
->
u
.
MEM
, 
NULL
)),Éxp);

98 
T_ESEQ
:

99 {
°mExp
 
x
 = 
	`do_exp
(
exp
->
u
.
ESEQ
.exp);

100  
	`StmExp
(
	`£q
(
	`do_°m
(
exp
->
u
.
ESEQ
.
°m
), 
x
.
s
), x.
e
);

102 
T_CALL
:

103  
	`StmExp
(
	`ª‹dî
(
	`gë_ˇŒ_æi°
(
exp
)),Éxp);

105  
	`StmExp
(
	`ª‹dî
(
NULL
), 
exp
);

107 
	}
}

110 
T_°m
 
	$do_°m
(
T_°m
 
°m
)

112 
°m
->
köd
) {

113 
T_SEQ
:

114 if(
°m
->
u
.
SEQ
.
right
){

115  
	`£q
(
	`do_°m
(
°m
->
u
.
SEQ
.
À·
), do_°m(°m->u.SEQ.
right
));

117  
	`do_°m
(
°m
->
u
.
SEQ
.
À·
);

119 
T_JUMP
:

120  
	`£q
(
	`ª‹dî
(
	`ExpRefLi°
(&
°m
->
u
.
JUMP
.
exp
, 
NULL
)), stm);

121 
T_CJUMP
:

122  
	`£q
(
	`ª‹dî
(
	`ExpRefLi°
(&
°m
->
u
.
CJUMP
.
À·
,

123 
	`ExpRefLi°
(&
°m
->
u
.
CJUMP
.
right
,
NULL
))), stm);

124 
T_MOVE
:

125 i‡(
°m
->
u
.
MOVE
.
d°
->
köd
 =
T_TEMP
 && stm->u.MOVE.
§c
->köd =
T_CALL
)

126  
	`£q
(
	`ª‹dî
(
	`gë_ˇŒ_æi°
(
°m
->
u
.
MOVE
.
§c
)), stm);

127 i‡(
°m
->
u
.
MOVE
.
d°
->
köd
 =
T_TEMP
)

128  
	`£q
(
	`ª‹dî
(
	`ExpRefLi°
(&
°m
->
u
.
MOVE
.
§c
, 
NULL
)), stm);

129 i‡(
°m
->
u
.
MOVE
.
d°
->
köd
 =
T_MEM
)

130  
	`£q
(
	`ª‹dî
(
	`ExpRefLi°
(&
°m
->
u
.
MOVE
.
d°
->u.
MEM
,

131 
	`ExpRefLi°
(&
°m
->
u
.
MOVE
.
§c
, 
NULL
))), stm);

132 i‡(
°m
->
u
.
MOVE
.
d°
->
köd
 =
T_ESEQ
) {

133 
T_°m
 
s
 = 
°m
->
u
.
MOVE
.
d°
->u.
ESEQ
.stm;

134 
°m
->
u
.
MOVE
.
d°
 = stm->u.MOVE.d°->u.
ESEQ
.
exp
;

135  
	`do_°m
(
	`T_Seq
(
s
, 
°m
));

137 
	`as£π
(0);

138 
T_EXP
:

139 i‡(
°m
->
u
.
EXP
->
köd
 =
T_CALL
)

140  
	`£q
(
	`ª‹dî
(
	`gë_ˇŒ_æi°
(
°m
->
u
.
EXP
)), stm);

141  
	`£q
(
	`ª‹dî
(
	`ExpRefLi°
(&
°m
->
u
.
EXP
, 
NULL
)), stm);

143  
°m
;

145 
	}
}

148 
T_°mLi°
 
	$löór
(
T_°m
 
°m
, 
T_°mLi°
 
right
)

150 i‡(
°m
->
köd
 =
T_SEQ
)

151  
	`löór
(
°m
->
u
.
SEQ
.
À·
,löór(°m->u.SEQ.
right
,right));

152  
	`T_StmLi°
(
°m
, 
right
);

153 
	}
}

159 
T_°mLi°
 
	$C_löórize
(
T_°m
 
°m
)

161  
	`löór
(
	`do_°m
(
°m
), 
NULL
);

162 
	}
}

164 
C_°mLi°Li°
 
	$StmLi°Li°
(
T_°mLi°
 
hód
, 
C_°mLi°Li°
 
èû
)

165 {
C_°mLi°Li°
 
p
 = (C_°mLi°Li°Ë
	`checked_mÆloc
 ( *p);

166 
p
->
hód
=hód;Ö->
èû
=tail;

167  
p
;

168 
	}
}

171 
C_°mLi°Li°
 
	$√xt
(
T_°mLi°
 
¥ev°ms
, T_°mLi° 
°ms
, 
Temp_œbñ
 
d⁄e
)

173 i‡(!
°ms
)

174  
	`√xt
(
¥ev°ms
,

175 
	`T_StmLi°
(
	`T_Jump
(
	`T_Name
(
d⁄e
), 
	`Temp_LabñLi°
(d⁄e, 
NULL
)),

176 
NULL
), 
d⁄e
);

177 i‡(
°ms
->
hód
->
köd
 =
T_JUMP
 || stms->hód->köd =
T_CJUMP
) {

178 
C_°mLi°Li°
 
°mLi°s
;

179 
¥ev°ms
->
èû
 = 
°ms
;

180 
°mLi°s
 = 
	`mkBlocks
(
°ms
->
èû
, 
d⁄e
);

181 
°ms
->
èû
 = 
NULL
;

182  
°mLi°s
;

184 i‡(
°ms
->
hód
->
köd
 =
T_LABEL
) {

185 
Temp_œbñ
 
œb
 = 
°ms
->
hód
->
u
.
LABEL
;

186  
	`√xt
(
¥ev°ms
, 
	`T_StmLi°
(
	`T_Jump
(
	`T_Name
(
œb
), 
	`Temp_LabñLi°
÷ab, 
NULL
)),

187 
°ms
), 
d⁄e
);

190 
¥ev°ms
->
èû
 = 
°ms
;

191  
	`√xt
(
°ms
, stms->
èû
, 
d⁄e
);

193 
	}
}

196 
C_°mLi°Li°
 
	$mkBlocks
(
T_°mLi°
 
°ms
, 
Temp_œbñ
 
d⁄e
)

198 i‡(!
°ms
) {

199  
NULL
;

203 i‡(
°ms
->
hód
->
köd
 !
T_LABEL
) {

204  
	`mkBlocks
(
	`T_StmLi°
(
	`T_Labñ
(
	`Temp_√wœbñ
()), 
°ms
), 
d⁄e
);

207  
	`StmLi°Li°
(
°ms
, 
	`√xt
(°ms, stms->
èû
, 
d⁄e
));

208 
	}
}

221 
C_block
 
	$C_basicBlocks
(
T_°mLi°
 
°mLi°
)

223 
C_block
 
b
;

224 
b
.
œbñ
 = 
	`Temp_√wœbñ
();

225 
b
.
°mLi°s
 = 
	`mkBlocks
(
°mLi°
, b.
œbñ
);

227  
b
;

228 
	}
}

230 
S_èbÀ
 
	gblock_ív
;

231 
C_block
 
	gglobÆ_block
;

233 
T_°mLi°
 
	$gëLa°
(
T_°mLi°
 
li°
)

235 
T_°mLi°
 
œ°
 = 
li°
;

236 
œ°
->
èû
->tail)Üast =Üast->tail;

237  
œ°
;

238 
	}
}

240 
	$åa˚
(
T_°mLi°
 
li°
)

242 
T_°mLi°
 
œ°
 = 
	`gëLa°
(
li°
);

243 
T_°m
 
œb
 = 
li°
->
hód
;

244 
T_°m
 
s
 = 
œ°
->
èû
->
hód
;

245 
	`S_íãr
(
block_ív
, 
œb
->
u
.
LABEL
, 
NULL
);

246 i‡(
s
->
köd
 =
T_JUMP
) {

247 
T_°mLi°
 
èrgë
 = (T_°mLi°Ë
	`S_look
(
block_ív
, 
s
->
u
.
JUMP
.
jumps
->
hód
);

248 i‡(!
s
->
u
.
JUMP
.
jumps
->
èû
 && 
èrgë
) {

249 
œ°
->
èû
 = 
èrgë
;

250 
	`åa˚
(
èrgë
);

252 
œ°
->
èû
->èû = 
	`gëNext
();

255 i‡(
s
->
köd
 =
T_CJUMP
) {

256 
T_°mLi°
 
åue
 = (T_°mLi°Ë
	`S_look
(
block_ív
, 
s
->
u
.
CJUMP
.true);

257 
T_°mLi°
 
Ál£
 = (T_°mLi°Ë
	`S_look
(
block_ív
, 
s
->
u
.
CJUMP
.false);

258 i‡(
Ál£
) {

259 
œ°
->
èû
->èû = 
Ál£
;

260 
	`åa˚
(
Ál£
);

262 i‡(
åue
) {

263 
œ°
->
èû
->
hód
 = 
	`T_Cjump
(
	`T_nŸRñ
(
s
->
u
.
CJUMP
.
›
), s->u.CJUMP.
À·
,

264 
s
->
u
.
CJUMP
.
right
, s->u.CJUMP.
Ál£
,

265 
s
->
u
.
CJUMP
.
åue
);

266 
œ°
->
èû
->èû = 
åue
;

267 
	`åa˚
(
åue
);

270 
Temp_œbñ
 
Ál£
 = 
	`Temp_√wœbñ
();

271 
œ°
->
èû
->
hód
 = 
	`T_Cjump
(
s
->
u
.
CJUMP
.
›
, s->u.CJUMP.
À·
,

272 
s
->
u
.
CJUMP
.
right
, s->u.CJUMP.
åue
, 
Ál£
);

273 
œ°
->
èû
->èû = 
	`T_StmLi°
(
	`T_Labñ
(
Ál£
), 
	`gëNext
());

276 
	`as£π
(0);

277 
	}
}

281 
T_°mLi°
 
	$gëNext
()

283 i‡(!
globÆ_block
.
°mLi°s
)

284  
	`T_StmLi°
(
	`T_Labñ
(
globÆ_block
.
œbñ
), 
NULL
);

286 
T_°mLi°
 
s
 = 
globÆ_block
.
°mLi°s
->
hód
;

287 i‡(
	`S_look
(
block_ív
, 
s
->
hód
->
u
.
LABEL
)) {

288 
	`åa˚
(
s
);

289  
s
;

292 
globÆ_block
.
°mLi°s
 = globÆ_block.°mLi°s->
èû
;

293  
	`gëNext
();

296 
	}
}

307 
T_°mLi°
 
	$C_åa˚ScheduÀ
(
C_block
 
b
)

308 { 
C_°mLi°Li°
 
sLi°
;

309 
block_ív
 = 
	`S_em±y
();

310 
globÆ_block
 = 
b
;

312 
sLi°
=
globÆ_block
.
°mLi°s
; sLi°; sLi°=sLi°->
èû
) {

313 
	`S_íãr
(
block_ív
, 
sLi°
->
hód
->hód->
u
.
LABEL
, sList->head);

316  
	`gëNext
();

317 
	}
}

	@canon.h

6 #i‚de‡
_CANON_H_


7 
	#_CANON_H_


	)

11 
C_°mLi°Li°_
 *
	tC_°mLi°Li°
;

12 
	sC_block
 { 
C_°mLi°Li°
 
	m°mLi°s
; 
Temp_œbñ
 
	mœbñ
;};

13 
	sC_°mLi°Li°_
 { 
T_°mLi°
 
	mhód
; 
C_°mLi°Li°
 
	mèû
;};

15 
T_°mLi°
 
C_löórize
(
T_°m
 
°m
);

22 
C_block
 
C_basicBlocks
(
T_°mLi°
 
°mLi°
);

35 
T_°mLi°
 
C_åa˚ScheduÀ
(
C_block
 
b
);

	@codegen.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

3 
	~"utû.h
"

4 
	~"symbﬁ.h
"

5 
	~"ãmp.h
"

6 
	~"åì.h
"

7 
	~"‰ame.h
"

8 
	~"as£m.h
"

9 
	~"codegí.h
"

11 * 
	$ôﬂ
(
i
)

13 * 
°r
 = 
	`checked_mÆloc
(10);

15 
	`•rötf
(
°r
, "%d", 
i
);

16  
°r
;

17 
	}
}

19 * 
	$gëAs£mOp
(
T_böOp
 
böOp
)

21 
böOp
){

22 
T_∂us
:

24 
T_möus
:

26 
T_mul
:

28 
T_div
:

30 
T_™d
:

31 
T_‹
:

32 
T_lshi·
:

33 
T_rshi·
:

34 
T_¨shi·
:

35 
T_x‹
:

36 
	`as£π
(0);

38 
	}
}

43 * 
	$gëAs£mJccOp
(
T_ªlOp
 
ªlOp
)

45 
ªlOp
){

46 
T_eq
:

48 
T_√
:

50 
T_…
:

52 
T_gt
:

54 
T_À
:

56 
T_ge
:

58 
T_u…
:

59 
T_uÀ
:

60 
T_ugt
:

61 
T_uge
:

62 
	`as£π
(0);

64 
	}
}

66 
Temp_ãmpLi°
 
	$L
(
Temp_ãmp
 
h
, 
Temp_ãmpLi°
 
t
Ë{  
	`Temp_TempLi°
(h,Å);
	}
}

68 
	$munchArgs
(
T_expLi°
 
expLi°
)

71 
¨gNums
 = 0;

79 ; 
expLi°
 !
NULL
;ÉxpLi° =ÉxpLi°->
èû
){

80 
Temp_ãmp
 
r
 = 
	`munchExp
(
expLi°
->
hód
, 0);

81 * 
as£m
 = "pushl\t `s0";

83 
	`emô
(
	`AS_O≥r
(
as£m
, 
NULL
, 
	`L
(
r
, NULL), NULL));

84 
¨gNums
 ++;

86  
¨gNums
;

87 
	}
}

89 
Temp_ãmp
 
	$munchExp
(
T_exp
 
e
, 
i
)

92 
e
->
köd
){

93 
T_BINOP
:{

94 
T_exp
 
À·
 = 
e
->
u
.
BINOP
.À·, 
right
 =É->u.BINOP.right;

95 if(
e
->
u
.
BINOP
.
›
 =
T_div
){

96 * 
as£m1
 = "movl\t`s0, `d0";

97 * 
as£m2
 = 
	`gëAs£mOp
(
e
->
u
.
BINOP
.
›
);

99 
Temp_ãmp
 
r
 = 
	`F_As£mS¸©chTemp
(
i
);

102 
	`emô
(
	`AS_O≥r
(
as£m1
, 
	`L
(
	`F_RV
(), 
NULL
), L(
	`munchExp
(
À·
, 
i
), NULL), NULL));

103 
	`emô
(
	`AS_O≥r
(
as£m1
, 
	`L
(
r
, 
NULL
), L(
	`munchExp
(
right
, 
i
), NULL), NULL));

105 
	`emô
(
	`AS_O≥r
("˛td", 
NULL
, NULL, NULL));

106 
as£m2
 = 
	`ßµíd
(assem2, "`s0");

107 
	`emô
(
	`AS_O≥r
(
as£m2
, 
NULL
, 
	`L
(
r
, NULL), NULL));

108  
	`F_RV
();

111 if(
À·
->
köd
 =
T_TEMP


112 && 
right
->
köd
 =
T_CONST
){

113 * 
as£m1
 = "movl\t`s0, `d0";

114 * 
as£m2
 = 
	`gëAs£mOp
(
e
->
u
.
BINOP
.
›
);

116 
Temp_ãmp
 
r
 = 
	`F_As£mS¸©chTemp
(
i
);

118 
	`emô
(
	`AS_O≥r
(
as£m1
, 
	`L
(
r
, 
NULL
), L(
À·
->
u
.
TEMP
, NULL), NULL));

119 
as£m2
 = 
	`ßµíd
(assem2, "$");

120 
as£m2
 = 
	`ßµíd
◊s£m2, 
	`ôﬂ
(
right
->
u
.
CONST
));

121 
as£m2
 = 
	`ßµíd
(assem2, ", `d0");

122 
	`emô
(
	`AS_O≥r
(
as£m2
, 
	`L
(
r
, 
NULL
), NULL, NULL));

123  
r
;

126 if(
À·
->
köd
 =
T_CONST


127 && 
right
->
köd
 =
T_TEMP
){

128 * 
as£m1
 = "movl\t`s0, `d0";

129 * 
as£m2
 = 
	`gëAs£mOp
(
e
->
u
.
BINOP
.
›
);

131 
Temp_ãmp
 
r
 = 
	`F_As£mS¸©chTemp
(
i
);

133 
	`emô
(
	`AS_O≥r
(
as£m1
, 
	`L
(
r
, 
NULL
), L(
right
->
u
.
TEMP
, NULL), NULL));

134 
as£m2
 = 
	`ßµíd
(assem2, "$");

135 
as£m2
 = 
	`ßµíd
◊s£m2, 
	`ôﬂ
(
À·
->
u
.
CONST
));

136 
as£m2
 = 
	`ßµíd
(assem2, ", `d0");

137 
	`emô
(
	`AS_O≥r
(
as£m2
, 
	`L
(
r
, 
NULL
), NULL, NULL));

138  
r
;

141 if(
À·
->
köd
 =
T_MEM


142 && 
right
->
köd
 =
T_CONST
){

143 * 
as£m1
 = "movl\t(`s0), `d0";

144 * 
as£m2
 = 
	`gëAs£mOp
(
e
->
u
.
BINOP
.
›
);

146 
Temp_ãmp
 
r
 = 
	`F_As£mS¸©chTemp
(
i
);

148 
	`emô
(
	`AS_O≥r
(
as£m1
, 
	`L
(
r
, 
NULL
), L(
	`munchExp
(
À·
->
u
.
MEM
, 
i
), NULL), NULL));

149 
as£m2
 = 
	`ßµíd
(assem2, "$");

150 
as£m2
 = 
	`ßµíd
◊s£m2, 
	`ôﬂ
(
right
->
u
.
CONST
));

151 
as£m2
 = 
	`ßµíd
(assem2, ", `d0");

152 
	`emô
(
	`AS_O≥r
(
as£m2
, 
	`L
(
r
, 
NULL
), NULL, NULL));

153  
r
;

156 if(
À·
->
köd
 =
T_CONST


157 && 
right
->
köd
 =
T_MEM
){

158 * 
as£m1
 = "movl\t(`s0), `d0";

159 * 
as£m2
 = 
	`gëAs£mOp
(
e
->
u
.
BINOP
.
›
);

161 
Temp_ãmp
 
r
 = 
	`F_As£mS¸©chTemp
(
i
);

163 
	`emô
(
	`AS_O≥r
(
as£m1
, 
	`L
(
r
, 
NULL
), L(
	`munchExp
(
right
->
u
.
MEM
, 
i
), NULL), NULL));

164 
as£m2
 = 
	`ßµíd
(assem2, "$");

165 
as£m2
 = 
	`ßµíd
◊s£m2, 
	`ôﬂ
(
À·
->
u
.
CONST
));

166 
as£m2
 = 
	`ßµíd
(assem2, ", `d0");

167 
	`emô
(
	`AS_O≥r
(
as£m2
, 
	`L
(
r
, 
NULL
), NULL, NULL));

168  
r
;

183 * 
as£m1
 = "movl\t `s0, `d0";

184 
Temp_ãmp
 
r
 = 
	`F_As£mS¸©chTemp
(
i
);

185 
	`emô
(
	`AS_O≥r
(
as£m1
, 
	`L
(
r
, 
NULL
), L(
	`munchExp
(
À·
, 
i
), NULL), NULL));

186 * 
as£m2
 = "movl\t `s0, %esi";

187 
	`emô
(
	`AS_O≥r
(
as£m2
,
NULL
,
	`L
(
r
,NULL),NULL));

188 * 
push
 ="pushl\t%esi";

189 
	`emô
(
	`AS_O≥r
(
push
,
NULL
,NULL,NULL));

190 
	`emô
(
	`AS_O≥r
(
as£m1
,
	`L
(
r
, 
NULL
),L(
	`munchExp
(
right
,
i
),NULL),NULL));

191 * 
p›
 ="popl\t%esi";

192 
	`emô
(
	`AS_O≥r
(
p›
,
NULL
,NULL,NULL));

193 * 
as£m3
 = 
	`gëAs£mOp
(
e
->
u
.
BINOP
.
›
);

194 
as£m3
 = 
	`ßµíd
(assem3," `s0, %esi");

195 
	`emô
(
	`AS_O≥r
(
as£m3
, 
NULL
, 
	`L
(
r
, NULL), NULL));

196 * 
as£m4
 = "movl\t %esi, `d0";

197 
	`emô
(
	`AS_O≥r
(
as£m4
,
	`L
(
r
,
NULL
),NULL,NULL));

198  
r
;

201 
T_MEM
:{

202 
T_exp
 
me
 = 
e
->
u
.
MEM
;

204 if(
me
->
köd
 =
T_BINOP


205 && 
me
->
u
.
BINOP
.
›
 =
T_∂us


206 && 
me
->
u
.
BINOP
.
right
->
köd
 =
T_CONST
){

207 
T_exp
 
e1
 = 
me
->
u
.
BINOP
.
À·
;

209 
Temp_ãmp
 
r
 = 
	`F_As£mS¸©chTemp
(
i
);

210 * 
as£m
 = "movl\t";

212 
as£m
 = 
	`ßµíd
◊s£m, 
	`ôﬂ
(
me
->
u
.
BINOP
.
right
->u.
CONST
));

213 
as£m
 = 
	`ßµíd
(assem, "(`s0), ");

214 
as£m
 = 
	`ßµíd
(assem, "`d0");

215 
	`emô
(
	`AS_O≥r
(
as£m
, 
	`L
(
r
, 
NULL
), L(
	`munchExp
(
e1
, 
i
), NULL), NULL));

216  
r
;

219 if(
me
->
köd
 =
T_BINOP


220 && 
me
->
u
.
BINOP
.
›
 =
T_∂us


221 && 
me
->
u
.
BINOP
.
À·
->
köd
 =
T_CONST
){

222 
T_exp
 
e1
 = 
me
->
u
.
BINOP
.
right
;

224 
Temp_ãmp
 
r
 = 
	`F_As£mS¸©chTemp
(
i
);

225 * 
as£m
 = "movl\t";

227 
as£m
 = 
	`ßµíd
◊s£m, 
	`ôﬂ
(
me
->
u
.
BINOP
.
À·
->u.
CONST
));

228 
as£m
 = 
	`ßµíd
(assem, "(`s0), ");

229 
as£m
 = 
	`ßµíd
(assem, "`d0");

230 
	`emô
(
	`AS_O≥r
(
as£m
, 
	`L
(
r
, 
NULL
), L(
	`munchExp
(
e1
, 
i
), NULL), NULL));

231  
r
;

234 if(
me
->
köd
 =
T_CONST
){

236 
Temp_ãmp
 
r
 = 
	`F_As£mS¸©chTemp
(
i
);

237 * 
as£m
 = "movl\t$";

239 
as£m
 = 
	`ßµíd
◊s£m, 
	`ôﬂ
(
me
->
u
.
CONST
));

240 
as£m
 = 
	`ßµíd
(assem, "`d0");

241 
	`emô
(
	`AS_O≥r
(
as£m
, 
	`L
(
r
, 
NULL
), NULL, NULL));

242 * 
as£m1
 = "movl\t(`s0), `d0";

243 
	`emô
(
	`AS_O≥r
(
as£m1
,
	`L
(
r
,
NULL
),L(r,NULL),NULL));

244  
r
;

248 
T_exp
 
e1
 = 
me
;

250 
Temp_ãmp
 
r
 = 
	`F_As£mS¸©chTemp
(
i
);

251 * 
as£m
 = "movl\t(`s0), `d0";

253 
	`emô
(
	`AS_O≥r
(
as£m
, 
	`L
(
r
, 
NULL
), L(
	`munchExp
(
me
, 
i
), NULL), NULL));

254  
r
;

257 
T_TEMP
:{

258  
e
->
u
.
TEMP
;

260 
T_NAME
:{

263 
Temp_ãmp
 
r
 = 
	`F_As£mS¸©chTemp
(
i
);

264 * 
as£m
 = "movl\t$";

266 
as£m
 = 
	`ßµíd
◊s£m, 
	`S_«me
(
e
->
u
.
NAME
));

267 
as£m
 = 
	`ßµíd
(assem, ", `d0");

268 
	`emô
(
	`AS_O≥r
(
as£m
, 
	`L
(
r
, 
NULL
), NULL, NULL));

269  
r
;

271 
T_CONST
:{

274 
Temp_ãmp
 
r
 = 
	`F_As£mS¸©chTemp
(
i
);

275 * 
as£m
 = "movl\t$";

277 
as£m
 = 
	`ßµíd
◊s£m, 
	`ôﬂ
(
e
->
u
.
CONST
));

278 
as£m
 = 
	`ßµíd
(assem, ", `d0");

280 
	`emô
(
	`AS_O≥r
(
as£m
, 
	`L
(
r
, 
NULL
), NULL, NULL));

281  
r
;

283 
T_CALL
:{

284 * 
as£m
 = "call\t";

285 
¨gNums
 = 0;

286 
	`emô
(
	`AS_O≥r
("pushl\t%ecx", 
NULL
, NULL, NULL));

287 
	`emô
(
	`AS_O≥r
("pushl\t%edx", 
NULL
, NULL, NULL));

288 
¨gNums
 = 
	`munchArgs
(
e
->
u
.
CALL
.
¨gs
);

289 
	`as£π
(
e
->
u
.
CALL
.
fun
->
köd
 =
T_NAME
);

290 
as£m
 = 
	`ßµíd
◊s£m, 
	`S_«me
(
e
->
u
.
CALL
.
fun
->u.
NAME
));

291 
	`emô
(
	`AS_O≥r
(
as£m
, 
NULL
, NULL, 
	`AS_T¨gës
(
	`Temp_LabñLi°
(
e
->
u
.
CALL
.
fun
->u.
NAME
, NULL))));

293 if(
¨gNums
 != 0){

294 
as£m
 = "addl\t$";

295 
as£m
 = 
	`ßµíd
◊s£m, 
	`ôﬂ
(
¨gNums
 * 4));

296 
as£m
 = 
	`ßµíd
(assem, ", `d0");

297 
	`emô
(
	`AS_O≥r
(
as£m
, 
	`L
(
	`F_SP
(), 
NULL
), NULL, NULL));

299 
	`emô
(
	`AS_O≥r
("p›l\t%edx", 
NULL
, NULL, NULL));

300 
	`emô
(
	`AS_O≥r
("p›l\t%ecx", 
NULL
, NULL, NULL));

301  
	`F_RV
();

303 
T_ESEQ
:

304 
	`as£π
(0);

306 
	}
}

308 
	$munchStm
(
T_°m
 
s
)

311 
s
->
köd
){

312 
T_MOVE
: {

313 
T_exp
 
d°
 = 
s
->
u
.
MOVE
.d°, 
§c
 = s->u.MOVE.src;

315 if(
d°
->
köd
 =
T_MEM
){

317 if(
d°
->
u
.
MEM
->
köd
 =
T_BINOP


318 && 
d°
->
u
.
MEM
->u.
BINOP
.
›
 =
T_∂us


319 && 
d°
->
u
.
MEM
->u.
BINOP
.
right
->
köd
 =
T_CONST
){

320 
T_exp
 
e1
 = 
d°
->
u
.
MEM
->u.
BINOP
.
À·
, 
e2
 = 
§c
;

321 * 
as£m
 = "movl\t`s1, ";

323 
as£m
 = 
	`ßµíd
◊s£m, 
	`ôﬂ
(
d°
->
u
.
MEM
->u.
BINOP
.
right
->u.
CONST
));

324 
as£m
 = 
	`ßµíd
(assem, "(`s0)");

326 
	`emô
(
	`AS_O≥r
(
as£m
,

327 
NULL
, 
	`L
(
	`munchExp
(
e1
, 0), L(munchExp(
e2
, 1), NULL)), NULL));

331 if(
d°
->
u
.
MEM
->
köd
 =
T_BINOP


332 && 
d°
->
u
.
MEM
->u.
BINOP
.
›
 =
T_∂us


333 && 
d°
->
u
.
MEM
->u.
BINOP
.
À·
->
köd
 =
T_CONST
){

334 
T_exp
 
e1
 = 
d°
->
u
.
MEM
->u.
BINOP
.
right
, 
e2
 = 
§c
;

335 * 
as£m
 = "movl\t`s1, ";

337 
as£m
 = 
	`ßµíd
◊s£m, 
	`ôﬂ
(
d°
->
u
.
MEM
->u.
BINOP
.
À·
->u.
CONST
));

338 
as£m
 = 
	`ßµíd
(assem, "(`s0)");

340 
	`emô
(
	`AS_O≥r
(
as£m
,

341 
NULL
, 
	`L
(
	`munchExp
(
e1
, 0), L(munchExp(
e2
, 1), NULL)), NULL));

345 if(
d°
->
u
.
MEM
->
köd
 =
T_CONST
){

346 
T_exp
 
e2
 = 
§c
;

347 * 
as£m
 = "movl\t`s0, (";

349 
as£m
 = 
	`ßµíd
◊s£m, 
	`ôﬂ
(
d°
->
u
.
MEM
->u.
CONST
));

350 
as£m
 = 
	`ßµíd
(assem, ")");

352 
	`emô
(
	`AS_O≥r
(
as£m
,

353 
NULL
, 
	`L
(
	`munchExp
(
e2
, 0), NULL), NULL));

357 if(
d°
->
u
.
MEM
->
köd
 =
T_TEMP
){

358 
T_exp
 
e1
 = 
d°
->
u
.
MEM
, 
e2
 = 
§c
;

360 
	`emô
(
	`AS_O≥r
("movl\t`s1, (`s0)",

361 
NULL
, 
	`L
(
	`munchExp
(
e1
, 0), L(munchExp(
e2
, 1), NULL)), NULL));

366 
T_exp
 
e1
 = 
d°
->
u
.
MEM
, 
e2
 = 
§c
;

368 
	`emô
(
	`AS_O≥r
("movl\t`s1, (`s0)",

369 
NULL
, 
	`L
(
	`munchExp
(
e1
, 0), L(munchExp(
e2
, 1), NULL)), NULL));

373 if(
d°
->
köd
 =
T_TEMP
){

375 if(
§c
->
köd
 =
T_MEM


376 && 
§c
->
u
.
MEM
->
köd
 =
T_BINOP


377 && 
§c
->
u
.
MEM
->u.
BINOP
.
›
 =
T_∂us


378 && 
§c
->
u
.
MEM
->u.
BINOP
.
right
->
köd
 =
T_CONST
){

379 
T_exp
 
e1
 = 
d°
, 
e2
 = 
§c
->
u
.
MEM
->u.
BINOP
.
À·
;

380 * 
as£m
 = "movl\t";

382 
as£m
 = 
	`ßµíd
◊s£m, 
	`ôﬂ
(
§c
->
u
.
MEM
->u.
BINOP
.
right
->u.
CONST
));

383 
as£m
 = 
	`ßµíd
(assem, "(`s0), ");

384 
as£m
 = 
	`ßµíd
(assem, "`d0");

386 
	`emô
(
	`AS_O≥r
(
as£m
, 
	`L
(
	`munchExp
(
e1
, 0), 
NULL
), L(munchExp(
e2
, 0), NULL), NULL));

390 if(
§c
->
köd
 =
T_MEM


391 && 
§c
->
u
.
MEM
->
köd
 =
T_BINOP


392 && 
§c
->
u
.
MEM
->u.
BINOP
.
›
 =
T_∂us


393 && 
§c
->
u
.
MEM
->u.
BINOP
.
À·
->
köd
 =
T_CONST
){

394 
T_exp
 
e1
 = 
d°
, 
e2
 = 
§c
->
u
.
MEM
->u.
BINOP
.
right
;

395 * 
as£m
 = "movl\t";

397 
as£m
 = 
	`ßµíd
◊s£m, 
	`ôﬂ
(
§c
->
u
.
MEM
->u.
BINOP
.
À·
->u.
CONST
));

398 
as£m
 = 
	`ßµíd
(assem, "(`s0), ");

399 
as£m
 = 
	`ßµíd
(assem, "`d0");

400 
	`emô
(
	`AS_O≥r
(
as£m
, 
	`L
(
	`munchExp
(
e1
, 0), 
NULL
), L(munchExp(
e2
, 0), NULL), NULL));

404 if(
§c
->
köd
 =
T_MEM
){

405 
T_exp
 
e2
 = 
§c
;

407 
	`emô
(
	`AS_O≥r
("movl\t(`s0), `d0",

408 
	`L
(
	`munchExp
(
d°
, 0), 
NULL
), L(munchExp(
e2
, 0), NULL), NULL));

412 if(
§c
->
köd
 =
T_BINOP


413 && 
§c
->
u
.
BINOP
.
right
->
köd
 =
T_CONST
){

414 
T_exp
 
e1
 = 
§c
->
u
.
BINOP
.
À·
;

415 * 
as£m1
 = "movl\t`s0, `d0";

416 * 
as£m2
 = 
	`gëAs£mOp
(
§c
->
u
.
BINOP
.
›
);

418 
	`emô
(
	`AS_O≥r
(
as£m1
, 
	`L
(
	`munchExp
(
d°
, 0), 
NULL
), L(munchExp(
e1
, 0), NULL), NULL));

419 
as£m2
 = 
	`ßµíd
(assem2, "$");

420 
as£m2
 = 
	`ßµíd
◊s£m2, 
	`ôﬂ
(
§c
->
u
.
BINOP
.
right
->u.
CONST
));

421 
as£m2
 = 
	`ßµíd
(assem2, ", `d0");

422 
	`emô
(
	`AS_O≥r
(
as£m2
, 
	`L
(
	`munchExp
(
d°
, 0), 
NULL
), NULL, NULL));

426 if(
§c
->
köd
 =
T_BINOP


427 && 
§c
->
u
.
BINOP
.
À·
->
köd
 =
T_CONST
){

428 
T_exp
 
e1
 = 
§c
->
u
.
BINOP
.
right
;

429 * 
as£m1
 = "movl\t`s0, `d0";

430 * 
as£m2
 = 
	`gëAs£mOp
(
§c
->
u
.
BINOP
.
›
);

432 
	`emô
(
	`AS_O≥r
(
as£m1
, 
	`L
(
	`munchExp
(
d°
, 0), 
NULL
), L(munchExp(
e1
, 0), NULL), NULL));

433 
as£m2
 = 
	`ßµíd
(assem2, "$");

434 
as£m2
 = 
	`ßµíd
◊s£m2, 
	`ôﬂ
(
§c
->
u
.
BINOP
.
À·
->u.
CONST
));

435 
as£m2
 = 
	`ßµíd
(assem2, ", `d0");

436 
	`emô
(
	`AS_O≥r
(
as£m2
, 
	`L
(
	`munchExp
(
d°
, 0), 
NULL
), NULL, NULL));

440 if(
§c
->
köd
 =
T_CONST


441 && 
§c
->
u
.
CONST
 == 0){

442 * 
as£m
 = "xorl\t`s0, `d0";

444 
	`emô
(
	`AS_O≥r
(
as£m
, 
	`L
(
	`munchExp
(
d°
, 0), 
NULL
), L(munchExp(dst, 0), NULL), NULL));

448 if(
§c
->
köd
 =
T_CONST
){

449 * 
as£m
 = "movl\t$";

451 
as£m
 = 
	`ßµíd
◊s£m, 
	`ôﬂ
(
§c
->
u
.
CONST
));

452 
as£m
 = 
	`ßµíd
(assem, ", `d0");

454 
	`emô
(
	`AS_O≥r
(
as£m
, 
	`L
(
	`munchExp
(
d°
, 0), 
NULL
), NULL, NULL));

459 
T_exp
 
e2
 = 
§c
;

461 
	`emô
(
	`AS_O≥r
("movl\t`s0, `d0",

462 
	`L
(
	`munchExp
(
d°
, 0), 
NULL
), L(munchExp(
e2
, 0), NULL), NULL));

467 
	`as£π
(0);

470 
T_LABEL
:{

471 * 
œbñ
 = 
	`ßµíd
(
	`S_«me
(
s
->
u
.
LABEL
), ":");

474 
	`emô
(
	`AS_Labñ
(
œbñ
, 
s
->
u
.
LABEL
));

477 
T_JUMP
:{

479 
T_exp
 
e
 = 
s
->
u
.
JUMP
.
exp
;

480 * 
as£m
 = "jmp\t";

482 
	`as£π
(
s
->
u
.
JUMP
.
jumps
->
hód
 !
NULL
);

483 
as£m
 = 
	`ßµíd
◊s£m, 
	`S_«me
(
s
->
u
.
JUMP
.
jumps
->
hód
));

484 
	`emô
(
	`AS_O≥r
(
as£m
, 
NULL
, NULL, 
	`AS_T¨gës
(
	`Temp_LabñLi°
(
s
->
u
.
JUMP
.
jumps
->
hód
, NULL))));

487 
T_CJUMP
:{

489 
T_exp
 
e1
 = 
s
->
u
.
CJUMP
.
À·
, 
e2
 = s->u.CJUMP.
right
;

490 
Temp_œbñ
 
tLabñ
 = 
s
->
u
.
CJUMP
.
åue
, 
fLabñ
 = s->u.CJUMP.
Ál£
;

491 * 
as£m
 = 
	`gëAs£mJccOp
(
s
->
u
.
CJUMP
.
›
);

493 
as£m
 = 
	`ßµíd
◊s£m, 
	`S_«me
(
tLabñ
));

494 
	`emô
(
	`AS_O≥r
("cm∂\t`s0, `s1", 
NULL
, 
	`L
(
	`munchExp
(
e2
, 0), L(munchExp(
e1
, 1), NULL)), NULL));

495 
	`emô
(
	`AS_O≥r
(
as£m
, 
NULL
, NULL, 
	`AS_T¨gës
(
	`Temp_LabñLi°
(
tLabñ
, NULL))));

498 
T_EXP
:{

499 
	`munchExp
(
s
->
u
.
EXP
, 0);

502 
T_SEQ
:

503 
	`as£π
(0);

505 
	`as£π
(0);

507 
	}
}

509 
AS_ö°rLi°
 
	gglobÆIn°rLi°
 = 
NULL
;

510 
AS_ö°rLi°
 
	gœ°GlobÆIn°rLi°
 = 
NULL
;

512 
	$emô
(
AS_ö°r
 
ö°
)

514 
AS_ö°rLi°
 
√wIn°rLi°
 = 
NULL
;

516 
	`as£π
(
ö°
);

517 
√wIn°rLi°
 = 
	`AS_In°rLi°
(
ö°
, 
NULL
);

519 if(
globÆIn°rLi°
 =
NULL
){

520 
globÆIn°rLi°
 = 
œ°GlobÆIn°rLi°
 = 
√wIn°rLi°
;

523 
œ°GlobÆIn°rLi°
->
èû
 = 
√wIn°rLi°
;

524 
œ°GlobÆIn°rLi°
 = 
√wIn°rLi°
;

526 
	}
}

531 
	$emôbef‹e
(
AS_ö°r
 
ö°r
)

533 
AS_ö°rLi°
 
√wIn°rLi°
 = 
NULL
;

535 
	`as£π
(
ö°r
 !
NULL
);

536 
√wIn°rLi°
 = 
	`AS_In°rLi°
(
ö°r
, 
NULL
);

538 if(
globÆIn°rLi°
 =
NULL
){

539 
globÆIn°rLi°
 = 
œ°GlobÆIn°rLi°
 = 
√wIn°rLi°
;

542 
√wIn°rLi°
->
èû
 = 
globÆIn°rLi°
;

543 
globÆIn°rLi°
 = 
√wIn°rLi°
;

545 
	}
}

550 
AS_ö°rLi°
 
	$F_codegí
(
F_‰ame
 
f
, 
T_°mLi°
 
°mLi°
)

552 
AS_ö°rLi°
 
ö°rLi°
 = 
NULL
;

556 ; 
°mLi°
 !
NULL
; stmLi° = stmLi°->
èû
){

557 
	`munchStm
(
°mLi°
->
hód
);

561 
°rög
 
as£m
;

562 
as£m
 = "subl\t$";

563 
as£m
 = 
	`ßµíd
◊s£m, 
	`ôﬂ
(
f
->
loˇls
* 4));

564 
as£m
 = 
	`ßµíd
(assem, ", `d0");

565 
	`emôbef‹e
(
	`AS_O≥r
(
as£m
, 
	`L
(
	`F_SP
(), 
NULL
), NULL, NULL));

566 
	`emôbef‹e
(
	`AS_O≥r
("pushl\t%esi", 
NULL
, NULL, NULL));

567 
	`emôbef‹e
(
	`AS_O≥r
("pushl\t%edi", 
NULL
, NULL, NULL));

568 
	`emôbef‹e
(
	`AS_O≥r
("pushl\t%edx", 
NULL
, NULL, NULL));

569 
	`emôbef‹e
(
	`AS_O≥r
("pushl\t%ecx", 
NULL
, NULL, NULL));

570 
	`emôbef‹e
(
	`AS_O≥r
("pushl\t%ebx", 
NULL
, NULL, NULL));

571 
	`emôbef‹e
(
	`AS_O≥r
("movl\t`s0, `d0", 
	`L
(
	`F_FP
(), 
NULL
), L(
	`F_SP
(), NULL), NULL));

572 
	`emôbef‹e
(
	`AS_O≥r
("pushl\t`s0", 
NULL
, 
	`L
(
	`F_FP
(), NULL), NULL));

575 
as£m
 = "addl\t$";

576 
as£m
 = 
	`ßµíd
◊s£m, 
	`ôﬂ
(
f
->
loˇls
* 4));

577 
as£m
 = 
	`ßµíd
(assem, ", `d0");

578 
	`emô
(
	`AS_O≥r
(
as£m
, 
	`L
(
	`F_SP
(), 
NULL
), NULL, NULL));

579 
	`emô
(
	`AS_O≥r
("p›l\t%esi", 
NULL
, NULL, NULL));

580 
	`emô
(
	`AS_O≥r
("p›l\t%edi", 
NULL
, NULL, NULL));

581 
	`emô
(
	`AS_O≥r
("p›l\t%edx", 
NULL
, NULL, NULL));

582 
	`emô
(
	`AS_O≥r
("p›l\t%ecx", 
NULL
, NULL, NULL));

583 
	`emô
(
	`AS_O≥r
("p›l\t%ebx", 
NULL
, NULL, NULL));

586 
	`emô
(
	`AS_O≥r
("Àave",
NULL
,NULL,NULL));

587 
	`emô
(
	`AS_O≥r
("ªt", 
NULL
, NULL, NULL));

589 
ö°rLi°
 = 
globÆIn°rLi°
;

590 
globÆIn°rLi°
 = 
œ°GlobÆIn°rLi°
 = 
NULL
;

591  
ö°rLi°
;

592 
	}
}

	@codegen.h

1 #i‚de‡
CODEGEN_H


2 
	#CODEGEN_H


	)

4 
munchArgs
(
T_expLi°
 
expLi°
);

5 
Temp_ãmp
 
munchExp
(
T_exp
 
e
, 
i
);

6 
munchStm
(
T_°m
 
s
);

8 
emô
(
AS_ö°r
 
ö°
);

9 
AS_ö°rLi°
 
F_codegí
(
F_‰ame
 
f
, 
T_°mLi°
 
°mLi°
);

	@env.c

2 
	~"utû.h
"

3 
	~"èbÀ.h
"

4 
	~"symbﬁ.h
"

5 
	~"å™¶©e.h
"

6 
	~<°dlib.h
>

7 
S_èbÀ
 
	$E_ba£_ãnv
(){

8 
S_èbÀ
 
ãnv
 = (S_èbÀ)
	`TAB_em±y
();

9 
	`S_íãr
(
ãnv
, 
	`S_Symbﬁ
("°rög"), 
	`Ty_Såög
());

10 
	`S_íãr
(
ãnv
, 
	`S_Symbﬁ
("öt"), 
	`Ty_I¡
());

11  
ãnv
;

12 
	}
}

13 
S_èbÀ
 
	$E_ba£_vív
(){

14 
S_èbÀ
 
vív
 = (S_èbÀ)
	`TAB_em±y
();

15 
	`S_íãr
(
vív
, 
	`S_Symbﬁ
("¥öt"), 
	`E_FunE¡ry
(
	`Tr_ouãrmo°
(), 
	`Temp_«medœbñ
("¥öt"), 
	`Ty_TyLi°
(
	`Ty_Såög
(), 
NULL
), 
	`Ty_Void
()));

16 
	`S_íãr
(
vív
, 
	`S_Symbﬁ
("Êush"), 
	`E_FunE¡ry
(
	`Tr_ouãrmo°
(), 
	`Temp_«medœbñ
("Êush"), 
NULL
, 
	`Ty_Void
()));

17 
	`S_íãr
(
vív
, 
	`S_Symbﬁ
("gëch¨"), 
	`E_FunE¡ry
(
	`Tr_ouãrmo°
(), 
	`Temp_«medœbñ
("gëch¨"), 
NULL
,
	`Ty_Såög
()));

18 
	`S_íãr
(
vív
, 
	`S_Symbﬁ
("‹d"), 
	`E_FunE¡ry
(
	`Tr_ouãrmo°
(), 
	`Temp_«medœbñ
("‹d"), 
	`Ty_TyLi°
(
	`Ty_Såög
(), 
NULL
), 
	`Ty_I¡
()));

19 
	`S_íãr
(
vív
, 
	`S_Symbﬁ
("chr"), 
	`E_FunE¡ry
(
	`Tr_ouãrmo°
(), 
	`Temp_«medœbñ
("chr"), 
	`Ty_TyLi°
(
	`Ty_I¡
(), 
NULL
), 
	`Ty_Såög
()));

20 
	`S_íãr
(
vív
, 
	`S_Symbﬁ
("size"), 
	`E_FunE¡ry
(
	`Tr_ouãrmo°
(), 
	`Temp_«medœbñ
("size"), 
	`Ty_TyLi°
(
	`Ty_Såög
(), 
NULL
), 
	`Ty_I¡
()));

21 
	`S_íãr
(
vív
, 
	`S_Symbﬁ
("sub°rög"), 
	`E_FunE¡ry
(
	`Tr_ouãrmo°
(), 
	`Temp_«medœbñ
("sub°rög"), 
	`Ty_TyLi°
(
	`Ty_Såög
(), Ty_TyLi°(Ty_Såög(), 
NULL
)), Ty_String()));

22 
	`S_íãr
(
vív
, 
	`S_Symbﬁ
("c⁄ˇt"), 
	`E_FunE¡ry
(
	`Tr_ouãrmo°
(), 
	`Temp_«medœbñ
("c⁄ˇt"), 
	`Ty_TyLi°
(
	`Ty_Såög
(), Ty_TyLi°(
	`Ty_I¡
(), Ty_TyLi°(Ty_I¡(), 
NULL
))), Ty_String()));

23 
	`S_íãr
(
vív
, 
	`S_Symbﬁ
("nŸ"), 
	`E_FunE¡ry
(
	`Tr_ouãrmo°
(), 
	`Temp_«medœbñ
("nŸ"), 
	`Ty_TyLi°
(
	`Ty_I¡
(), 
NULL
), Ty_Int()));

24 
	`S_íãr
(
vív
, 
	`S_Symbﬁ
("exô"), 
	`E_FunE¡ry
(
	`Tr_ouãrmo°
(), 
	`Temp_«medœbñ
("exô"), 
	`Ty_TyLi°
(
	`Ty_I¡
(), 
NULL
), 
	`Ty_Void
()));

26 
	`S_íãr
(
vív
, 
	`S_Symbﬁ
("öôAºay"), 
	`E_FunE¡ry
(
	`Tr_ouãrmo°
(), 
	`Temp_«medœbñ
("öôAºay"), 
	`Ty_TyLi°
(
	`Ty_I¡
(), Ty_TyLi°(Ty_I¡(), 
NULL
)), 
	`Ty_Aºay
(NULL)));

28 
	`S_íãr
(
vív
, 
	`S_Symbﬁ
("ÆlocRec‹d"), 
	`E_FunE¡ry
(
	`Tr_ouãrmo°
(), 
	`Temp_«medœbñ
("ÆlocRec‹d"), 
	`Ty_TyLi°
(
	`Ty_I¡
(), 
NULL
), 
	`Ty_Rec‹d
(NULL)));

30 
	`S_íãr
(
vív
, 
	`S_Symbﬁ
("°rögEquÆ"), 
	`E_FunE¡ry
(
	`Tr_ouãrmo°
(), 
	`Temp_«medœbñ
("°rögEquÆ"), 
	`Ty_TyLi°
(
	`Ty_Såög
(), Ty_TyLi°(Ty_Såög(), 
NULL
)), 
	`Ty_I¡
()));

32 
	`S_íãr
(
vív
, 
	`S_Symbﬁ
("¥öti"), 
	`E_FunE¡ry
(
	`Tr_ouãrmo°
(), 
	`Temp_«medœbñ
("¥öti"), 
	`Ty_TyLi°
(
	`Ty_I¡
(), 
NULL
), 
	`Ty_Void
()));

33  
vív
;

34 
	}
}

	@env.h

1 #i‚de‡
_ENV_H


2 
	#_ENV_H


	)

3 
	~"ty≥s.h
"

7 
S_èbÀ
 
E_ba£_ãnv
();

8 
S_èbÀ
 
E_ba£_vív
();

	@errormsg.c

7 
	~<°dio.h
>

8 
	~<°dlib.h
>

9 
	~<°d¨g.h
>

10 
	~"utû.h
"

11 
	~"îr‹msg.h
"

14 
boﬁ
 
	g™yEº‹s

FALSE
;

16 
°rög
 
	gfûeName
 = "";

18 
	glöeNum
 = 1;

20 
	gEM_tokPos
=0;

22 
FILE
 *
yyö
;

24 
	sötLi°
 {
	mi
; 
ötLi°
 *
	mª°
;} *
	tI¡Li°
;

26 
I¡Li°
 
	$ötLi°
(
i
, 
I¡Li°
 
ª°
)

27 {
I¡Li°
 
l

	`checked_mÆloc
( *l);

28 
l
->
i
=i;Ü->
ª°
=rest;

29  
l
;

30 
	}
}

32 
I¡Li°
 
	glöePos
=
NULL
;

34 
	$EM_√wlöe
()

35 {
löeNum
++;

36 
löePos
 = 
	`ötLi°
(
EM_tokPos
,ÜinePos);

37 
	}
}

39 
	$EM_îr‹
(
pos
, *
mesßge
,...)

40 {
va_li°
 
≠
;

41 
I¡Li°
 
löes
 = 
löePos
;

42 
num
=
löeNum
;

45 
™yEº‹s
=
TRUE
;

46 
löes
 &&Üöes->
i
 >
pos
)

47 {
löes
ˆöes->
ª°
; 
num
--;}

49 i‡(
fûeName
Ë
	`Ârötf
(
°dîr
,"%s:",fileName);

50 i‡(
löes
Ë
	`Ârötf
(
°dîr
,"%d.%d: ", 
num
, 
pos
-löes->
i
);

51 
	`va_°¨t
(
≠
,
mesßge
);

52 
	`vÂrötf
(
°dîr
, 
mesßge
, 
≠
);

53 
	`va_íd
(
≠
);

54 
	`Ârötf
(
°dîr
,"\n");

56 
	}
}

58 
	$EM_ª£t
(
°rög
 
‚ame
)

60 
™yEº‹s
=
FALSE
; 
fûeName
=
‚ame
; 
löeNum
=1;

61 
löePos
=
	`ötLi°
(0,
NULL
);

62 
yyö
 = 
	`f›í
(
‚ame
,"r");

63 i‡(!
yyö
Ë{
	`EM_îr‹
(0,"ˇ¬Ÿ o≥n"); 
	`exô
(1);}

64 
	}
}

	@errormsg.h

1 #i‚de‡
_ERRORMSG_H_


2 
	#_ERRORMSG_H_


	)

6 
boﬁ
 
EM_™yEº‹s
;

8 
EM_√wlöe
();

10 
EM_tokPos
;

12 
EM_îr‹
(, 
°rög
,...);

13 
EM_impossibÀ
(
°rög
,...);

14 
EM_ª£t
(
°rög
 
fûíame
);

	@escape.c

1 
	~"esˇ≥.h
"

2 
	~"absyn.h
"

3 
åavî£Exp
(
S_èbÀ
 
ív
, 
dïth
, 
A_exp
 
e
);

4 
åavî£Dec
(
S_èbÀ
 
ív
, 
dïth
, 
A_dec
 
d
);

5 
åavî£V¨
(
S_èbÀ
 
ív
, 
dïth
, 
A_v¨
 
v
);

6 
	$Esc_födEsˇ≥
(
A_exp
 
exp
){

7 
	}
}

8 
	$åavî£Exp
(
S_èbÀ
 
ív
, 
dïth
, 
A_exp
 
e
){

9 
dïth
++;

10 
e
->
köd
){

11 
A_›Exp
:{

12 
	`åavî£Exp
(
ív
,
dïth
,
e
->
u
.
›
.
À·
);

13 
	`åavî£Exp
(
ív
,
dïth
,
e
->
u
.
›
.
right
);

16 
A_ªc‹dExp
:{

17 
A_efõldLi°
 
ef
;

18 
ef
 = 
e
->
u
.
ªc‹d
.
fõlds
; 
tf
;É‡ef->
èû
){

19 
	`åavî£Exp
(
ív
,
dïth
,
ef
->
hód
->
exp
);

23 
A_ÀtExp
:{

25 
A_decLi°
 
d
;

26 
d
 = 
e
->
u
.
Àt
.
decs
; d; d = d->
èû
){

27 
	`åavî£Dec
(
ív
,
dïth
,
d
->
hód
);

29 
	`åavî£Exp
(
ív
, 
dïth
, 
e
->
u
.
Àt
.
body
);

32 
A_£qExp
:{

33 
A_expLi°
 
´
 = 
d
->
u
.
£q
;

34 
´
 &&áe->
hód
){

35 
	`åavî£Exp
(
ív
, 
dïth
, 
´
->
hód
);

36 
´
 =áe->
èû
;

40 
A_v¨Exp
:{

41 
	`åavî£V¨
(
ív
, 
dïth
, 
e
->
u
.
v¨
);

44 
A_ˇŒExp
:{

45 
A_expLi°
 
as
;

46 
as
 = 
e
->
u
.
ˇŒ
.
¨gs
;ás;á†as->
èû
){

47 
	`åavî£Exp
(
ív
, 
dïth
, 
as
->
hód
);

51 
A_assignExp
:{

52 
	`åavî£V¨
(
ív
, 
dïth
, 
e
->
u
.
assign
.
v¨
);

53 
	`åavî£Exp
(
ív
, 
dïth
, 
e
->
u
.
assign
.
exp
);

56 
A_ifExp
:{

57 
	`åavî£Exp
(
ív
, 
dïth
, 
e
->
u
.
iff
.
ã°
);

58 if(
e
->
u
.
iff
.
ñ£e
){

59 
	`åavî£Exp
(
ív
, 
dïth
, 
e
->
u
.
iff
.
ñ£e
);

63 
A_whûeExp
:{

64 
	`åavî£Exp
(
ív
, 
dïth
, 
e
->
u
.
whûì
.
ã°
);

67 
	`åavî£Exp
(
ív
, 
dïth
, 
e
->
u
.
whûì
.
body
);

71 
A_f‹Exp
:{

72 
	`åavî£Exp
(
ív
, 
dïth
, 
e
->
u
.
f‹r
.
lo
);

73 
	`åavî£Exp
(
ív
, 
dïth
, 
e
->
u
.
f‹r
.
hi
);

77 
	`åavî£Exp
(
ív
, 
dïth
, 
e
->
u
.
f‹r
.
body
);

81 
A_¨øyExp
:{

82 
	`åavî£Exp
(
ív
, 
dïth
, 
e
->
u
.
¨øy
.
size
);

83 
	`åavî£Exp
(
ív
, 
dïth
, 
e
->
u
.
¨øy
.
öô
);

87 
	}
}

88 
	$åavî£Dec
(
S_èbÀ
 
ív
, 
dïth
, 
A_dec
 
d
){

89 
dïth
++;

90 
d
->
köd
){

91 
A_fun˘i⁄Dec
:{

92 
A_fundecLi°
 
Ê
 = 
d
->
u
.
fun˘i⁄
;

93 
A_fundec
 
f
;

94 
Ê
){

95 
f
 = 
Ê
->
hód
;

96 
	`åavî£Exp
(
ív
, 
dïth
, 
f
->
body
);

100 
A_v¨Dec
:{

101 if(
d
->
u
.
v¨
.
esˇ≥
){

102 
	`S_íãr
(
ív
, 
d
->
u
.
v¨
.v¨, 
	`Esˇ≥E¡ry
(
dïth
,&(d->u.v¨.
esˇ≥
)));

104 if(
d
->
u
.
v¨
.
öô
 =
NULL
){

105 
	`åavî£Exp
(
ív
, 
dïth
, 
d
->
u
.
v¨
.
öô
);

107 
	`S_íãr
(
ív
, 
d
->
u
.
v¨
.v¨,
NULL
);

110 
A_ty≥Dec
:{

114 
	}
}

115 
	$åavî£V¨
(
S_èbÀ
 
ív
, 
dïth
, 
A_v¨
 
v
){

116 
dïth
++;

117 
v
->
köd
){

118 
A_sim∂eV¨
:{

121 
A_fõldV¨
:{

122 
	`åavî£V¨
(
ív
, 
dïth
, 
v
->
u
.
fõld
.
v¨
);

125 
A_subs¸ùtV¨
:{

126 
	`åavî£V¨
(
ív
, 
dïth
, 
v
->
u
.
subs¸ùt
.
v¨
);

130 
	}
}

	@escape.h

1 #i‚de‡
_ESCAPE_H_


2 
	#_ESCAPE_H_


	)

3 
	~"absyn.h
"

4 
	~"utû.h
"

5 
Esc_födEsˇ≥
(
A_exp
 
exp
);

6 
Esˇ≥_íåy_
 *
	tEsˇ≥_íåy
;

7 
	sEsˇ≥_íåy_
{

8 
	mdïth
;

9 * 
	mesc
;

11 
Esˇ≥_íåy
 
	$Esˇ≥E¡ry
(
dïth
, * 
esc
){

12 
Esˇ≥_íåy
 
e
 = 
	`checked_mÆloc
((
Esˇ≥_íåy_
));

13 
e
->
dïth
 = depth;

14 
e
->
esc
 =Ésc;

15  
e
;

16 
	}
}

	@frame.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

3 
	~"utû.h
"

4 
	~"symbﬁ.h
"

5 
	~"ãmp.h
"

6 
	~"åì.h
"

7 
	~"‰ame.h
"

9 
Temp_œbñ
 
	$F_«me
(
F_‰ame
 
f
)

11 
	`as£π
(
f
);

12  
f
->
œbñ
;

13 
	}
}

15 
	gSavedRegNum
 = 5;

17 
Temp_ãmp
 
	gÂ
 = 
NULL
;

19 
Temp_ãmp
 
	$F_FP
()

22 if(
Â
 =
NULL
){

23 
Â
 = 
	`Temp_√wãmp
();

25  
Â
;

26 
	}
}

32 
Temp_ãmp
 
	gSP
 = 
NULL
;

33 
Temp_ãmp
 
	$F_SP
()

36 if(
SP
 =
NULL
){

37 
SP
 = 
	`Temp_√wãmp
();

39  
SP
;

40 
	}
}

45 
Temp_ãmp
 
	gRV
 = 
NULL
;

46 
Temp_ãmp
 
	$F_RV
()

49 if(
RV
 =
NULL
){

50 
RV
 = 
	`Temp_√wãmp
();

52  
RV
;

53 
	}
}

59 
Temp_ãmp
 
	gS¸©chTemp
 = 
NULL
;

60 
Temp_ãmp
 
	$F_S¸©chTemp
()

62 if(!
S¸©chTemp
)

63 
S¸©chTemp
 = 
	`Temp_√wãmp
();

64  
S¸©chTemp
;

65 
	}
}

67 
Temp_ãmp
 
	gAs£mS¸©chTemp1
 = 
NULL
;

68 
Temp_ãmp
 
	gAs£mS¸©chTemp2
 = 
NULL
;

69 
Temp_ãmp
 
	$F_As£mS¸©chTemp
(
i
)

71 if(
i
 == 0){

72 if(!
As£mS¸©chTemp1
)

73 
As£mS¸©chTemp1
 = 
	`Temp_√wãmp
();

74  
As£mS¸©chTemp1
;

76 if(
i
 == 1){

77 if(!
As£mS¸©chTemp2
)

78 
As£mS¸©chTemp2
 = 
	`Temp_√wãmp
();

79  
As£mS¸©chTemp2
;

82 
	`as£π
(0);

84 
	}
}

86 
F_‰ame
 
	gglobÆCuºítFøme
 = 
NULL
;

88 
	$F_√wSpûlLoˇti⁄
()

90 (
globÆCuºítFøme
->
loˇls
)++;

91  -((
globÆCuºítFøme
->
loˇls
)* 4);

92 
	}
}

93 
F_ac˚ssLi°
 
	$F_Ac˚ssLi°
(
F_ac˚ss
 
ac˚ss
){

94 
F_ac˚ssLi°
 
li°
 = 
	`checked_mÆloc
((
F_ac˚ssLi°_
));

95 
li°
->
hód
 = 
ac˚ss
;

96  
li°
;

97 
	}
}

98 
F_ac˚ss
 
	$InFøme
(
off£t
){

99 
F_ac˚ss
 
ac˚ss
 = 
	`checked_mÆloc
((
F_ac˚ss_
));

100 
ac˚ss
->
köd
 = 
öFøme
;

101 
ac˚ss
->
u
.
off£t
 = offset;

102  
ac˚ss
;

103 
	}
}

104 
F_ac˚ss
 
	$InReg
(
Temp_ãmp
 
ªg
){

105 
F_ac˚ss
 
ac˚ss
 = 
	`checked_mÆloc
((
F_ac˚ss_
));

106 
ac˚ss
->
köd
 = 
öReg
;

107 
ac˚ss
->
u
.
ªg
 =Ñeg;

108  
ac˚ss
;

109 
	}
}

112 
F_‰ame
 
	$F_√wFøme
(
Temp_œbñ
 
«me
, 
U_boﬁLi°
 
f‹mÆs
){

113 
F_‰ame
 
‰ame
 = (F_‰ame)
	`checked_mÆloc
((
F_‰ame_
));

114 
‰ame
->
loˇls
 = 5;

115 
‰ame
->
œbñ
 = 
«me
;

116 
F_ac˚ssLi°
 
li°
 = 
‰ame
->
f‹mÆ_loˇti⁄
;

117 
cur_off£t
 = 4;

118 
f‹mÆs
){

119 
F_ac˚ss
 
ac˚ss
 = 
NULL
;

120 if(
f‹mÆs
->
hód
){

121 
ac˚ss
 = 
	`InFøme
((
cur_off£t
+=4));

123 
ac˚ss
 = 
	`InReg
(
	`F_S¸©chTemp
());

125 if(
li°
){

126 
li°
->
èû
 = 
	`F_Ac˚ssLi°
(
ac˚ss
);

127 
li°
 =Üi°->
èû
;

129 
‰ame
->
f‹mÆ_loˇti⁄
 = 
	`F_Ac˚ssLi°
(
ac˚ss
);

130 
li°
 = 
‰ame
->
f‹mÆ_loˇti⁄
;

132 
f‹mÆs
 = f‹mÆs->
èû
;

134  
‰ame
;

135 
	}
}

136 
F_ac˚ssLi°
 
	$F_f‹mÆs
(
F_‰ame
 
f
){

137  
f
->
f‹mÆ_loˇti⁄
;

138 
	}
}

140 
F_ac˚ss
 
	$F_ÆlocLoˇl
(
F_‰ame
 
f
, 
boﬁ
 
esˇ≥
){

141 
F_ac˚ss
 
ac˚ss
 = 
NULL
;

142 if(
esˇ≥
){

143 
ac˚ss
 = 
	`InFøme
(-((
f
->
loˇls
+=1)*4));

145 
ac˚ss
 = 
	`InReg
(
	`F_S¸©chTemp
());

147 
F_ac˚ssLi°
 
l
 = 
f
->
f‹mÆ_loˇti⁄
;

148 
F_ac˚ssLi°
 
èû
 = 
l
;

150 
l
){

151 
èû
 = 
l
;

152 
l
 =Ü->
èû
;

154 if(
èû
){

155 
èû
->èû = 
	`F_Ac˚ssLi°
(
ac˚ss
);

157 
f
->
f‹mÆ_loˇti⁄
 = 
	`F_Ac˚ssLi°
(
ac˚ss
);

159  
ac˚ss
;

160 
	}
}

163 
F_‰agLi°
 
	$F_FøgLi°
(
F_‰ag
 
hód
, 
F_‰agLi°
 
èû
){

164 
F_‰agLi°
 
Ê
 = 
	`checked_mÆloc
((
F_‰agLi°_
));

165 
Ê
->
hód
 = head;

166 
Ê
->
èû
 =Åail;

167  
Ê
;

168 
	}
}

169 
F_‰ag
 
	$F_SåögFøg
(
Temp_œbñ
 
œbñ
, 
°rög
 
°r
){

170 
F_‰ag
 
f
 = 
	`checked_mÆloc
((
F_‰ag_
));

171 
f
->
köd
 = 
F_°rögFøg
;

172 
f
->
u
.
°rögg
.
°r
 = str;

173 
f
->
u
.
°rögg
.
œbñ
 =Üabel;

174  
f
;

175 
	}
}

176 
F_‰ag
 
	$F_ProgFøg
(
T_°m
 
body
, 
F_‰ame
 
‰ame
){

177 
F_‰ag
 
f
 = 
	`checked_mÆloc
((
F_‰ag_
));

178 
f
->
köd
 = 
F_¥ogFøg
;

179 
f
->
u
.
¥oc
.
body
 = body;

180 
f
->
u
.
¥oc
.
‰ame
 = frame;

181  
f
;

182 
	}
}

	@frame.h

4 #i‚de‡
_FRAME_H_


5 
	#_FRAME_H_


	)

6 
	~"åì.h
"

9 
F_‰ame_
 *
	tF_‰ame
;

10 
F_ac˚ss_
 *
	tF_ac˚ss
;

12 
F_ac˚ssLi°_
 *
	tF_ac˚ssLi°
;

13 
	sF_ac˚ssLi°_
 {
F_ac˚ss
 
	mhód
;
F_ac˚ssLi°
 
	mèû
;};

17 
	sF_ac˚ss_


19 íum{
	möFøme
,
	möReg
} 
	mköd
;

21 
	moff£t
;

22 
Temp_ãmp
 
	mªg
;

23 }
	mu
;

26 
	sF_‰ame_


28 
F_ac˚ssLi°
 
	mf‹mÆ_loˇti⁄
;

29 * 
	mös
;

30 
	mloˇls
;

31 
Temp_œbñ
 
	mœbñ
;

34 
Temp_ãmp
 
F_FP
();

35 
Temp_ãmp
 
F_SP
();

36 
Temp_ãmp
 
F_RV
();

37 
Temp_ãmp
 
F_S¸©chTemp
();

39 
Temp_ãmp
 
F_As£mS¸©chTemp
(
i
);

41 
F_‰ag_
 *
	tF_‰ag
;

42 
	sF_‰ag_
 {

43 íum{
	mF_°rögFøg
,
	mF_¥ogFøg
}
	mköd
;

45 °ru˘ {
Temp_œbñ
 
	mœbñ
;
°rög
 
	m°r
;}
	m°rögg
;

46 °ru˘ {
T_°m
 
	mbody
;
F_‰ame
 
	m‰ame
;} 
	m¥oc
;

47 }
	mu
;

50 
F_‰agLi°_
 *
	tF_‰agLi°
;

51 
	sF_‰agLi°_
 {
F_‰ag
 
	mhód
;
F_‰agLi°
 
	mèû
;};

53 
F_‰ame
 
F_√wFøme
(
Temp_œbñ
 
«me
, 
U_boﬁLi°
 
f‹mÆs
);

54 
Temp_œbñ
 
F_«me
(
F_‰ame
 
f
);

55 
F_ac˚ssLi°
 
F_f‹mÆs
(
F_‰ame
 
f
);

56 
F_ac˚ss
 
F_ÆlocLoˇl
(
F_‰ame
 
f
, 
boﬁ
 
esˇ≥
);

60 
F_‰agLi°
 
F_FøgLi°
(
F_‰ag
 
hód
, F_‰agLi° 
èû
);

61 
F_‰ag
 
F_SåögFøg
(
Temp_œbñ
 
œbñ
, 
°rög
 
°r
);

62 
F_‰ag
 
F_ProgFøg
(
T_°m
 
body
, 
F_‰ame
 
‰ame
);

	@lex.yy.c

1 
	~"°dio.h
"

2 
	#U
(
x
Ë((x)&0377)

	)

3 
	#NLSTATE
 
yy¥evious
=
YYNEWLINE


	)

4 
	#BEGIN
 
yybgö
 = 
yysvec
 + 1 +

	)

5 
	#INITIAL
 0

	)

6 
	#YYLERR
 
yysvec


	)

7 
	#YYSTATE
 (
yye°©e
-
yysvec
-1)

	)

8 
	#YYOPTIM
 1

	)

9 
	#YYLMAX
 200

	)

10 
	#ouçut
(
c
Ë
	`putc
(c,
yyout
)

	)

11 
	#öput
(Ë(((
yytch¨
=
yy•å
>
yysbuf
?
	`U
(*--yy•å):
	`gëc
(
yyö
))==10?(
yylöío
++,yytch¨):yytch¨)==
EOF
?0:yytch¨)

	)

12 
	#u≈ut
(
c
Ë{
yytch¨
(c);if(yytch¨=='\n')
yylöío
--;*
yy•å
++=yytch¨;}

	)

13 
	#yym‹e
(Ë(
yym‹fg
=1)

	)

14 
	#ECHO
 
	`Ârötf
(
yyout
, "%s",
yyãxt
)

	)

15 
	#REJECT
 { 
n°r
 = 
	`yyªje˘
(); 
yyfussy
;}

	)

16 
	gyyÀng
; 
yyãxt
[];

17 
	gyym‹fg
;

18 *
yy•å
, 
yysbuf
[];

19 
	gyytch¨
;

22 
FILE
 *
	gyyö
 = {(FILE *)0}, *
	gyyout
 = {(FILE *)1};

23 
yylöío
;

24 
	syysvf
 {

25 
yyw‹k
 *
	myy°off
;

26 
yysvf
 *
	myyŸhî
;

27 *
	myy°›s
;};

28 
yysvf
 *
	gyye°©e
;

29 
yysvf
 
yysvec
[], *
yybgö
;

31 
	~<°rög.h
>

32 
	~"utû.h
"

33 
	~"symbﬁ.h
"

34 
	~"absyn.h
"

35 
	~"y.èb.h
"

36 
	~"îr‹msg.h
"

38 
	gcomLevñ
=0;

40 
	#STRINGMAX
 1024

	)

41 
	g°rögbuûd
[
STRINGMAX
+1];

42 
	g°rögödex
=0;

44 
	$≠≥nd
(
c
)

45 { i‡(
°rögödex
<
STRINGMAX
)

46 
°rögbuûd
[
°rögödex
++]
c
;

47 {
	`EM_îr‹
(
EM_tokPos
,"stringÅooÜong.");

48 
°rögödex
=0;}

49 
	}
}

51 
°rög
 
	$gë°rög
()

52 {
°rögbuûd
[
°rögödex
]=0;

53 
°rögödex
=0;

54  
	`Såög
(
°rögbuûd
);

55 
	}
}

58 
	gch¨Pos
=1;

60 
	$yywøp
()

62 i‡(
comLevñ
)

63 
	`EM_îr‹
(
EM_tokPos
,"unclosed comment");

64 
ch¨Pos
=1;

66 
	}
}

69 
	$adju°
()

71 
EM_tokPos
=
ch¨Pos
;

72 
ch¨Pos
+=
yyÀng
;

73 
	}
}

75 
	#A
 2

	)

76 
	#S
 4

	)

77 
	#F
 6

	)

78 
	#YYNEWLINE
 10

	)

79 
	$yyÀx
(){

80 
n°r
; 
yy¥evious
;

81 (
n°r
 = 
	`yylook
()) >= 0)

82 
yyfussy
: 
n°r
){

84 if(
	`yywøp
()) (0); ;

86 {
	`adju°
(); ;}

89 {
	`adju°
(); 
	`EM_√wlöe
(); ;}

92 {
	`adju°
();  
COMMA
;}

95 {
	`adju°
();  
LBRACE
;}

98 {
	`adju°
();  
RBRACE
;}

101 {
	`adju°
();  
LBRACK
;}

104 {
	`adju°
();  
RBRACK
;}

107 {
	`adju°
();  
COLON
;}

110 {
	`adju°
();  
SEMICOLON
;}

113 {
	`adju°
();  
LPAREN
;}

116 {
	`adju°
();  
RPAREN
;}

119 {
	`adju°
();  
DOT
;}

122 {
	`adju°
();  
PLUS
;}

125 {
	`adju°
();  
MINUS
;}

128 {
	`adju°
();  
TIMES
;}

131 {
	`adju°
();  
DIVIDE
;}

134 {
	`adju°
();  
AND
;}

137 {
	`adju°
();  
OR
;}

140 {
	`adju°
();  
ASSIGN
;}

143 {
	`adju°
();  
EQ
;}

146 {
	`adju°
();  
NEQ
;}

149 {
	`adju°
();  
GT
;}

152 {
	`adju°
();  
LT
;}

155 {
	`adju°
();  
GE
;}

158 {
	`adju°
();  
LE
;}

161 {
	`adju°
();  
FOR
;}

164 {
	`adju°
();  
WHILE
;}

167 {
	`adju°
();  
BREAK
;}

170 {
	`adju°
();  
LET
;}

173 {
	`adju°
();  
IN
;}

176 {
	`adju°
();  
NIL
;}

179 {
	`adju°
();  
TO
;}

182 {
	`adju°
();  
END
;}

185 {
	`adju°
();  
FUNCTION
;}

188 {
	`adju°
();  
VAR
;}

191 {
	`adju°
();  
TYPE
;}

194 {
	`adju°
();  
ARRAY
;}

197 {
	`adju°
();  
IF
;}

200 {
	`adju°
();  
THEN
;}

203 {
	`adju°
();  
ELSE
;}

206 {
	`adju°
();  
DO
;}

209 {
	`adju°
();  
OF
;}

212 {
	`adju°
(); 
yylvÆ
.
svÆ
 = 
	`Såög
((*)
yyãxt
);  
ID
;}

215 {
	`adju°
(); 
yylvÆ
.
ivÆ
=
	`©oi
(
yyãxt
);  
INT
;}

218 {
	`adju°
(); 
BEGIN
 
S
; ;}

221 {
	`adju°
(); 
BEGIN
 
A
; 
comLevñ
 = 1; ;}

224 {
	`adju°
(); 
	`EM_îr‹
(
EM_tokPos
,"unmatched close comment");

228 {
	`adju°
(); 
	`EM_îr‹
(
EM_tokPos
,"non-Ascii character");

232 {
	`adju°
(); 
	`EM_îr‹
(
EM_tokPos
,"illegalÅoken");

236 {
	`adju°
(); 
comLevñ
++; ;}

239 {
	`adju°
(); 
	`EM_√wlöe
(); ;}

242 {
	`adju°
(); 
comLevñ
--;

243 i‡(
comLevñ
==0Ë{
BEGIN
 
INITIAL
;}

247 {
	`adju°
(); ;}

250 {
	`adju°
(); 
BEGIN
 
INITIAL
;

251 
yylvÆ
.
svÆ
=
	`gë°rög
();

252  
STRING
;}

255 {
	`adju°
(); 
	`EM_îr‹
 (
EM_tokPos
,"unclosed string");

256 
	`EM_√wlöe
();

257 
BEGIN
 
INITIAL
;

258 
yylvÆ
.
svÆ
=
	`gë°rög
();

259  
STRING
;}

262 {
	`adju°
(); 
	`EM_√wlöe
(); 
BEGIN
 
F
; ;}

265 {
	`adju°
(); 
BEGIN
 
F
; ;}

268 {
	`adju°
(); 
	`≠≥nd
(*
yyãxt
); ;}

271 {
	`adju°
(); 
	`EM_√wlöe
(); ;}

274 {
	`adju°
(); ;}

277 {
	`adju°
(); 
BEGIN
 
S
; ;}

280 {
	`adju°
(); 
	`EM_îr‹
(
EM_tokPos
, "unclosed string");

281 
BEGIN
 
INITIAL
;

282 
yylvÆ
.
svÆ
=
	`gë°rög
();

283  
STRING
;}

286 {
	`adju°
(); 
	`≠≥nd
('\t'); ;}

289 {
	`adju°
(); 
	`≠≥nd
('\n'); ;}

292 {
	`adju°
(); 
	`≠≥nd
('\\'); ;}

295 {
	`adju°
(); 
	`≠≥nd
(
yyãxt
[1]); ;}

298 {
	`adju°
(); 
	`≠≥nd
(
yyãxt
[2]-'@');

302 {
x
 = 
yyãxt
[1]*100 + yytext[2]*10 + yytext[3] -

304 
	`adju°
();

305 i‡(
x
>255)

306 
	`EM_îr‹
(
EM_tokPos
, "illegalásciiÉscape");

307 
	`≠≥nd
(
x
);

312 {
	`adju°
(); 
	`EM_îr‹
(
EM_tokPos
, "illegal stringÉscape");

318 
	`Ârötf
(
yyout
,"bad swôch yylook %d",
n°r
);

319 } (0); 
	}
}

321 
	gyyv°›
[] = {

753 
	#YYTYPE
 

	)

754 
	syyw‹k
 { 
YYTYPE
 
	mvîify
, 
	madv™˚
; } 
	gyy¸™k
[] = {

877 
yysvf
 
	gyysvec
[] = {

879 
yy¸™k
+-1, 0, 
yyv°›
+1,

880 
yy¸™k
+-93, 
yysvec
+1, 
yyv°›
+4,

881 
yy¸™k
+-178, 0, 
yyv°›
+7,

882 
yy¸™k
+-8, 
yysvec
+3, 
yyv°›
+10,

883 
yy¸™k
+-218, 0, 
yyv°›
+13,

884 
yy¸™k
+-3, 
yysvec
+5, 
yyv°›
+16,

885 
yy¸™k
+-80, 0, 
yyv°›
+19,

886 
yy¸™k
+-1, 
yysvec
+7, 
yyv°›
+22,

887 
yy¸™k
+0, 0, 
yyv°›
+25,

888 
yy¸™k
+4, 0, 
yyv°›
+27,

889 
yy¸™k
+0, 0, 
yyv°›
+30,

890 
yy¸™k
+0, 0, 
yyv°›
+32,

891 
yy¸™k
+0, 0, 
yyv°›
+35,

892 
yy¸™k
+0, 0, 
yyv°›
+38,

893 
yy¸™k
+0, 0, 
yyv°›
+41,

894 
yy¸™k
+4, 0, 
yyv°›
+44,

895 
yy¸™k
+0, 0, 
yyv°›
+47,

896 
yy¸™k
+0, 0, 
yyv°›
+50,

897 
yy¸™k
+0, 0, 
yyv°›
+53,

898 
yy¸™k
+0, 0, 
yyv°›
+56,

899 
yy¸™k
+10, 0, 
yyv°›
+59,

900 
yy¸™k
+19, 0, 
yyv°›
+62,

901 
yy¸™k
+3, 0, 
yyv°›
+65,

902 
yy¸™k
+0, 0, 
yyv°›
+68,

903 
yy¸™k
+16, 0, 
yyv°›
+71,

904 
yy¸™k
+0, 0, 
yyv°›
+74,

905 
yy¸™k
+18, 0, 
yyv°›
+77,

906 
yy¸™k
+251, 0, 
yyv°›
+80,

907 
yy¸™k
+0, 0, 
yyv°›
+83,

908 
yy¸™k
+0, 0, 
yyv°›
+86,

909 
yy¸™k
+15, 
yysvec
+28, 
yyv°›
+89,

910 
yy¸™k
+16, 
yysvec
+28, 
yyv°›
+92,

911 
yy¸™k
+21, 
yysvec
+28, 
yyv°›
+95,

912 
yy¸™k
+33, 
yysvec
+28, 
yyv°›
+98,

913 
yy¸™k
+31, 
yysvec
+28, 
yyv°›
+101,

914 
yy¸™k
+0, 
yysvec
+28, 
yyv°›
+104,

915 
yy¸™k
+47, 
yysvec
+28, 
yyv°›
+108,

916 
yy¸™k
+45, 
yysvec
+28, 
yyv°›
+111,

917 
yy¸™k
+42, 
yysvec
+28, 
yyv°›
+114,

918 
yy¸™k
+48, 
yysvec
+28, 
yyv°›
+117,

919 
yy¸™k
+52, 
yysvec
+28, 
yyv°›
+120,

920 
yy¸™k
+61, 
yysvec
+28, 
yyv°›
+123,

921 
yy¸™k
+55, 
yysvec
+28, 
yyv°›
+126,

922 
yy¸™k
+0, 0, 
yyv°›
+129,

923 
yy¸™k
+0, 0, 
yyv°›
+132,

924 
yy¸™k
+0, 0, 
yyv°›
+135,

925 
yy¸™k
+0, 0, 
yyv°›
+138,

926 
yy¸™k
+0, 0, 
yyv°›
+140,

927 
yy¸™k
+6, 0, 
yyv°›
+142,

928 
yy¸™k
+12, 0, 
yyv°›
+144,

929 
yy¸™k
+0, 0, 
yyv°›
+146,

930 
yy¸™k
+0, 0, 
yyv°›
+148,

931 
yy¸™k
+0, 0, 
yyv°›
+150,

932 
yy¸™k
+365, 0, 
yyv°›
+153,

933 
yy¸™k
+0, 0, 
yyv°›
+156,

934 
yy¸™k
+6, 0, 
yyv°›
+158,

935 
yy¸™k
+0, 0, 
yyv°›
+161,

936 
yy¸™k
+0, 0, 
yyv°›
+163,

937 
yy¸™k
+0, 
yysvec
+10, 
yyv°›
+166,

938 
yy¸™k
+0, 0, 
yyv°›
+168,

939 
yy¸™k
+0, 0, 
yyv°›
+170,

940 
yy¸™k
+0, 
yysvec
+22, 
yyv°›
+172,

941 
yy¸™k
+0, 0, 
yyv°›
+174,

942 
yy¸™k
+0, 0, 
yyv°›
+176,

943 
yy¸™k
+0, 0, 
yyv°›
+178,

944 
yy¸™k
+0, 0, 
yyv°›
+180,

945 
yy¸™k
+0, 
yysvec
+28, 
yyv°›
+182,

946 
yy¸™k
+46, 
yysvec
+28, 
yyv°›
+184,

947 
yy¸™k
+60, 
yysvec
+28, 
yyv°›
+186,

948 
yy¸™k
+0, 
yysvec
+28, 
yyv°›
+188,

949 
yy¸™k
+47, 
yysvec
+28, 
yyv°›
+191,

950 
yy¸™k
+64, 
yysvec
+28, 
yyv°›
+193,

951 
yy¸™k
+51, 
yysvec
+28, 
yyv°›
+195,

952 
yy¸™k
+56, 
yysvec
+28, 
yyv°›
+197,

953 
yy¸™k
+0, 
yysvec
+28, 
yyv°›
+199,

954 
yy¸™k
+0, 
yysvec
+28, 
yyv°›
+202,

955 
yy¸™k
+51, 
yysvec
+28, 
yyv°›
+205,

956 
yy¸™k
+60, 
yysvec
+28, 
yyv°›
+207,

957 
yy¸™k
+0, 
yysvec
+28, 
yyv°›
+209,

958 
yy¸™k
+68, 
yysvec
+28, 
yyv°›
+212,

959 
yy¸™k
+0, 
yysvec
+28, 
yyv°›
+214,

960 
yy¸™k
+58, 
yysvec
+28, 
yyv°›
+217,

961 
yy¸™k
+57, 
yysvec
+28, 
yyv°›
+219,

962 
yy¸™k
+69, 
yysvec
+28, 
yyv°›
+221,

963 
yy¸™k
+0, 0, 
yyv°›
+223,

964 
yy¸™k
+0, 0, 
yyv°›
+225,

965 
yy¸™k
+0, 0, 
yyv°›
+227,

966 
yy¸™k
+0, 0, 
yyv°›
+229,

967 
yy¸™k
+0, 0, 
yyv°›
+231,

968 
yy¸™k
+5, 0, 0,

969 
yy¸™k
+0, 0, 
yyv°›
+233,

970 
yy¸™k
+359, 0, 0,

971 
yy¸™k
+0, 0, 
yyv°›
+235,

972 
yy¸™k
+0, 0, 
yyv°›
+237,

973 
yy¸™k
+0, 
yysvec
+56, 
yyv°›
+239,

974 
yy¸™k
+79, 
yysvec
+28, 
yyv°›
+241,

975 
yy¸™k
+81, 
yysvec
+28, 
yyv°›
+243,

976 
yy¸™k
+79, 
yysvec
+28, 
yyv°›
+245,

977 
yy¸™k
+0, 
yysvec
+28, 
yyv°›
+247,

978 
yy¸™k
+0, 
yysvec
+28, 
yyv°›
+250,

979 
yy¸™k
+82, 
yysvec
+28, 
yyv°›
+253,

980 
yy¸™k
+0, 
yysvec
+28, 
yyv°›
+255,

981 
yy¸™k
+0, 
yysvec
+28, 
yyv°›
+258,

982 
yy¸™k
+72, 
yysvec
+28, 
yyv°›
+261,

983 
yy¸™k
+82, 
yysvec
+28, 
yyv°›
+263,

984 
yy¸™k
+0, 
yysvec
+28, 
yyv°›
+265,

985 
yy¸™k
+77, 
yysvec
+28, 
yyv°›
+268,

986 
yy¸™k
+181, 0, 0,

987 
yy¸™k
+0, 0, 
yyv°›
+270,

988 
yy¸™k
+68, 
yysvec
+28, 
yyv°›
+272,

989 
yy¸™k
+83, 
yysvec
+28, 
yyv°›
+274,

990 
yy¸™k
+0, 
yysvec
+28, 
yyv°›
+276,

991 
yy¸™k
+105, 
yysvec
+28, 
yyv°›
+279,

992 
yy¸™k
+0, 
yysvec
+28, 
yyv°›
+281,

993 
yy¸™k
+0, 
yysvec
+28, 
yyv°›
+284,

994 
yy¸™k
+121, 
yysvec
+28, 
yyv°›
+287,

995 
yy¸™k
+131, 0, 0,

996 
yy¸™k
+0, 
yysvec
+28, 
yyv°›
+289,

997 
yy¸™k
+0, 
yysvec
+28, 
yyv°›
+292,

998 
yy¸™k
+119, 
yysvec
+28, 
yyv°›
+295,

999 
yy¸™k
+0, 
yysvec
+28, 
yyv°›
+297,

1000 
yy¸™k
+205, 0, 0,

1001 
yy¸™k
+128, 
yysvec
+28, 
yyv°›
+300,

1002 
yy¸™k
+0, 0, 
yyv°›
+302,

1003 
yy¸™k
+130, 
yysvec
+28, 
yyv°›
+304,

1004 
yy¸™k
+0, 
yysvec
+28, 
yyv°›
+306,

1006 
yyw‹k
 *
	gyyt›
 = 
yy¸™k
+481;

1007 
yysvf
 *
	gyybgö
 = 
yysvec
+1;

1008 
	gyym©ch
[] = {

1042 
	gyyexåa
[] = {

1074 
	gyylöío
 =1;

1075 
	#YYU
(
x
Ë
	)
x

1076 
	#NLSTATE
 
yy¥evious
=
YYNEWLINE


	)

1077 
	gyyãxt
[
YYLMAX
];

1078 
yysvf
 *
	gyyl°©e
 [
YYLMAX
], **
	gyyl•
, **
	gyyﬁ•
;

1079 
	gyysbuf
[
YYLMAX
];

1080 *
	gyy•å
 = 
yysbuf
;

1081 *
	gyy‚d
;

1082 
yysvf
 *
yye°©e
;

1083 
	gyy¥evious
 = 
YYNEWLINE
;

1084 
	$yylook
(){

1085 
yysvf
 *
yy°©e
, **
l•
;

1086 
yyw‹k
 *
yyt
;

1087 
yysvf
 *
yyz
;

1088 
yych
, 
yyfú°
;

1089 
yyw‹k
 *
yyr
;

1090 #ifde‡
LEXDEBUG


1091 
debug
;

1093 *
yyœ°ch
;

1095 #ifde‡
LEXDEBUG


1096 
debug
 = 0;

1098 
yyfú°
=1;

1099 i‡(!
yym‹fg
)

1100 
yyœ°ch
 = 
yyãxt
;

1102 
yym‹fg
=0;

1103 
yyœ°ch
 = 
yyãxt
+
yyÀng
;

1106 
l•
 = 
yyl°©e
;

1107 
yye°©e
 = 
yy°©e
 = 
yybgö
;

1108 i‡(
yy¥evious
==
YYNEWLINE
Ë
yy°©e
++;

1110 #ifde‡
LEXDEBUG


1111 if(
debug
)
	`Ârötf
(
yyout
,"°©ê%d\n",
yy°©e
-
yysvec
-1);

1113 
yyt
 = 
yy°©e
->
yy°off
;

1114 if(
yyt
 =
yy¸™k
 && !
yyfú°
){

1115 
yyz
 = 
yy°©e
->
yyŸhî
;

1116 if(
yyz
 == 0);

1117 if(
yyz
->
yy°off
 =
yy¸™k
);

1119 *
yyœ°ch
++ = 
yych
 = 
	`öput
();

1120 
yyfú°
=0;

1121 
åyagaö
:

1122 #ifde‡
LEXDEBUG


1123 if(
debug
){

1124 
	`Ârötf
(
yyout
,"char ");

1125 
	`ÆÕröt
(
yych
);

1126 
	`putch¨
('\n');

1129 
yyr
 = 
yyt
;

1130 i‡–
yyt
 > 
yy¸™k
){

1131 
yyt
 = 
yyr
 + 
yych
;

1132 i‡(
yyt
 <
yyt›
 && yyt->
vîify
+
yysvec
 =
yy°©e
){

1133 if(
yyt
->
adv™˚
+
yysvec
 =
YYLERR
)

1134 {
	`u≈ut
(*--
yyœ°ch
);;}

1135 *
l•
++ = 
yy°©e
 = 
yyt
->
adv™˚
+
yysvec
;

1136 
c⁄tö
;

1139 #ifde‡
YYOPTIM


1140 if(
yyt
 < 
yy¸™k
) {

1141 
yyt
 = 
yyr
 = 
yy¸™k
+(yycrank-yyt);

1142 #ifde‡
LEXDEBUG


1143 if(
debug
)
	`Ârötf
(
yyout
,"compressed state\n");

1145 
yyt
 = yyà+ 
yych
;

1146 if(
yyt
 <
yyt›
 && yyt->
vîify
+
yysvec
 =
yy°©e
){

1147 if(
yyt
->
adv™˚
+
yysvec
 =
YYLERR
)

1148 {
	`u≈ut
(*--
yyœ°ch
);;}

1149 *
l•
++ = 
yy°©e
 = 
yyt
->
adv™˚
+
yysvec
;

1150 
c⁄tö
;

1152 
yyt
 = 
yyr
 + 
	`YYU
(
yym©ch
[
yych
]);

1153 #ifde‡
LEXDEBUG


1154 if(
debug
){

1155 
	`Ârötf
(
yyout
,"try fall back character ");

1156 
	`ÆÕröt
(
	`YYU
(
yym©ch
[
yych
]));

1157 
	`putch¨
('\n');

1160 if(
yyt
 <
yyt›
 && yyt->
vîify
+
yysvec
 =
yy°©e
){

1161 if(
yyt
->
adv™˚
+
yysvec
 =
YYLERR
)

1162 {
	`u≈ut
(*--
yyœ°ch
);;}

1163 *
l•
++ = 
yy°©e
 = 
yyt
->
adv™˚
+
yysvec
;

1164 
c⁄tö
;

1167 i‡((
yy°©e
 = yy°©e->
yyŸhî
Ë&& (
yyt
yy°©e->
yy°off
Ë!
yy¸™k
){

1168 #ifde‡
LEXDEBUG


1169 if(
debug
)
	`Ârötf
(
yyout
,"ÁŒ backÅÿ°©ê%d\n",
yy°©e
-
yysvec
-1);

1171 
åyagaö
;

1175 {
	`u≈ut
(*--
yyœ°ch
);;}

1176 
c⁄tö
:

1177 #ifde‡
LEXDEBUG


1178 if(
debug
){

1179 
	`Ârötf
(
yyout
,"°©ê%d ch¨ ",
yy°©e
-
yysvec
-1);

1180 
	`ÆÕröt
(
yych
);

1181 
	`putch¨
('\n');

1186 #ifde‡
LEXDEBUG


1187 if(
debug
){

1188 
	`Ârötf
(
yyout
,"°›≥dáà%d wôh ",*(
l•
-1)-
yysvec
-1);

1189 
	`ÆÕröt
(
yych
);

1190 
	`putch¨
('\n');

1193 
l•
-- > 
yyl°©e
){

1194 *
yyœ°ch
-- = 0;

1195 i‡(*
l•
 !0 && (
yy‚d
(*l•)->
yy°›s
) && *yyfnd > 0){

1196 
yyﬁ•
 = 
l•
;

1197 if(
yyexåa
[*
yy‚d
]){

1198 
	`yyback
((*
l•
)->
yy°›s
,-*
yy‚d
Ë!1 &&Ü• > 
yyl°©e
){

1199 
l•
--;

1200 
	`u≈ut
(*
yyœ°ch
--);

1203 
yy¥evious
 = 
	`YYU
(*
yyœ°ch
);

1204 
yyl•
 = 
l•
;

1205 
yyÀng
 = 
yyœ°ch
-
yyãxt
+1;

1206 
yyãxt
[
yyÀng
] = 0;

1207 #ifde‡
LEXDEBUG


1208 if(
debug
){

1209 
	`Ârötf
(
yyout
,"\nmatch ");

1210 
	`•röt
(
yyãxt
);

1211 
	`Ârötf
(
yyout
,"á˘i⁄ %d\n",*
yy‚d
);

1214 (*
yy‚d
++);

1216 
	`u≈ut
(*
yyœ°ch
);

1218 i‡(
yyãxt
[0] == 0 )

1220 
yy•å
=
yysbuf
;

1223 
yy¥evious
 = 
yyãxt
[0] = 
	`öput
();

1224 i‡(
yy¥evious
>0)

1225 
	`ouçut
(
yy¥evious
);

1226 
yyœ°ch
=
yyãxt
;

1227 #ifde‡
LEXDEBUG


1228 if(
debug
)
	`putch¨
('\n');

1231 
	}
}

1232 
	$yyback
(
p
, 
m
)

1233 *
p
;

1235 i‡(
p
==0) (0);

1236 *
p
)

1238 i‡(*
p
++ =
m
)

1242 
	}
}

1244 
	$yyöput
(){

1245 (
	`öput
());

1246 
	}
}

1247 
	$yyouçut
(
c
)

1248 
c
; {

1249 
	`ouçut
(
c
);

1250 
	}
}

1251 
	$yyu≈ut
(
c
)

1252 
c
; {

1253 
	`u≈ut
(
c
);

1254 
	}
}

	@parse.c

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~"utû.h
"

8 
	~"symbﬁ.h
"

9 
	~"absyn.h
"

10 
	~"îr‹msg.h
"

11 
	~"∑r£.h
"

12 
	~"¥absyn.h
"

13 
	~"ty≥s.h
"

14 
	~"ãmp.h
"

15 
	~"åì.h
"

16 
	~"‰ame.h
"

17 
	~"ˇn⁄.h
"

18 
	~"as£m.h
"

19 
	~"codegí.h
"

20 
	~"å™¶©e.h
"

21 
	~"£m™t.h
"

23 
yy∑r£
();

24 
A_exp
 
absyn_roŸ
;

25 
F_‰ame
 
globÆCuºítFøme
;

29 
A_exp
 
	$∑r£
(
°rög
 
‚ame
)

31 
	`EM_ª£t
(
‚ame
);

32 i‡(
	`yy∑r£
() == 0)

33  
absyn_roŸ
;

34  
NULL
;

35 
	}
}

37 
	$maö
(
¨gc
, **
¨gv
) {

38 i‡(
¨gc
 < 2)

40 
	`Ârötf
(
°dîr
,"usage:á.out filename\n");

41 
	`exô
(1);

43 * 
fûíame
 = "output.s";

44 if(
¨gc
 == 3){

45 
fûíame
 = 
¨gv
[2];

47 
F_‰agLi°
 
fgl
 = 
	`SEM_å™sProg
(
	`∑r£
(
¨gv
[1]));

48 
°rög
 
funcName
;

49 
FILE
 * 
outfûe
 = 
	`f›í
("output","w");

50 
FILE
 * 
outfûe1
 = 
	`f›í
(
fûíame
,"w");

51 
	`Ârötf
(
outfûe1
, "\t.fûê\"%s\"\n", 
¨gv
[1]);

52 
	`Ârötf
(
outfûe1
, "\t.text");

54 ;
fgl
;fgl=fgl->
èû
)

56 if(
fgl
->
hód
->
köd
 =
F_¥ogFøg
)

58 
globÆCuºítFøme
 = 
fgl
->
hód
->
u
.
¥oc
.
‰ame
;

59 
T_°mLi°
 
°mli°
 = 
	`C_löórize
(
fgl
->
hód
->
u
.
¥oc
.
body
);

60 
°mli°
 = 
	`C_åa˚ScheduÀ
(
	`C_basicBlocks
(stmlist));

61 
	`¥ötStmLi°
(
outfûe
,
°mli°
);

62 
AS_ö°rLi°
 
iLi°
 = 
	`F_codegí
(
fgl
->
hód
->
u
.
¥oc
.
‰ame
, 
°mli°
);

63 if(
globÆCuºítFøme
 =
	`Tr_ouãrmo°
()->
‰ame
){

64 
funcName
 = "tigermain";

67 
funcName
 = 
	`Temp_œbñ°rög
(
	`F_«me
(
globÆCuºítFøme
));

69 
	`Ârötf
(
outfûe1
, "\n.globl\t%s", 
funcName
);

70 
	`Ârötf
(
outfûe1
, "\n%s:\n", 
funcName
);

79 
	`AS_¥ötIn°rLi°
(
outfûe1
, 
iLi°
);

88 if(
fgl
->
hód
->
köd
 =
F_°rögFøg
)

90 
	`Ârötf
(
outfûe
,"%s\n",
fgl
->
hód
->
u
.
°rögg
.
°r
);

91 
	`Ârötf
(
outfûe1
, "\n%s:\n\t.°rög \"%s\\0\"\n", 
	`Temp_œbñ°rög
(
fgl
->
hód
->
u
.
°rögg
.
œbñ
), fgl->hód->u.°rögg.
°r
);

94 
	`f˛o£
(
outfûe
);

95 
	`f˛o£
(
outfûe1
);

97 
	}
}

	@parse.h

1 #i‚de‡
_PARSE_H_


2 
	#_PARSE_H_


	)

7 
A_exp
 
∑r£
(
°rög
 
‚ame
);

	@prabsyn.c

6 
	~<°dio.h
>

7 
	~"utû.h
"

8 
	~"symbﬁ.h
"

9 
	~"absyn.h
"

10 
	~"¥absyn.h
"

13 
¥_v¨
(
FILE
 *
out
, 
A_v¨
 
v
, 
d
);

14 
¥_dec
(
FILE
 *
out
, 
A_dec
 
v
, 
d
);

15 
¥_ty
(
FILE
 *
out
, 
A_ty
 
v
, 
d
);

16 
¥_fõld
(
FILE
 *
out
, 
A_fõld
 
v
, 
d
);

17 
¥_fõldLi°
(
FILE
 *
out
, 
A_fõldLi°
 
v
, 
d
);

18 
¥_expLi°
(
FILE
 *
out
, 
A_expLi°
 
v
, 
d
);

19 
¥_fundec
(
FILE
 *
out
, 
A_fundec
 
v
, 
d
);

20 
¥_fundecLi°
(
FILE
 *
out
, 
A_fundecLi°
 
v
, 
d
);

21 
¥_decLi°
(
FILE
 *
out
, 
A_decLi°
 
v
, 
d
);

22 
¥_«mëy
(
FILE
 *
out
, 
A_«mëy
 
v
, 
d
);

23 
¥_«mëyLi°
(
FILE
 *
out
, 
A_«mëyLi°
 
v
, 
d
);

24 
¥_efõld
(
FILE
 *
out
, 
A_efõld
 
v
, 
d
);

25 
¥_efõldLi°
(
FILE
 *
out
, 
A_efõldLi°
 
v
, 
d
);

27 
	$ödít
(
FILE
 *
out
, 
d
) {

28 
i
;

29 
i
 = 0; i <
d
; i++Ë
	`Ârötf
(
out
, " ");

30 
	}
}

33 
	$¥_v¨
(
FILE
 *
out
, 
A_v¨
 
v
, 
d
) {

34 
	`ödít
(
out
, 
d
);

35 
v
->
köd
) {

36 
A_sim∂eV¨
:

37 
	`Ârötf
(
out
, "sim∂eV¨(%s)", 
	`S_«me
(
v
->
u
.
sim∂e
));

39 
A_fõldV¨
:

40 
	`Ârötf
(
out
, "%s\n", "fieldVar(");

41 
	`¥_v¨
(
out
, 
v
->
u
.
fõld
.
v¨
, 
d
+1); 
	`Ârötf
(out, "%s\n", ",");

42 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s)", 
	`S_«me
(
v
->
u
.
fõld
.
sym
));

44 
A_subs¸ùtV¨
:

45 
	`Ârötf
(
out
, "%s\n", "subscriptVar(");

46 
	`¥_v¨
(
out
, 
v
->
u
.
subs¸ùt
.
v¨
, 
d
+1); 
	`Ârötf
(out, "%s\n", ",");

47 
	`¥_exp
(
out
, 
v
->
u
.
subs¸ùt
.
exp
, 
d
+1); 
	`Ârötf
(out, "%s", ")");

50 
	`as£π
(0);

52 
	}
}

54 
	g°r_›î
[][12] = {

58 
	$¥_›î
(
FILE
 *
out
, 
A_›î
 
d
) {

59 
	`Ârötf
(
out
, "%s", 
°r_›î
[
d
]);

60 
	}
}

63 
	$¥_exp
(
FILE
 *
out
, 
A_exp
 
v
, 
d
) {

64 
	`ödít
(
out
, 
d
);

65 
v
->
köd
) {

66 
A_v¨Exp
:

67 
	`Ârötf
(
out
, "v¨Exp(\n"); 
	`¥_v¨
(out, 
v
->
u
.
v¨
, 
d
+1);

68 
	`Ârötf
(
out
, "%s", ")");

70 
A_nûExp
:

71 
	`Ârötf
(
out
, "nilExp()");

73 
A_ötExp
:

74 
	`Ârötf
(
out
, "ötExp(%d)", 
v
->
u
.
öâ
);

76 
A_°rögExp
:

77 
	`Ârötf
(
out
, "°rögExp(%s)", 
v
->
u
.
°rögg
);

79 
A_ˇŒExp
:

80 
	`Ârötf
(
out
, "ˇŒExp(%s,\n", 
	`S_«me
(
v
->
u
.
ˇŒ
.
func
));

81 
	`¥_expLi°
(
out
, 
v
->
u
.
ˇŒ
.
¨gs
, 
d
+1); 
	`Ârötf
(out, ")");

83 
A_›Exp
:

84 
	`Ârötf
(
out
, "opExp(\n");

85 
	`ödít
(
out
, 
d
+1); 
	`¥_›î
(out, 
v
->
u
.
›
.
›î
); 
	`Ârötf
(out, ",\n");

86 
	`¥_exp
(
out
, 
v
->
u
.
›
.
À·
, 
d
+1); 
	`Ârötf
(out, ",\n");

87 
	`¥_exp
(
out
, 
v
->
u
.
›
.
right
, 
d
+1); 
	`Ârötf
(out, ")");

89 
A_ªc‹dExp
:

90 
	`Ârötf
(
out
, "ªc‹dExp(%s,\n", 
	`S_«me
(
v
->
u
.
ªc‹d
.
typ
));

91 
	`¥_efõldLi°
(
out
, 
v
->
u
.
ªc‹d
.
fõlds
, 
d
+1); 
	`Ârötf
(out, ")");

93 
A_£qExp
:

94 
	`Ârötf
(
out
, "seqExp(\n");

95 
	`¥_expLi°
(
out
, 
v
->
u
.
£q
, 
d
+1); 
	`Ârötf
(out, ")");

97 
A_assignExp
:

98 
	`Ârötf
(
out
, "assignExp(\n");

99 
	`¥_v¨
(
out
, 
v
->
u
.
assign
.
v¨
, 
d
+1); 
	`Ârötf
(out, ",\n");

100 
	`¥_exp
(
out
, 
v
->
u
.
assign
.
exp
, 
d
+1); 
	`Ârötf
(out, ")");

102 
A_ifExp
:

103 
	`Ârötf
(
out
, "iffExp(\n");

104 
	`¥_exp
(
out
, 
v
->
u
.
iff
.
ã°
, 
d
+1); 
	`Ârötf
(out, ",\n");

105 
	`¥_exp
(
out
, 
v
->
u
.
iff
.
thí
, 
d
+1);

106 i‡(
v
->
u
.
iff
.
ñ£e
) {

107 
	`Ârötf
(
out
, ",\n");

108 
	`¥_exp
(
out
, 
v
->
u
.
iff
.
ñ£e
, 
d
+1);

110 
	`Ârötf
(
out
, ")");

112 
A_whûeExp
:

113 
	`Ârötf
(
out
, "whileExp(\n");

114 
	`¥_exp
(
out
, 
v
->
u
.
whûì
.
ã°
, 
d
+1); 
	`Ârötf
(out, ",\n");

115 
	`¥_exp
(
out
, 
v
->
u
.
whûì
.
body
, 
d
+1); 
	`Ârötf
(out, ")\n");

117 
A_f‹Exp
:

118 
	`Ârötf
(
out
, "f‹Exp(%s,\n", 
	`S_«me
(
v
->
u
.
f‹r
.
v¨
));

119 
	`¥_exp
(
out
, 
v
->
u
.
f‹r
.
lo
, 
d
+1); 
	`Ârötf
(out, ",\n");

120 
	`¥_exp
(
out
, 
v
->
u
.
f‹r
.
hi
, 
d
+1); 
	`Ârötf
(out, "%s\n", ",");

121 
	`¥_exp
(
out
, 
v
->
u
.
f‹r
.
body
, 
d
+1); 
	`Ârötf
(out, ",\n");

122 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s", 
v
->
u
.
f‹r
.
esˇ≥
 ? "TRUE)" : "FALSE)");

124 
A_bªakExp
:

125 
	`Ârötf
(
out
, "breakExp()");

127 
A_ÀtExp
:

128 
	`Ârötf
(
out
, "letExp(\n");

129 
	`¥_decLi°
(
out
, 
v
->
u
.
Àt
.
decs
, 
d
+1); 
	`Ârötf
(out, ",\n");

130 
	`¥_exp
(
out
, 
v
->
u
.
Àt
.
body
, 
d
+1); 
	`Ârötf
(out, ")");

132 
A_¨øyExp
:

133 
	`Ârötf
(
out
, "¨øyExp(%s,\n", 
	`S_«me
(
v
->
u
.
¨øy
.
typ
));

134 
	`¥_exp
(
out
, 
v
->
u
.
¨øy
.
size
, 
d
+1); 
	`Ârötf
(out, ",\n");

135 
	`¥_exp
(
out
, 
v
->
u
.
¨øy
.
öô
, 
d
+1); 
	`Ârötf
(out, ")");

138 
	`as£π
(0);

140 
	}
}

142 
	$¥_dec
(
FILE
 *
out
, 
A_dec
 
v
, 
d
) {

143 
	`ödít
(
out
, 
d
);

144 
v
->
köd
) {

145 
A_fun˘i⁄Dec
:

146 
	`Ârötf
(
out
, "functionDec(\n");

147 
	`¥_fundecLi°
(
out
, 
v
->
u
.
fun˘i⁄
, 
d
+1); 
	`Ârötf
(out, ")");

149 
A_v¨Dec
:

150 
	`Ârötf
(
out
, "v¨Dec(%s,\n", 
	`S_«me
(
v
->
u
.
v¨
.var));

151 i‡(
v
->
u
.
v¨
.
typ
) {

152 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s,\n", 
	`S_«me
(
v
->
u
.
v¨
.
typ
));

154 
	`¥_exp
(
out
, 
v
->
u
.
v¨
.
öô
, 
d
+1); 
	`Ârötf
(out, ",\n");

155 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s", 
v
->
u
.
v¨
.
esˇ≥
 ? "TRUE)" : "FALSE)");

157 
A_ty≥Dec
:

158 
	`Ârötf
(
out
, "typeDec(\n");

159 
	`¥_«mëyLi°
(
out
, 
v
->
u
.
ty≥
, 
d
+1); 
	`Ârötf
(out, ")");

162 
	`as£π
(0);

164 
	}
}

166 
	$¥_ty
(
FILE
 *
out
, 
A_ty
 
v
, 
d
) {

167 
	`ödít
(
out
, 
d
);

168 
v
->
köd
) {

169 
A_«meTy
:

170 
	`Ârötf
(
out
, "«meTy(%s)", 
	`S_«me
(
v
->
u
.
«me
));

172 
A_ªc‹dTy
:

173 
	`Ârötf
(
out
, "recordTy(\n");

174 
	`¥_fõldLi°
(
out
, 
v
->
u
.
ªc‹d
, 
d
+1); 
	`Ârötf
(out, ")");

176 
A_¨øyTy
:

177 
	`Ârötf
(
out
, "¨øyTy(%s)", 
	`S_«me
(
v
->
u
.
¨øy
));

180 
	`as£π
(0);

182 
	}
}

184 
	$¥_fõld
(
FILE
 *
out
, 
A_fõld
 
v
, 
d
) {

185 
	`ödít
(
out
, 
d
);

186 
	`Ârötf
(
out
, "fõld(%s,\n", 
	`S_«me
(
v
->
«me
));

187 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s,\n", 
	`S_«me
(
v
->
typ
));

188 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s", 
v
->
esˇ≥
 ? "TRUE)" : "FALSE)");

189 
	}
}

191 
	$¥_fõldLi°
(
FILE
 *
out
, 
A_fõldLi°
 
v
, 
d
) {

192 
	`ödít
(
out
, 
d
);

193 i‡(
v
) {

194 
	`Ârötf
(
out
, "fieldList(\n");

195 
	`¥_fõld
(
out
, 
v
->
hód
, 
d
+1); 
	`Ârötf
(out, ",\n");

196 
	`¥_fõldLi°
(
out
, 
v
->
èû
, 
d
+1); 
	`Ârötf
(out, ")");

198 
	`Ârötf
(
out
, "fieldList()");

199 
	}
}

201 
	$¥_expLi°
(
FILE
 *
out
, 
A_expLi°
 
v
, 
d
) {

202 
	`ödít
(
out
, 
d
);

203 i‡(
v
) {

204 
	`Ârötf
(
out
, "expList(\n");

205 
	`¥_exp
(
out
, 
v
->
hód
, 
d
+1); 
	`Ârötf
(out, ",\n");

206 
	`¥_expLi°
(
out
, 
v
->
èû
, 
d
+1);

207 
	`Ârötf
(
out
, ")");

209 
	`Ârötf
(
out
, "expList()");

211 
	}
}

213 
	$¥_fundec
(
FILE
 *
out
, 
A_fundec
 
v
, 
d
) {

214 
	`ödít
(
out
, 
d
);

215 
	`Ârötf
(
out
, "fundec(%s,\n", 
	`S_«me
(
v
->
«me
));

216 
	`¥_fõldLi°
(
out
, 
v
->
∑øms
, 
d
+1); 
	`Ârötf
(out, ",\n");

217 i‡(
v
->
ªsu…
) {

218 
	`ödít
(
out
, 
d
+1); 
	`Ârötf
(out, "%s,\n", 
	`S_«me
(
v
->
ªsu…
));

220 
	`¥_exp
(
out
, 
v
->
body
, 
d
+1); 
	`Ârötf
(out, ")");

221 
	}
}

223 
	$¥_fundecLi°
(
FILE
 *
out
, 
A_fundecLi°
 
v
, 
d
) {

224 
	`ödít
(
out
, 
d
);

225 i‡(
v
) {

226 
	`Ârötf
(
out
, "fundecList(\n");

227 
	`¥_fundec
(
out
, 
v
->
hód
, 
d
+1); 
	`Ârötf
(out, ",\n");

228 
	`¥_fundecLi°
(
out
, 
v
->
èû
, 
d
+1); 
	`Ârötf
(out, ")");

230 
	`Ârötf
(
out
, "fundecList()");

231 
	}
}

233 
	$¥_decLi°
(
FILE
 *
out
, 
A_decLi°
 
v
, 
d
) {

234 
	`ödít
(
out
, 
d
);

235 i‡(
v
) {

236 
	`Ârötf
(
out
, "decList(\n");

237 
	`¥_dec
(
out
, 
v
->
hód
, 
d
+1); 
	`Ârötf
(out, ",\n");

238 
	`¥_decLi°
(
out
, 
v
->
èû
, 
d
+1);

239 
	`Ârötf
(
out
, ")");

241 
	`Ârötf
(
out
, "decList()");

243 
	}
}

245 
	$¥_«mëy
(
FILE
 *
out
, 
A_«mëy
 
v
, 
d
) {

246 
	`ödít
(
out
, 
d
);

247 
	`Ârötf
(
out
, "«mëy(%s,\n", 
	`S_«me
(
v
->
«me
));

248 
	`¥_ty
(
out
, 
v
->
ty
, 
d
+1); 
	`Ârötf
(out, ")");

249 
	}
}

251 
	$¥_«mëyLi°
(
FILE
 *
out
, 
A_«mëyLi°
 
v
, 
d
) {

252 
	`ödít
(
out
, 
d
);

253 i‡(
v
) {

254 
	`Ârötf
(
out
, "nametyList(\n");

255 
	`¥_«mëy
(
out
, 
v
->
hód
, 
d
+1); 
	`Ârötf
(out, ",\n");

256 
	`¥_«mëyLi°
(
out
, 
v
->
èû
, 
d
+1); 
	`Ârötf
(out, ")");

258 
	`Ârötf
(
out
, "nametyList()");

259 
	}
}

261 
	$¥_efõld
(
FILE
 *
out
, 
A_efõld
 
v
, 
d
) {

262 
	`ödít
(
out
, 
d
);

263 i‡(
v
) {

264 
	`Ârötf
(
out
, "efõld(%s,\n", 
	`S_«me
(
v
->
«me
));

265 
	`¥_exp
(
out
, 
v
->
exp
, 
d
+1); 
	`Ârötf
(out, ")");

267 
	`Ârötf
(
out
, "efield()");

268 
	}
}

270 
	$¥_efõldLi°
(
FILE
 *
out
, 
A_efõldLi°
 
v
, 
d
) {

271 
	`ödít
(
out
, 
d
);

272 i‡(
v
) {

273 
	`Ârötf
(
out
, "efieldList(\n");

274 
	`¥_efõld
(
out
, 
v
->
hód
, 
d
+1); 
	`Ârötf
(out, ",\n");

275 
	`¥_efõldLi°
(
out
, 
v
->
èû
, 
d
+1); 
	`Ârötf
(out, ")");

277 
	`Ârötf
(
out
, "efieldList()");

278 
	}
}

	@prabsyn.h

1 #i‚de‡
_PRABSYN_H_


2 
	#_PRABSYN_H_


	)

7 
¥_exp
(
FILE
 *
out
, 
A_exp
 
v
, 
d
);

	@printtree.c

5 
	~<°dio.h
>

6 
	~"utû.h
"

7 
	~"symbﬁ.h
"

8 
	~"ãmp.h
"

9 
	~"åì.h
"

10 
	~"¥öâªe.h
"

13 
¥_åì_exp
(
FILE
 *
out
, 
T_exp
 
exp
, 
d
);

15 
	$ödít
(
FILE
 *
out
, 
d
) {

16 
i
;

17 
i
 = 0; i <
d
; i++Ë
	`Ârötf
(
out
, " ");

18 
	}
}

20 
	gbö_›î
[][12] = {

24 
	gªl_›î
[][12] = {

27 
	$¥_°m
(
FILE
 *
out
, 
T_°m
 
°m
, 
d
)

29 
°m
->
köd
) {

30 
T_SEQ
:

31 
	`ödít
(
out
,
d
);

32 
	`Ârötf
(
out
, "SEQ(\n"); 
	`¥_°m
(out, 
°m
->
u
.
SEQ
.
À·
,
d
+1); fprintf(out, ",\n");

33 
	`¥_°m
(
out
, 
°m
->
u
.
SEQ
.
right
,
d
+1); 
	`Ârötf
(out, ")");

35 
T_LABEL
:

36 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "LABEL %s", 
	`S_«me
(
°m
->
u
.
LABEL
));

38 
T_JUMP
:

39 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "JUMP(\n"); 
	`¥_åì_exp
(out, 
°m
->
u
.
JUMP
.
exp
,d+1);

40 
	`Ârötf
(
out
, ")");

42 
T_CJUMP
:

43 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "CJUMP(%s,\n", 
ªl_›î
[
°m
->
u
.
CJUMP
.
›
]);

44 
	`¥_åì_exp
(
out
, 
°m
->
u
.
CJUMP
.
À·
,
d
+1); 
	`Ârötf
(out, ",\n");

45 
	`¥_åì_exp
(
out
, 
°m
->
u
.
CJUMP
.
right
,
d
+1); 
	`Ârötf
(out, ",\n");

46 
	`ödít
(
out
,
d
+1); 
	`Ârötf
(out, "%s,", 
	`S_«me
(
°m
->
u
.
CJUMP
.
åue
));

47 
	`Ârötf
(
out
, "%s", 
	`S_«me
(
°m
->
u
.
CJUMP
.
Ál£
)); fprintf(out, ")");

49 
T_MOVE
:

50 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "MOVE(\n"); 
	`¥_åì_exp
(out, 
°m
->
u
.
MOVE
.
d°
,d+1);

51 
	`Ârötf
(
out
, ",\n");

52 
	`¥_åì_exp
(
out
, 
°m
->
u
.
MOVE
.
§c
,
d
+1); 
	`Ârötf
(out, ")");

54 
T_EXP
:

55 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "EXP(\n"); 
	`¥_åì_exp
(out, 
°m
->
u
.
EXP
,d+1);

56 
	`Ârötf
(
out
, ")");

59 
	}
}

61 
	$¥_åì_exp
(
FILE
 *
out
, 
T_exp
 
exp
, 
d
)

63 
exp
->
köd
) {

64 
T_BINOP
:

65 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "BINOP(%s,\n", 
bö_›î
[
exp
->
u
.
BINOP
.
›
]);

66 
	`¥_åì_exp
(
out
, 
exp
->
u
.
BINOP
.
À·
,
d
+1); 
	`Ârötf
(out, ",\n");

67 
	`¥_åì_exp
(
out
, 
exp
->
u
.
BINOP
.
right
,
d
+1); 
	`Ârötf
(out, ")");

69 
T_MEM
:

70 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "MEM");

71 
	`Ârötf
(
out
, "(\n"); 
	`¥_åì_exp
(out, 
exp
->
u
.
MEM
,
d
+1); fprintf(out, ")");

73 
T_TEMP
:

74 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "TEMPÅ%s",

75 
	`Temp_look
(
	`Temp_«me
(), 
exp
->
u
.
TEMP
));

77 
T_ESEQ
:

78 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "ESEQ(\n"); 
	`¥_°m
(out, 
exp
->
u
.
ESEQ
.
°m
,d+1);

79 
	`Ârötf
(
out
, ",\n");

80 
	`¥_åì_exp
(
out
, 
exp
->
u
.
ESEQ
.exp,
d
+1); 
	`Ârötf
(out, ")");

82 
T_NAME
:

83 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "NAME %s", 
	`S_«me
(
exp
->
u
.
NAME
));

85 
T_CONST
:

86 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "CONST %d", 
exp
->
u
.
CONST
);

88 
T_CALL
:

89 {
T_expLi°
 
¨gs
 = 
exp
->
u
.
CALL
.args;

90 
	`ödít
(
out
,
d
); 
	`Ârötf
(out, "CALL(\n"); 
	`¥_åì_exp
(out, 
exp
->
u
.
CALL
.
fun
,d+1);

91 ;
¨gs
;árgs˜rgs->
èû
) {

92 
	`Ârötf
(
out
, ",\n"); 
	`¥_åì_exp
(out, 
¨gs
->
hód
,
d
+2);

94 
	`Ârötf
(
out
, ")");

98 
	}
}

100 
	$¥ötStmLi°
 (
FILE
 *
out
, 
T_°mLi°
 
°mLi°
)

102 ; 
°mLi°
; stmLi°=°mLi°->
èû
) {

103 
	`¥_°m
(
out
, 
°mLi°
->
hód
,0); 
	`Ârötf
(out, "\n");

105 
	}
}

	@printtree.h

1 #i‚de‡
_PRINTTREE_H_


2 
	#_PRINTTREE_H_


	)

7 
¥ötStmLi°
 (
FILE
 *
out
, 
T_°mLi°
 
°mLi°
) ;

	@runtime.c

1 
	#gëch¨
 
gë_ch¨


	)

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

5 *
	$öôAºay
(
size
, 
öô
)

6 { 
	`¥ötf
("¨øy_öô:%x\n",
öô
);

7 
	`¥ötf
("¨øy size:%d\n",
size
);

8 
i
;

9 *
a
 = (*)
	`mÆloc
(
size
*());

10 
i
=0;i<
size
;i++Ë
a
[i]=
öô
;

11  
a
;

12 
	}
}

14 *
	$ÆlocRec‹d
(
size
)

16 
i
;

17 *
a
;

18 
	`¥ötf
("ªc‹d size:%d\n",
size
);

19 
a
 = (*)
	`mÆloc
(
size
*());

20 
i
=0;i<
size
;i++Ë
a
[i] = 0;

21  
a
;

22 
	}
}

24 * 
	t°rög
;

26 
	$°rögEquÆ
(
lök
, 
°rög
 
s
, såög 
t
)

28  !
	`°rcmp
(
s
, 
t
);

29 
	}
}

31 
	$¥öt
(
lök
, 
°rög
 
s
)

33 
	`¥ötf
("%s", 
s
);

34 
	}
}

36 
	$¥öti
(
lök
, 
i
)

38 
	`¥ötf
("%d", 
i
);

39 
	}
}

41 
	$Êush
(
lök
)

43 
	`fÊush
(
°dout
);

44 
	}
}

46 
	$maö
()

48  
	`tigîmaö
(0 );

49 
	}
}

51 
	$‹d
(
lök
, 
°rög
 
s
)

53 i‡(
s
 && !s[0])  -1;

54  
s
[0];

55 
	}
}

57 
°rög
 
	$chr
(
lök
, 
i
)

59 i‡(
i
<0 || i>=256)

61 
	`¥ötf
("chr(%dËouào‡ønge\n",
i
);

62 
	`exô
(1);

64 
°rög
 
t
=(°rög)
	`mÆloc
(2);

65 
t
[0]=
i
;

66 
t
[1]='\0';

67  
t
;

68 
	}
}

70 
	$size
(
lök
, 
°rög
 
s
)

72 
i
;

73 
i
 = 0; 
s
[i]; i++);

74  
i
;

75 
	}
}

77 
°rög
 
	$sub°rög
(
lök
, 
°rög
 
s
, 
fú°
, 
n
)

79 
Àn
 = 
	`size
(
lök
, 
s
);

80 i‡(
fú°
<0 || fú°+
n
>
Àn
)

82 
	`¥ötf
("sub°rög([%d],%d,%dËouào‡ønge\n",
Àn
,
fú°
,
n
);

83 
	`exô
(1);

85 
°rög
 
t
=(°rög)
	`mÆloc
(
n
+1);

86 
i
;

87 
i
=0; i< 
n
; i++)

88 
t
[
i
]=
s
[
fú°
+i];

89 
t
[
i
]='\0';

90  
t
;

91 
	}
}

93 
°rög
 
	$c⁄ˇt
(
lök
, 
°rög
 
a
, såög 
b
)

95 
À«
 = 
	`size
(
lök
, 
a
);

96 
Ànb
 = 
	`size
(
lök
, 
b
);

97 if(
À«
==0Ë 
b
;

98 if(
Ànb
==0Ë 
a
;

101 
°rög
 
t
=(°rög)
	`mÆloc
(
À«
+
Ànb
+1);

102 
i
;

103 
i
=0;i<
À«
;i++)

104 
t
[
i
] = 
a
[i];

105 
i
=0;i<
Ànb
;i++)

106 
t
[
i
+
À«
] = 
b
[i];

107 
t
[
i
]='\0';

108  
t
;

110 
	}
}

112 
	$nŸ
(
lök
, 
i
)

114  !
i
;

115 
	}
}

118 #unde‡
gëch¨


120 
°rög
 
	$gëch¨
(
lök
)

122 
i
=
	`gëc
(
°dö
);

123 i‡(
i
==
EOF
)  "";

126 
°rög
 
t
 = 
	`mÆloc
(2);

127 
t
[0] = 
i
;

128 
t
[1] = '\0';

129  
t
;

131 
	}
}

132 *
	$gë_°©i˛ök
(
aim
){

133 *
v
 = &
aim
;

134 *
ebp
 = (*)*((*)((()
v
)-8));

135 * 
Àvñ

NULL
;

137 
Àvñ
 = (*)(()
ebp
+8);

138 
ebp
 = (*)(*ebp);

139 }(*
Àvñ
Ë!
aim
);

140  
ebp
;

141 
	}
}

	@semant.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"utû.h
"

4 
	~"îr‹msg.h
"

5 
	~"èbÀ.h
"

6 
	~"symbﬁ.h
"

7 
	~"absyn.h
"

9 
	~"ãmp.h
"

12 
	~"å™¶©e.h
"

13 
	~"£m™t.h
"

14 
	~"ív.h
"

15 
ex±y
 
	$expTy
(
Tr_exp
 
exp
, 
Ty_ty
 
ty
){

16 
ex±y
 
e
;

17 
e
.
exp
 =Éxp;

18 
e
.
ty
 =Åy;

19  
e
;

20 
	}
};

21 
ex±y
 
å™sDec
(
A_dec
 
dec
, 
Tr_Àvñ
 
Àvñ
,
S_èbÀ
 
ãnv
, S_èbÀ 
vív
);

22 
ex±y
 
å™sExp
(
A_exp
 
exp
, 
Tr_Àvñ
 
Àvñ
, 
S_èbÀ
 
ãnv
,S_èbÀ 
vív
);

23 
ex±y
 
å™sV¨
(
A_v¨
 
v¨
, 
Tr_Àvñ
 
Àvñ
,
S_èbÀ
 
ãnv
, S_èbÀ 
vív
);

24 
Temp_œbñLi°
 
	gœbñ_°ack
 = 
NULL
;

25 
	$pushD⁄eLabñ
(
Temp_œbñ
 
œbñ
){

26 
œbñ_°ack
 = 
	`Temp_LabñLi°
(
œbñ
,Üabel_stack);

27 
	}
}

28 
	$p›D⁄eLabñ
(){

29 
œbñ_°ack
 =Üabñ_°ack->
èû
;

30 
	}
}

31 
F_‰agLi°
 
	gli°
 = 
NULL
;

33 
	$ö£π_hód
(
F_‰ag
 
h
){

34 
li°
 = 
	`F_FøgLi°
(
h
,Üist);

35 
	}
}

36 
	$ö£π_èû
(
F_‰ag
 
t
){

37 
F_‰agLi°
 
tmp
 = 
li°
;

38 
F_‰agLi°
 
¥e
 = 
li°
;

39 
tmp
){

40 
¥e
 = 
tmp
;

41 
tmp
 =Åmp->
èû
;

43 if(
¥e
){

44 
¥e
->
èû
 = 
	`F_FøgLi°
(
t
,
NULL
);

46 
li°
 = 
	`F_FøgLi°
(
t
,
NULL
);

48 
	}
}

51 
U_boﬁLi°
 
	$FunBoﬁLi°
(
A_fõldLi°
 
l
){

52 
U_boﬁLi°
 
bl
 = 
	`U_BoﬁLi°
(
TRUE
,
NULL
);

53 
U_boﬁLi°
 
tmp
 = 
NULL
;

54 
l
){

55 
bl
 = 
	`U_BoﬁLi°
(
TRUE
, bl);

62 
l
 =Ü->
èû
;

64  
bl
;

65 
	}
}

67 
ex±y
 
	$å™sSim∂eV¨
(
A_v¨
 
v¨
, 
Tr_Àvñ
 
Àvñ
,
S_èbÀ
 
ãnv
, S_èbÀ 
vív
){

68 
E_ívíåy
 
x
 = 
	`S_look
(
vív
,
v¨
->
u
.
sim∂e
);

69 if(
x
 =
NULL
){

70  
	`expTy
(
NULL
,NULL);

72  
	`expTy
(
	`Tr_sim∂eV¨
(
x
->
u
.
v¨
.
ac˚ss
, 
Àvñ
), 
	`a˘uÆ_ty
(
ãnv
,x->u.v¨.
ty
));

73 
	}
}

74 
ex±y
 
	$å™sFõldV¨
(
A_v¨
 
v¨
, 
Tr_Àvñ
 
Àvñ
,
S_èbÀ
 
ãnv
, S_èbÀ 
vív
){

76 
ex±y
 
e
 = 
	`å™sV¨
(
v¨
->
u
.
fõld
.v¨, 
Àvñ
, 
ãnv
, 
vív
);

77 
Ty_fõldLi°
 
li°
;

78 
off£t
 = 0;

79 
li°
 = 
e
.
ty
->
u
.
ªc‹d
;Üi°;Üi° =Üi°->
èû
,
off£t
+=4) {

80 i‡(
li°
->
hód
->
«me
 =
v¨
->
u
.
fõld
.
sym
) {

81  
	`expTy
(
	`Tr_Ex
(
	`T_Mem
(
	`T_Bö›
(
T_∂us
, 
	`unEx
(
e
.
exp
), 
	`T_C⁄°
(
off£t
)))), 
	`a˘uÆ_ty
(
ãnv
,
li°
->
hód
->
ty
));

84 
	`as£π
(0);

85  
	`expTy
(
NULL
, NULL);

86 
	}
}

102 
ex±y
 
	$å™sSubs¸ùtV¨
(
A_v¨
 
v¨
, 
Tr_Àvñ
 
Àvñ
,
S_èbÀ
 
ãnv
, S_èbÀ 
vív
){

104 
ex±y
 
e
 = 
	`å™sV¨
(
v¨
->
u
.
subs¸ùt
.v¨, 
Àvñ
, 
ãnv
, 
vív
);

105 
ex±y
 
f
 = 
	`å™sExp
(
v¨
->
u
.
subs¸ùt
.
exp
, 
Àvñ
, 
ãnv
, 
vív
);

106  
	`expTy
(
	`Tr_Ex
(
	`T_Mem
(
	`T_Bö›
(
T_∂us
, 
	`unEx
(
e
.
exp
),T_Bö›(
T_mul
, 
	`T_C⁄°
(4), unEx(
f
.exp))))), 
	`a˘uÆ_ty
(
ãnv
,É.
ty
->
u
.
¨øy
));

107 
	}
}

109 
ex±y
 
	$å™sV¨
(
A_v¨
 
v¨
, 
Tr_Àvñ
 
Àvñ
,
S_èbÀ
 
ãnv
, S_èbÀ 
vív
){

110 
v¨
->
köd
){

111 
A_sim∂eV¨
:{

112  
	`å™sSim∂eV¨
(
v¨
, 
Àvñ
, 
ãnv
, 
vív
);

114 
A_fõldV¨
:{

115  
	`å™sFõldV¨
–
v¨
, 
Àvñ
, 
ãnv
, 
vív
);

117 
A_subs¸ùtV¨
:{

118  
	`å™sSubs¸ùtV¨
(
v¨
, 
Àvñ
, 
ãnv
, 
vív
);

120 } 
	`expTy
(
NULL
,NULL);

121 
	}
}

123 
ex±y
 
	$å™sFun˘i⁄Dec
(
A_dec
 
dec
, 
Tr_Àvñ
 
Àvñ
,
S_èbÀ
 
ãnv
, S_èbÀ 
vív
){

124 
A_fundecLi°
 
Ê
 = 
dec
->
u
.
fun˘i⁄
;

125 
A_fundec
 
f
;

126 
°rög
 
«me
 = "";

127 
Ty_tyLi°
 
fTys
;

128 
Ty_ty
 
rTy
;

129 
Ê
) {

130 
f
 = 
Ê
->
hód
;

132 
«me
 = 
	`S_«me
(
f
->name);

133 if(
f
->
ªsu…
 !
NULL
 && 
	`°rcmp
(
	`S_«me
(f->result), "")){

134 
rTy
 = 
	`S_look
(
ãnv
,
f
->
ªsu…
);

136 
rTy
 = 
	`Ty_Void
();

138 
fTys
 = 
	`TyF‹mÆLi°
(
ãnv
, 
f
->
∑øms
);

139 
Temp_œbñ
 
œbñ
 = 
	`Temp_√wœbñ
();

140 
	`S_íãr
(
vív
, 
f
->
«me
,
	`E_FunE¡ry
(
Àvñ
, 
œbñ
, 
fTys
, 
rTy
));
Ê
 = fl->
èû
;

142 
Ê
 = 
dec
->
u
.
fun˘i⁄
;

143 
Ê
Ë{
f
 = fl->
hód
;

144 
	`S_begöSc›e
(
vív
);

145 
U_boﬁLi°
 
f‹mÆs
 = 
	`FunBoﬁLi°
(
f
->
∑øms
);

146 
E_ívíåy
 
íåy
 = 
	`S_look
(
vív
, 
f
->
«me
);

147 
Tr_Àvñ
 
∆
 = 
	`Tr_√wLevñ
(
Àvñ
,
íåy
->
u
.
fun
.
œbñ
,
f‹mÆs
);

148 
A_fõldLi°
 
l
 = 
f
->
∑øms
;
fTys
 = 
	`TyF‹mÆLi°
(
ãnv
, f->params);

149 
Ty_tyLi°
 
t
 = 
fTys
;

150 
F_ac˚ssLi°
 
acc
 = 
∆
->
‰ame
->
f‹mÆ_loˇti⁄
->
èû
;

152 ;
l
;»l->
èû
, 
t
=t->tail){

153 
	`S_íãr
(
vív
, 
l
->
hód
->
«me
,
	`E_V¨E¡ry
(
	`Tr_Ac˚ss
(
∆
, 
acc
->hód), 
t
->head));

154 
acc
 =acc->
èû
;

156 
ex±y
 
body
 = 
	`å™sExp
(
f
->body, 
∆
, 
ãnv
, 
vív
);

157 
F_‰ag
 
‰ag
 = 
	`F_ProgFøg
(
	`T_Move
(
	`T_Temp
(
	`F_RV
()), 
	`unEx
(
body
.
exp
)), 
∆
->
‰ame
);

158 
	`ö£π_èû
(
‰ag
);

159 
	`S_ídSc›e
(
vív
);

160 
Ê
 = fl->
èû
;

162  
	`expTy
(
NULL
,NULL);

163 
	}
}

165 
ex±y
 
	$å™sV¨Dec
(
A_dec
 
dec
, 
Tr_Àvñ
 
Àvñ
,
S_èbÀ
 
ãnv
, S_èbÀ 
vív
){

166 
Ty_ty
 
ty
 = 
NULL
;

167 
Tr_ac˚ss
 
loˇl
 = 
	`Tr_ÆlocLoˇl
(
Àvñ
,
TRUE
);

168 
ex±y
 
r
 = {
NULL
,NULL};

169 i‡(
dec
->
u
.
v¨
.
öô
 =
NULL
) {

170 
ty
 = 
	`Ty_Void
();

172 
	`S_íãr
(
vív
, 
dec
->
u
.
v¨
.v¨, 
	`E_V¨E¡ry
(
loˇl
, 
ty
));

174 
ex±y
 
e
 = 
	`å™sExp
(
dec
->
u
.
v¨
.
öô
, 
Àvñ
, 
ãnv
, 
vív
);

176 i‡(
dec
->
u
.
v¨
.
typ
 !
NULL
 && dec->u.v¨.ty∞!
	`S_Symbﬁ
("")) {

177 
ty
 = 
	`a˘uÆ_ty
(
ãnv
, 
	`S_look
—ív, 
dec
->
u
.
v¨
.
typ
));

179 i‡(
ty
) {

180 
	`S_íãr
(
vív
, 
dec
->
u
.
v¨
.v¨, 
	`E_V¨E¡ry
(
loˇl
, 
ty
));

182 
	`S_íãr
(
vív
, 
dec
->
u
.
v¨
.v¨, 
	`E_V¨E¡ry
(
loˇl
, 
e
.
ty
));

184 
r
 = 
	`expTy
((
	`Tr_Nx
(
	`T_Move
(
	`T_Mem
(
	`T_Bö›
(
T_∂us
, 
	`T_Temp
(
	`F_FP
()Ë,
	`T_C⁄°
(
loˇl
->
ac˚ss
->
u
.
off£t
))),
	`unEx
(
e
.
exp
)))),
ty
);

186  
r
;

187 
	}
}

189 
ex±y
 
	$å™sTy≥Dec
(
A_dec
 
dec
, 
Tr_Àvñ
 
Àvñ
,
S_èbÀ
 
ãnv
, S_èbÀ 
vív
){

190 
A_«mëyLi°
 
l
 = 
dec
->
u
.
ty≥
;

192 
l
) {

193 
A_«mëy
 
¡y
 = 
l
->
hód
;

194 
	`S_íãr
(
ãnv
, 
¡y
->
«me
,
	`Ty_Name
“ty->«me, 
NULL
));

195 
l
 =Ü->
èû
;

197 
l
 = 
dec
->
u
.
ty≥
;

198 
l
) {

199 
Ty_ty
 
tmp
 = 
	`å™sTy
(
ãnv
, 
l
->
hód
->
ty
);

200 
Ty_ty
 
«me
 = 
	`S_look
(
ãnv
, 
l
->
hód
->name);

201 
«me
->
u
.«me.
ty
 = 
tmp
;

202 
l
 =Ü->
èû
;

204  
	`expTy
(
NULL
, NULL);

205 
	}
}

206 
ex±y
 
	$å™sOpExp
(
A_exp
 
exp
, 
Tr_Àvñ
 
Àvñ
, 
S_èbÀ
 
ãnv
,S_èbÀ 
vív
){

207 
A_›î
 
›î
 = 
exp
->
u
.
›
.oper;

208 
ex±y
 
À·
 = 
	`å™sExp
(
exp
->
u
.
›
.À·, 
Àvñ
, 
ãnv
, 
vív
);

209 
ex±y
 
right
 = 
	`å™sExp
(
exp
->
u
.
›
.right,
Àvñ
, 
ãnv
, 
vív
);

210 
T_böOp
 
t›
 = -1;

211 
›î
){

212 
A_∂usOp
:

213 
t›
 = 
T_∂us
;

215 
A_möusOp
:

216 
t›
 = 
T_möus
;

218 
A_timesOp
:

219 
t›
 = 
T_mul
;

221 
A_divideOp
:

222 
t›
 = 
T_div
;

225 if(
t›
 != -1){

226  
	`expTy
(
	`Tr_Ex
(
	`T_Bö›
(
t›
,
	`unEx
(
À·
.
exp
),unEx(
right
.exp))), 
	`Ty_I¡
());

228 
T_ªlOp
 
r›
 = -1;

229 
›î
){

230 
A_…Op
:

231 
r›
 = 
T_…
;

233 
A_geOp
:

234 
r›
 = 
T_ge
;

236 
A_ÀOp
:

237 
r›
 = 
T_À
;

239 
A_gtOp
:

240 
r›
 = 
T_gt
;

242 
A_√qOp
:

243 
r›
 = 
T_√
;

245 
A_eqOp
:

246 
r›
 = 
T_eq
;

249 if(
r›
 != -1){

250 
T_°m
 
°m
 = 
	`T_Cjump
(
r›
, 
	`unEx
(
À·
.
exp
), unEx(
right
.exp), 
NULL
, NULL);

251  
	`expTy
(
	`Tr_Cx
(
	`P©chLi°
(&
°m
->
u
.
CJUMP
.
åue
, 
NULL
), P©chLi°(&°m->u.CJUMP.
Ál£
, NULL),°m), 
	`Ty_I¡
());

253  
	`expTy
(
NULL
,NULL);

254 
	}
}

256 
ex±y
 
	$å™sSåögExp
(
A_exp
 
exp
, 
Tr_Àvñ
 
Àvñ
, 
S_èbÀ
 
ãnv
,S_èbÀ 
vív
){

257 
Temp_œbñ
 
œbñ
 = 
	`Temp_√wœbñ
();

258 
F_‰ag
 
Êag
 = 
	`F_SåögFøg
(
œbñ
, 
exp
->
u
.
°rögg
);

259 
	`ö£π_hód
(
Êag
);

260  
	`expTy
(
	`Tr_Ex
(
	`T_Name
(
œbñ
)Ë,
	`Ty_Såög
());

261 
	}
}

264 
ex±y
 
	$å™sCÆlExp
(
A_exp
 
exp
, 
Tr_Àvñ
 
Àvñ
, 
S_èbÀ
 
ãnv
,S_èbÀ 
vív
){

265 
E_ívíåy
 
f
 = 
	`S_look
(
vív
, 
exp
->
u
.
ˇŒ
.
func
);

266 
Ty_ty
 
r
 = 
f
->
u
.
fun
.
ªsu…
;

268 
A_expLi°
 
as
 = 
exp
->
u
.
ˇŒ
.
¨gs
;

269 
A_exp
 
p
;

270 
idx
 = 0;

274 
T_expLi°
 
¨gs
 = 
	`T_ExpLi°
(
	`T_C⁄°
(
	`Tr_Àvñ_di°™˚
(
Àvñ
)),
NULL
);

276 ; 
as
; 
p
 =ás->
hód
,á†as->
èû
, 
idx
++) {

277 
ex±y
 
t
 = 
	`å™sExp
(
as
->
hód
, 
Àvñ
, 
ãnv
, 
vív
);

280 
¨gs
 = 
	`T_ExpLi°
(
	`unEx
(
t
.
exp
),args);

286  
	`expTy
(
	`Tr_Ex
(
	`T_CÆl
(
	`T_Name
(
f
->
u
.
fun
.
œbñ
), 
¨gs
 )), 
	`a˘uÆ_ty
(
ãnv
,
r
));

287 
	}
}

289 
ex±y
 
	$å™sV¨Exp
(
A_exp
 
exp
, 
Tr_Àvñ
 
Àvñ
, 
S_èbÀ
 
ãnv
,S_èbÀ 
vív
){

291 
ex±y
 
e
 = 
	`å™sV¨
(
exp
->
u
.
v¨
, 
Àvñ
, 
ãnv
, 
vív
);

292  
e
;

293 
	}
}

295 
ex±y
 
	$å™sRec‹dExp
(
A_exp
 
exp
, 
Tr_Àvñ
 
Àvñ
, 
S_èbÀ
 
ãnv
,S_èbÀ 
vív
){

296 
Ty_ty
 
ty
 = 
	`a˘uÆ_ty
(
ãnv
,
	`S_look
—ív, 
exp
->
u
.
ªc‹d
.
typ
));

297 
Ty_fõldLi°
 
tf
 = 
ty
->
u
.
ªc‹d
;

298 
A_efõldLi°
 
ef
 = 
exp
->
u
.
ªc‹d
.
fõlds
;

299 
idx
 = 0;

304 
T_°m
 
öô_°m
 = 
NULL
;

305 
T_°m
 
cur_°m
 = 
NULL
;

306 
T_°m
 
tmp_°m
 = 
NULL
;

307 ; 
tf
 && 
ef
;Å‡tf->
èû
,É‡ef->èû, 
idx
++) {

308 
ex±y
 
e
 = 
	`å™sExp
(
ef
->
hód
->
exp
, 
Àvñ
, 
ãnv
, 
vív
);

309 if(
tf
->
èû
){

310 
tmp_°m
 = 
	`T_Seq
(
	`T_Move
(
	`T_Mem
(
	`T_Bö›
(
T_∂us
, 
	`T_Temp
(
	`F_S¸©chTemp
()), 
	`T_C⁄°
(
idx
*()))), 
	`unEx
(
e
.
exp
)),
NULL
);

312 
tmp_°m
 = 
	`T_Move
(
	`T_Mem
(
	`T_Bö›
(
T_∂us
, 
	`T_Temp
(
	`F_S¸©chTemp
()), 
	`T_C⁄°
(
idx
*()))), 
	`unEx
(
e
.
exp
));

314 if(
öô_°m
 =
NULL
){

315 
cur_°m
 = 
tmp_°m
;

316 
öô_°m
 = 
cur_°m
;

318 
cur_°m
->
u
.
SEQ
.
right
 = 
tmp_°m
;

319 
cur_°m
 = 
tmp_°m
;

322 
T_expLi°
 
√w¨g
 = 
	`T_ExpLi°
(
	`T_C⁄°
(
idx
*()), 
NULL
);

324 
T_exp
 
√w°m
 = 
	`T_CÆl
(
	`T_Name
(
	`Temp_«medœbñ
("ÆlocRec‹d")), 
√w¨g
);

325 
T_°m
 
£t_Æloc_addr
 = 
	`T_Move
(
	`T_Temp
(
	`F_S¸©chTemp
()), 
√w°m
);

327  
	`expTy
(
	`Tr_Ex
(
	`T_E£q
(
	`T_Seq
(
£t_Æloc_addr
, 
öô_°m
),
	`T_Temp
(
	`F_S¸©chTemp
()))), 
ty
);

328 
	}
}

330 
ex±y
 
	$å™sSeqExp
(
A_exp
 
exp
, 
Tr_Àvñ
 
Àvñ
, 
S_èbÀ
 
ãnv
,S_èbÀ 
vív
){

332 
ex±y
 
e
;

333 
A_expLi°
 
´
 = 
exp
->
u
.
£q
;

334 
T_exp
 
öô
 = 
NULL
;

335 
T_exp
 
tmp
 = 
NULL
;

336 
T_exp
 
cur
 = 
NULL
;

337 
´
 &&áe->
hód
) {

338 
e
 = 
	`å™sExp
(
´
->
hód
, 
Àvñ
, 
ãnv
, 
vív
);

339 if(
´
->
èû
){

340 if(
´
->
èû
->
hód
){

341 
tmp
 = 
	`T_E£q
(
	`T_Exp
(
	`unEx
(
e
.
exp
)), 
NULL
);}{tmp = unEx(e.exp);}

343 
tmp
 = 
	`unEx
(
e
.
exp
);

345 if(
öô
){

346 
cur
->
u
.
ESEQ
.
exp
 = 
tmp
;

347 
cur
 = 
tmp
;

349 
cur
=
tmp
;

350 
öô
 = 
tmp
;

352 
´
 =áe->
èû
;

354 i‡(
e
.
ty
) {

355  
	`expTy
(
	`Tr_Ex
(
öô
), 
e
.
ty
);

357  
	`expTy
(
	`Tr_Ex
(
öô
), 
	`Ty_Void
());

359 
	}
}

361 
ex±y
 
	$å™sAssignExp
(
A_exp
 
exp
, 
Tr_Àvñ
 
Àvñ
, 
S_èbÀ
 
ãnv
,S_èbÀ 
vív
){

362 
ex±y
 
v
 = 
	`å™sV¨
(
exp
->
u
.
assign
.
v¨
, 
Àvñ
, 
ãnv
, 
vív
);

363 
ex±y
 
e
 = 
	`å™sExp
(
exp
->
u
.
assign
.exp, 
Àvñ
, 
ãnv
, 
vív
);

370  
	`expTy
(
	`Tr_Nx
(
	`T_Move
(
	`unEx
(
v
.
exp
), unEx(
e
.exp))), 
	`Ty_Void
());

371 
	}
}

381 
ex±y
 
	$å™sIfExp
(
A_exp
 
exp
, 
Tr_Àvñ
 
Àvñ
, 
S_èbÀ
 
ãnv
,S_èbÀ 
vív
){

382 
ex±y
 
e
 = 
	`å™sExp
(
exp
->
u
.
iff
.
ã°
, 
Àvñ
, 
ãnv
, 
vív
);

383 
ex±y
 
tb
 = 
	`å™sExp
(
exp
->
u
.
iff
.
thí
, 
Àvñ
, 
ãnv
, 
vív
);

384 
ex±y
 
eb
 = {
NULL
,NULL};

385 i‡(
exp
->
u
.
iff
.
ñ£e
) {

386 
eb
 = 
	`å™sExp
(
exp
->
u
.
iff
.
ñ£e
, 
Àvñ
, 
ãnv
, 
vív
);

388 
Temp_œbñ
 
d⁄ñ
 = 
	`Temp_√wœbñ
();

389 
Temp_œbñ
 
åuñ
 = 
	`Temp_√wœbñ
();

390 
Temp_œbñ
 
Ál£l
 = 
	`Temp_√wœbñ
();

391 
T_exp
 
ª
 = 
	`T_Mem
(
	`T_Bö›
(
T_∂us
, 
	`T_Temp
(
	`F_FP
()), 
	`T_C⁄°
(
	`F_ÆlocLoˇl
(
Àvñ
->
‰ame
, 
TRUE
)->
u
.
off£t
)));

394 
Cx
 
cx
 = 
	`unCx
(
e
.
exp
);

395 
	`doP©ch
(
cx
.
åues
, 
åuñ
);

396 
	`doP©ch
(
cx
.
Ál£s
, 
Ál£l
);

397 
T_exp
 
ex∂i°
 = 
	`T_E£q
(
	`T_Labñ
(
d⁄ñ
), 
ª
);

398 
ex∂i°
 = 
	`T_E£q
(
	`T_Jump
(
	`T_Name
(
d⁄ñ
), 
	`Temp_LabñLi°
(d⁄ñ, 
NULL
)),explist);

399 if(
exp
->
u
.
iff
.
ñ£e
) {

400 
T_exp
 
ñ£e
 = 
	`T_Mem
(
	`T_Bö›
(
T_∂us
, 
	`T_Temp
(
	`F_FP
()), 
	`T_C⁄°
(
	`F_ÆlocLoˇl
(
Àvñ
->
‰ame
, 
TRUE
)->
u
.
off£t
)));

401 
ex∂i°
 = 
	`T_E£q
(
	`T_Move
(
ª
,
ñ£e
),explist);

402 
ex∂i°
 = 
	`T_E£q
(
	`T_Move
(
ñ£e
,
	`unEx
(
eb
.
exp
)),Éxplist);

404 
ex∂i°
 = 
	`T_E£q
(
	`T_Labñ
(
Ál£l
),Éxplist);

405 
ex∂i°
 = 
	`T_E£q
(
	`T_Jump
(
	`T_Name
(
d⁄ñ
), 
	`Temp_LabñLi°
(d⁄ñ, 
NULL
)),Éxplist);

406 
T_exp
 
i„
 = 
	`T_Mem
(
	`T_Bö›
(
T_∂us
, 
	`T_Temp
(
	`F_FP
()), 
	`T_C⁄°
(
	`F_ÆlocLoˇl
(
Àvñ
->
‰ame
, 
TRUE
)->
u
.
off£t
)));

407 
ex∂i°
 = 
	`T_E£q
(
	`T_Move
(
ª
,
i„
),explist);

408 
ex∂i°
 = 
	`T_E£q
(
	`T_Move
(
i„
,
	`unEx
(
tb
.
exp
)),explist);

410 
ex∂i°
 = 
	`T_E£q
(
	`T_Labñ
(
åuñ
),Éxplist);

411 
ex∂i°
 = 
	`T_E£q
(
	`unNx
(
e
.
exp
),Éxplist);

412  
	`expTy
(
	`Tr_Ex
(
ex∂i°
),
	`Ty_Void
());

413 
	}
}

415 
ex±y
 
	$å™sWhûeExp
(
A_exp
 
exp
, 
Tr_Àvñ
 
Àvñ
, 
S_èbÀ
 
ãnv
,S_èbÀ 
vív
){

416 
Temp_œbñ
 
ã°l
 = 
	`Temp_√wœbñ
();

417 
Temp_œbñ
 
åuñ
 = 
	`Temp_√wœbñ
();

418 
Temp_œbñ
 
Ál£l
 = 
	`Temp_√wœbñ
();

419 
Temp_œbñ
 
d⁄ñ
 = 
	`Temp_√wœbñ
();

420 
	`pushD⁄eLabñ
(
d⁄ñ
);

421 
ex±y
 
e
 = 
	`å™sExp
(
exp
->
u
.
iff
.
ã°
, 
Àvñ
, 
ãnv
, 
vív
);

422 
ex±y
 
b
 = 
	`å™sExp
(
exp
->
u
.
whûì
.
body
, 
Àvñ
, 
ãnv
, 
vív
);

423 
Cx
 
cx
 = 
	`unCx
(
e
.
exp
);

424 
	`doP©ch
(
cx
.
åues
, 
åuñ
);

425 
	`doP©ch
(
cx
.
Ál£s
, 
Ál£l
);

426 
T_°m
 
°m
 = 
	`T_Labñ
(
d⁄ñ
);

427 
°m
 = 
	`T_Seq
(
	`T_Jump
(
	`T_Name
(
d⁄ñ
), 
	`Temp_LabñLi°
(d⁄ñ, 
NULL
)), stm);

428 
°m
 = 
	`T_Seq
(
	`T_Labñ
(
Ál£l
), stm);

429 
°m
 = 
	`T_Seq
(
	`T_Jump
(
	`T_Name
(
ã°l
), 
	`Temp_LabñLi°
—e°l, 
NULL
)), stm);

430 
°m
 = 
	`T_Seq
(
	`unNx
(
b
.
exp
), stm);

431 
°m
 = 
	`T_Seq
(
	`T_Labñ
(
åuñ
), stm);

432 
°m
 = 
	`T_Seq
(
	`unNx
(
e
.
exp
), stm);

433 
°m
 = 
	`T_Seq
(
	`T_Labñ
(
ã°l
), stm);

434 
	`p›D⁄eLabñ
();

435  
	`expTy
(
	`Tr_Nx
(
°m
), 
	`Ty_Void
());

436 
	}
}

437 
ex±y
 
	$å™sF‹Exp
(
A_exp
 
exp
, 
Tr_Àvñ
 
Àvñ
, 
S_èbÀ
 
ãnv
,S_èbÀ 
vív
){

439 
Temp_œbñ
 
ã°l
 = 
	`Temp_√wœbñ
();

440 
Temp_œbñ
 
åuñ
 = 
	`Temp_√wœbñ
();

441 
Temp_œbñ
 
Ál£l
 = 
	`Temp_√wœbñ
();

442 
Temp_œbñ
 
d⁄ñ
 = 
	`Temp_√wœbñ
();

443 
	`pushD⁄eLabñ
(
d⁄ñ
);

444 
ex±y
 
l
 = 
	`å™sExp
(
exp
->
u
.
f‹r
.
lo
, 
Àvñ
, 
ãnv
, 
vív
);

445 
ex±y
 
u
 = 
	`å™sExp
(
exp
->u.
f‹r
.
hi
, 
Àvñ
, 
ãnv
, 
vív
);

446 
	`S_begöSc›e
(
vív
);

447 
	`S_begöSc›e
(
ãnv
);

448 
Tr_ac˚ss
 
acc
 = 
	`Tr_ÆlocLoˇl
(
Àvñ
, 
exp
->
u
.
f‹r
.
esˇ≥
);

449 
	`as£π
(
exp
->
u
.
f‹r
.
esˇ≥
 == 1);

450 
	`S_íãr
(
vív
, 
exp
->
u
.
f‹r
.
v¨
, 
	`E_V¨E¡ry
(
acc
, 
	`Ty_I¡
()));

451 
ex±y
 
b
 = 
	`å™sExp
(
exp
->
u
.
f‹r
.
body
, 
Àvñ
, 
ãnv
, 
vív
);

452 
	`S_ídSc›e
(
ãnv
);

453 
	`S_ídSc›e
(
vív
);

455 
T_exp
 
vexp
 = 
	`T_Mem
(
	`T_Bö›
(
T_∂us
, 
	`T_Temp
(
	`F_FP
()), 
	`T_C⁄°
(
acc
->
ac˚ss
->
u
.
off£t
)));

456 
T_exp
 
uexp
 = 
	`T_Mem
(
	`T_Bö›
(
T_∂us
, 
	`T_C⁄°
(
	`F_ÆlocLoˇl
(
Àvñ
->
‰ame
, 
TRUE
)->
u
.
off£t
), 
	`T_Temp
(
	`F_FP
())));

457 
T_°m
 
°m
 = 
	`T_Labñ
(
d⁄ñ
);

458 
°m
 = 
	`T_Seq
(
	`T_Jump
(
	`T_Name
(
d⁄ñ
), 
	`Temp_LabñLi°
(d⁄ñ, 
NULL
)), stm);

459 
°m
 = 
	`T_Seq
(
	`T_Labñ
(
Ál£l
), stm);

460 
°m
 = 
	`T_Seq
(
	`T_Jump
(
	`T_Name
(
ã°l
), 
	`Temp_LabñLi°
—e°l, 
NULL
)), stm);

461 
°m
 = 
	`T_Seq
(
	`T_Move
(
vexp
, 
	`T_Bö›
(
T_∂us
, vexp, 
	`T_C⁄°
(1))), stm);

462 
°m
 = 
	`T_Seq
(
	`unNx
(
b
.
exp
), stm);

463 
°m
 = 
	`T_Seq
(
	`T_Labñ
(
åuñ
), stm);

464 
°m
 = 
	`T_Seq
(
	`T_Cjump
(
T_À
, 
vexp
, 
uexp
, 
åuñ
, 
Ál£l
), stm);

465 
°m
 = 
	`T_Seq
(
	`T_Labñ
(
ã°l
), stm);

466 
°m
 = 
	`T_Seq
(
	`T_Move
(
uexp
, 
	`unEx
(
u
.
exp
)), stm);

467 
°m
 = 
	`T_Seq
(
	`T_Move
(
vexp
, 
	`unEx
(
l
.
exp
)), stm);

468 
	`p›D⁄eLabñ
();

469  
	`expTy
(
	`Tr_Nx
(
°m
), 
	`Ty_Void
());

470 
	}
}

471 
ex±y
 
	$å™sBªakExp
(
A_exp
 
exp
, 
Tr_Àvñ
 
Àvñ
, 
S_èbÀ
 
ãnv
,S_èbÀ 
vív
){

472  
	`expTy
(
	`Tr_Nx
(
	`T_Jump
(
	`T_Name
(
œbñ_°ack
->
hód
), 
	`Temp_LabñLi°
÷abñ_°ack->hód, 
NULL
))),NULL);

473 
	}
}

474 
ex±y
 
	$å™sLëExp
(
A_exp
 
exp
, 
Tr_Àvñ
 
Àvñ
, 
S_èbÀ
 
ãnv
,S_èbÀ 
vív
){

475 
ex±y
 
ëy
;

476 
ex±y
 
tmp
;

477 
A_decLi°
 
d
;
v¨_amou¡
 = 0;

478 
	`S_begöSc›e
(
vív
);

479 
	`S_begöSc›e
(
ãnv
);

480 
T_°m
 
de˚xp
 = 
NULL
;

481 
T_°m
 
de˘aû

NULL
;

482 
T_°m
 
tmp_°m
 = 
NULL
;

483 
d
 = 
exp
->
u
.
Àt
.
decs
; d; d = d->
èû
Ë{if(d->
hód
->
köd
 =
A_v¨Dec
Ë{ if(d->hód->u.
v¨
.
öô
){
v¨_amou¡
++;}}}

484 
d
 = 
exp
->
u
.
Àt
.
decs
; d; d = d->
èû
) {

485 
tmp
 = 
	`å™sDec
(
d
->
hód
, 
Àvñ
, 
ãnv
, 
vív
);

486 if(
d
->
èû
 && 
v¨_amou¡
 > 1){

487 
tmp_°m
 = 
	`T_Seq
(
	`unNx
(
tmp
.
exp
),
NULL
);

489 
tmp_°m
 = 
	`unNx
(
tmp
.
exp
);

491 if(
tmp
.
exp
){

492 if(
de˚xp
 =
NULL
){

493 
de˚xp
 = 
tmp_°m
;

494 
de˘aû
 = 
de˚xp
;

496 
de˘aû
->
u
.
SEQ
.
right
 = 
tmp_°m
;

497 
de˘aû
 = de˘aû->
u
.
SEQ
.
right
;

501 
ëy
 = 
	`å™sExp
(
exp
->
u
.
Àt
.
body
, 
Àvñ
, 
ãnv
, 
vív
);

502 
	`S_ídSc›e
(
ãnv
);

503 
	`S_ídSc›e
(
vív
);

504 if(
de˚xp
 =
NULL
){

505  
	`expTy
(
ëy
.
exp
,Éty.
ty
);

507  
	`expTy
(
	`Tr_Ex
(
	`T_E£q
(
de˚xp
, 
	`unEx
(
ëy
.
exp
))),ëy.
ty
);

509 
	}
}

510 
ex±y
 
	$å™sAºayExp
(
A_exp
 
exp
, 
Tr_Àvñ
 
Àvñ
, 
S_èbÀ
 
ãnv
,S_èbÀ 
vív
){

511 
ex±y
 
s
 = 
	`å™sExp
(
exp
->
u
.
¨øy
.
size
, 
Àvñ
, 
ãnv
, 
vív
);

512 
Ty_ty
 
ty
 = 
	`a˘uÆ_ty
(
ãnv
, 
	`S_look
—ív, 
exp
->
u
.
¨øy
.
typ
));

513 
ex±y
 
v
 = 
	`å™sExp
(
exp
->
u
.
¨øy
.
öô
, 
Àvñ
, 
ãnv
, 
vív
);

517 
T_expLi°
 
√w¨g
 = 
	`T_ExpLi°
(
	`unEx
(
v
.
exp
),T_ExpLi°(unEx(
s
.exp), 
NULL
));

518 
T_exp
 
√w°m
 = 
	`T_CÆl
(
	`T_Name
(
	`Temp_«medœbñ
("öôAºay")), 
√w¨g
);

519  
	`expTy
(
	`Tr_Ex
(
√w°m
), 
ty
);

520 
	}
}

525 
ex±y
 
	$å™sDec
(
A_dec
 
dec
, 
Tr_Àvñ
 
Àvñ
,
S_èbÀ
 
ãnv
, S_èbÀ 
vív
) {

526 
dec
->
köd
){

527 
A_fun˘i⁄Dec
:{

528  
	`å™sFun˘i⁄Dec
(
dec
, 
Àvñ
, 
ãnv
, 
vív
);

530 
A_v¨Dec
:{

531  
	`å™sV¨Dec
(
dec
, 
Àvñ
, 
ãnv
, 
vív
);

533 
A_ty≥Dec
:{

534  
	`å™sTy≥Dec
(
dec
, 
Àvñ
,
ãnv
, 
vív
);

536 } 
	`expTy
(
NULL
,NULL);

537 
	}
}

539 
ex±y
 
	$å™sExp
(
A_exp
 
exp
, 
Tr_Àvñ
 
Àvñ
, 
S_èbÀ
 
ãnv
,S_èbÀ 
vív
){

540 
exp
->
köd
){

541 
A_›Exp
:{

542  
	`å™sOpExp
(
exp
, 
Àvñ
, 
ãnv
, 
vív
);

544 
A_nûExp
:{

545  
	`expTy
(
	`Tr_Ex
(
	`T_C⁄°
(0)), 
	`Ty_I¡
());

547 
A_ötExp
:{

548  
	`expTy
(
	`Tr_Ex
(
	`T_C⁄°
(
exp
->
u
.
öâ
)),
	`Ty_I¡
());

550 
A_°rögExp
:{

551  
	`å™sSåögExp
(
exp
, 
Àvñ
, 
ãnv
,
vív
);

553 
A_ˇŒExp
:{

554  
	`å™sCÆlExp
(
exp
, 
Àvñ
, 
ãnv
, 
vív
);

556 
A_v¨Exp
:{

557  
	`å™sV¨Exp
(
exp
, 
Àvñ
, 
ãnv
, 
vív
);

559 
A_ªc‹dExp
:{

560  
	`å™sRec‹dExp
(
exp
, 
Àvñ
, 
ãnv
, 
vív
);

562 
A_£qExp
:{

563  
	`å™sSeqExp
(
exp
, 
Àvñ
, 
ãnv
, 
vív
);

565 
A_assignExp
:{

566  
	`å™sAssignExp
(
exp
, 
Àvñ
, 
ãnv
, 
vív
);

568 
A_ifExp
:{

569  
	`å™sIfExp
(
exp
, 
Àvñ
, 
ãnv
, 
vív
);

571 
A_whûeExp
:{

572  
	`å™sWhûeExp
(
exp
, 
Àvñ
, 
ãnv
, 
vív
);

574 
A_f‹Exp
:{

575  
	`å™sF‹Exp
(
exp
, 
Àvñ
, 
ãnv
, 
vív
);

577 
A_bªakExp
:{

578  
	`å™sBªakExp
(
exp
, 
Àvñ
, 
ãnv
, 
vív
);

580 
A_ÀtExp
:{

581  
	`å™sLëExp
(
exp
, 
Àvñ
, 
ãnv
, 
vív
);

583 
A_¨øyExp
:{

584  
	`å™sAºayExp
(
exp
, 
Àvñ
, 
ãnv
, 
vív
);

586 } 
	`expTy
(
NULL
,NULL);

587 
	}
}

590 
F_‰agLi°
 
	$SEM_å™sProg
(
A_exp
 
exp
)

592 
S_èbÀ
 
ba£_ãnv
 = 
	`E_ba£_ãnv
();

593 
S_èbÀ
 
ba£_vív
 = 
	`E_ba£_vív
();

594 
Tr_Àvñ
 
Àvñ
 = 
	`Tr_ouãrmo°
();

595 
ex±y
 
e
 = 
	`å™sExp
(
exp
,
Àvñ
,
ba£_ãnv
,
ba£_vív
);

596 
F_‰ag
 
‰ag
 = 
	`F_ProgFøg
(
	`unNx
(
e
.
exp
), 
Àvñ
->
‰ame
);

597 
	`ö£π_èû
(
‰ag
);

598  
li°
;

599 
	}
}

	@semant.h

1 #i‚de‡
SEMANT_H


2 
	#SEMANT_H


	)

4 
	~"absyn.h
"

5 
	~"ty≥s.h
"

6 
F_‰agLi°
 
SEM_å™sProg
(
A_exp
 
exp
);

7 
	sex±y
{

8 
Tr_exp
 
	mexp
;

9 
Ty_ty
 
	mty
;

	@symbol.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

3 
	~"utû.h
"

4 
	~"symbﬁ.h
"

5 
	~"èbÀ.h
"

9 
S_symbﬁ
 
	$mksymbﬁ
(
°rög
 
«me
, 
S_symbﬁ
 
√xt
)

10 {
S_symbﬁ
 
s
=
	`checked_mÆloc
((*s));

11 
s
->
«me
Úame; s->
√xt
=next;

12  
s
;

13 
	}
}

15 
	#SIZE
 109

	)

17 
S_symbﬁ
 
	ghashèbÀ
[
SIZE
];

19 
	$hash
(*
s0
)

20 {
h
=0; *
s
;

21 
s
=
s0
; *s; s++)

22 
h
 = h*65599 + *
s
;

23  
h
;

24 
	}
}

26 
	$°ªq
(
°rög
 
a
, såög 
b
)

28  !
	`°rcmp
(
a
,
b
);

29 
	}
}

31 
S_symbﬁ
 
	$S_Symbﬁ
(
°rög
 
«me
)

32 {
ödex

	`hash
(
«me
Ë% 
SIZE
;

33 
S_symbﬁ
 
syms
 = 
hashèbÀ
[
ödex
], 
sym
;

34 
sym
=
syms
; sym; sym=sym->
√xt
)

35 i‡(
	`°ªq
(
sym
->
«me
,name))  sym;

36 
sym
 = 
	`mksymbﬁ
(
«me
,
syms
);

37 
hashèbÀ
[
ödex
]=
sym
;

38  
sym
;

39 
	}
}

41 
°rög
 
	$S_«me
(
S_symbﬁ
 
sym
)

43  
sym
->
«me
;

44 
	}
}

46 
S_èbÀ
 
	$S_em±y
()

48  
	`TAB_em±y
();

49 
	}
}

51 
	$S_íãr
(
S_èbÀ
 
t
, 
S_symbﬁ
 
sym
, *
vÆue
) {

52 
	`TAB_íãr
(
t
,
sym
,
vÆue
);

53 
	}
}

55 *
	$S_look
(
S_èbÀ
 
t
, 
S_symbﬁ
 
sym
) {

56  
	`TAB_look
(
t
,
sym
);

57 
	}
}

59 
S_symbﬁ_
 
	gm¨ksym
 = {"<mark>",0};

61 
	$S_begöSc›e
(
S_èbÀ
 
t
)

62 { 
	`S_íãr
(
t
,(
S_symbﬁ
)&
m¨ksym
,
NULL
);

63 
	}
}

65 
	$S_ídSc›e
(
S_èbÀ
 
t
)

66 {
S_symbﬁ
 
s
;

67 dÿ
s
=
	`TAB_p›
(
t
);

68 
s
 !(
S_symbﬁ
)&
m¨ksym
);

69 
	}
}

71 
S_dump
(
S_èbÀ
 
t
, (*
show
)(
S_symbﬁ
 
sym
, *
bödög
)) {

72 
	`TAB_dump
(
t
, ((*)(*, *)Ë
show
);

73 
	}
}

	@symbol.h

5 #i‚de‡
_SYMBOL_H_


6 
	#_SYMBOL_H_


	)

7 
	~"utû.h
"

8 
	~"èbÀ.h
"

9 
S_symbﬁ_
 *
	tS_symbﬁ
;

10 
	sS_symbﬁ_
 {
°rög
 
	m«me
; 
S_symbﬁ
 
	m√xt
;};

17 
S_symbﬁ
 
S_Symbﬁ
(
°rög
);

20 
°rög
 
S_«me
(
S_symbﬁ
);

24 
TAB_èbÀ_
 *
	tS_èbÀ
;

27 
S_èbÀ
 
S_em±y
();

31 
S_íãr
(
S_èbÀ
 
t
, 
S_symbﬁ
 
sym
, *
vÆue
);

35 *
S_look
(
S_èbÀ
 
t
, 
S_symbﬁ
 
sym
);

38 
S_begöSc›e
(
S_èbÀ
 
t
);

42 
S_ídSc›e
(
S_èbÀ
 
t
);

	@table.c

6 
	~<°dio.h
>

7 
	~"utû.h
"

8 
	~"èbÀ.h
"

14 
bödî
 
	$Bödî
(*
key
, *
vÆue
, 
bödî
 
√xt
, *
¥evt›
)

15 {
bödî
 
b
 = 
	`checked_mÆloc
((*b));

16 
b
->
key
 = key; b->
vÆue
=vÆue; b->
√xt
Úext; b->
¥evt›
 =Örevtop;

17  
b
;

18 
	}
}

20 
TAB_èbÀ
 
	$TAB_em±y
()

22 
TAB_èbÀ
 
t
 = 
	`checked_mÆloc
((*t));

23 
i
;

24 
t
->
t›
 = 
NULL
;

25 
i
 = 0; i < 
TABSIZE
; i++)

26 
t
->
èbÀ
[
i
] = 
NULL
;

27  
t
;

28 
	}
}

39 
	$TAB_íãr
(
TAB_èbÀ
 
t
, *
key
, *
vÆue
)

40 {
ödex
;

41 
	`as£π
(
t
 && 
key
);

42 
ödex
 = (()
key
Ë% 
TABSIZE
;

43 
t
->
èbÀ
[
ödex
] = 
	`Bödî
(
key
, 
vÆue
,t->èbÀ[ödex],Å->
t›
);

44 
t
->
t›
 = 
key
;

45 
	}
}

47 *
	$TAB_look
(
TAB_èbÀ
 
t
, *
key
)

48 {
ödex
;

49 
bödî
 
b
;

50 
	`as£π
(
t
 && 
key
);

51 
ödex
=(()
key
Ë% 
TABSIZE
;

52 
b
=
t
->
èbÀ
[
ödex
]; b; b=b->
√xt
)

53 i‡(
b
->
key
==keyË b->
vÆue
;

54  
NULL
;

55 
	}
}

57 *
	$TAB_p›
(
TAB_èbÀ
 
t
) {

58 *
k
; 
bödî
 
b
; 
ödex
;

59 
	`as£π
 (
t
);

60 
k
 = 
t
->
t›
;

61 
	`as£π
 (
k
);

62 
ödex
 = (()
k
Ë% 
TABSIZE
;

63 
b
 = 
t
->
èbÀ
[
ödex
];

64 
	`as£π
(
b
);

65 
t
->
èbÀ
[
ödex
] = 
b
->
√xt
;

66 
t
->
t›
=
b
->
¥evt›
;

67  
b
->
key
;

68 
	}
}

70 
TAB_dump
(
TAB_èbÀ
 
t
, (*
show
)(*
key
, *
vÆue
)) {

71 *
k
 = 
t
->
t›
;

72 
ödex
 = (()
k
Ë% 
TABSIZE
;

73 
bödî
 
b
 = 
t
->
èbÀ
[
ödex
];

74 i‡(
b
==
NULL
) ;

75 
t
->
èbÀ
[
ödex
]=
b
->
√xt
;

76 
t
->
t›
=
b
->
¥evt›
;

77 
	`show
(
b
->
key
,b->
vÆue
);

78 
	`TAB_dump
(
t
,
show
);

79 
	`as£π
(
t
->
t›
 =
b
->
¥evt›
 &&Å->
èbÀ
[
ödex
]==b->
√xt
);

80 
t
->
t›
=
k
;

81 
t
->
èbÀ
[
ödex
]=
b
;

82 
	}
}

	@table.h

9 #i‚de‡
_TABLE_H_


10 
	#_TABLE_H_


	)

12 
	#TABSIZE
 127

	)

14 
TAB_èbÀ_
 *
	tTAB_èbÀ
;

15 
bödî_
 *
	tbödî
;

16 
	sbödî_
 {*
	mkey
; *
	mvÆue
; 
bödî
 
	m√xt
; *
	m¥evt›
;};

17 
	sTAB_èbÀ_
 {

18 
bödî
 
	mèbÀ
[
TABSIZE
];

19 *
	mt›
;

22 
TAB_èbÀ
 
TAB_em±y
();

26 
TAB_íãr
(
TAB_èbÀ
 
t
, *
key
, *
vÆue
);

29 *
TAB_look
(
TAB_èbÀ
 
t
, *
key
);

33 *
TAB_p›
(
TAB_èbÀ
 
t
);

39 
TAB_dump
(
TAB_èbÀ
 
t
, (*
show
)(*
key
, *
vÆue
));

	@temp.c

8 
	~<°dio.h
>

9 
	~<°dlib.h
>

10 
	~<°rög.h
>

11 
	~"utû.h
"

12 
	~"symbﬁ.h
"

13 
	~"ãmp.h
"

14 
	~"èbÀ.h
"

16 
	sTemp_ãmp_
 {
	mnum
;};

18 
°rög
 
	$Temp_œbñ°rög
(
Temp_œbñ
 
s
)

19 { 
	`S_«me
(
s
);

20 
	}
}

22 
	gœbñs
 = 0;

24 
Temp_œbñ
 
	$Temp_√wœbñ
()

25 {
buf
[100];

26 
	`•rötf
(
buf
,"L%d",
œbñs
++);

27  
	`Temp_«medœbñ
(
	`Såög
(
buf
));

28 
	}
}

31 
Temp_œbñ
 
	$Temp_«medœbñ
(
°rög
 
s
)

32 { 
	`S_Symbﬁ
(
s
);

33 
	}
}

35 
	gãmps
 = 100;

37 
Temp_ãmp
 
	$Temp_√wãmp
()

38 {
Temp_ãmp
 
p
 = (Temp_ãmpË
	`checked_mÆloc
( (*p));

39 
p
->
num
=
ãmps
++;

40 {
r
[16];

41 
	`•rötf
(
r
, "%d", 
p
->
num
);

42 
	`Temp_íãr
(
	`Temp_«me
(), 
p
, 
	`Såög
(
r
));

44  
p
;

45 
	}
}

49 
	sTemp_m≠_
 {
TAB_èbÀ
 
	mèb
; 
Temp_m≠
 
	mundî
;};

52 
Temp_m≠
 
	$Temp_«me
() {

53 
Temp_m≠
 
m
 = 
NULL
;

54 i‡(!
m
Ëm=
	`Temp_em±y
();

55  
m
;

56 
	}
}

58 
Temp_m≠
 
	$√wM≠
(
TAB_èbÀ
 
èb
, 
Temp_m≠
 
undî
) {

59 
Temp_m≠
 
m
 = 
	`checked_mÆloc
((*m));

60 
m
->
èb
=tab;

61 
m
->
undî
=under;

62  
m
;

63 
	}
}

65 
Temp_m≠
 
	$Temp_em±y
() {

66  
	`√wM≠
(
	`TAB_em±y
(), 
NULL
);

67 
	}
}

69 
Temp_m≠
 
	$Temp_œyîM≠
(
Temp_m≠
 
ovî
, Temp_m≠ 
undî
) {

70 i‡(
ovî
==
NULL
)

71  
undî
;

72  
	`√wM≠
(
ovî
->
èb
, 
	`Temp_œyîM≠
(ovî->
undî
, under));

73 
	}
}

75 
	$Temp_íãr
(
Temp_m≠
 
m
, 
Temp_ãmp
 
t
, 
°rög
 
s
) {

76 
	`as£π
(
m
 && m->
èb
);

77 
	`TAB_íãr
(
m
->
èb
,
t
,
s
);

78 
	}
}

80 
°rög
 
	$Temp_look
(
Temp_m≠
 
m
, 
Temp_ãmp
 
t
) {

81 
°rög
 
s
;

82 
	`as£π
(
m
 && m->
èb
);

83 
s
 = 
	`TAB_look
(
m
->
èb
, 
t
);

84 i‡(
s
)  s;

85 i‡(
m
->
undî
Ë 
	`Temp_look
(m->undî, 
t
);

86  
NULL
;

87 
	}
}

89 
Temp_ãmpLi°
 
	$Temp_TempLi°
(
Temp_ãmp
 
h
, 
Temp_ãmpLi°
 
t
)

90 {
Temp_ãmpLi°
 
p
 = (Temp_ãmpLi°Ë
	`checked_mÆloc
( (*p));

91 
p
->
hód
=
h
;Ö->
èû
=
t
;

92  
p
;

93 
	}
}

95 
Temp_œbñLi°
 
	$Temp_LabñLi°
(
Temp_œbñ
 
h
, 
Temp_œbñLi°
 
t
)

96 {
Temp_œbñLi°
 
p
 = (Temp_œbñLi°Ë
	`checked_mÆloc
( (*p));

97 
p
->
hód
=
h
;Ö->
èû
=
t
;

98  
p
;

99 
	}
}

101 
FILE
 *
	goutfûe
;

102 
	$showô
(
Temp_ãmp
 
t
, 
°rög
 
r
) {

103 
	`Ârötf
(
outfûe
, "t%d -> %s\n", 
t
->
num
, 
r
);

104 
	}
}

106 
	$Temp_dumpM≠
(
FILE
 *
out
, 
Temp_m≠
 
m
) {

107 
outfûe
=
out
;

108 
	`TAB_dump
(
m
->
èb
,((*)(*, *))
showô
);

109 i‡(
m
->
undî
) {

110 
	`Ârötf
(
out
,"---------\n");

111 
	`Temp_dumpM≠
(
out
,
m
->
undî
);

113 
	}
}

	@temp.h

5 #i‚de‡
_TEMP_H_


6 
	#_TEMP_H_


	)

7 
	~<°dio.h
>

8 
	~"symbﬁ.h
"

10 
Temp_ãmp_
 *
	tTemp_ãmp
;

11 
Temp_ãmp
 
Temp_√wãmp
();

13 
Temp_ãmpLi°_
 *
	tTemp_ãmpLi°
;

14 
	sTemp_ãmpLi°_
 { 
Temp_ãmp
 
	mhód
; 
Temp_ãmpLi°
 
	mèû
;};

15 
Temp_ãmpLi°
 
Temp_TempLi°
(
Temp_ãmp
 
h
, Temp_ãmpLi° 
t
);

17 
S_symbﬁ
 
	tTemp_œbñ
;

18 
Temp_œbñ
 
Temp_√wœbñ
();

19 
Temp_œbñ
 
Temp_«medœbñ
(
°rög
 
«me
);

20 
°rög
 
Temp_œbñ°rög
(
Temp_œbñ
 
s
);

22 
Temp_œbñLi°_
 *
	tTemp_œbñLi°
;

23 
	sTemp_œbñLi°_
 { 
Temp_œbñ
 
	mhód
; 
Temp_œbñLi°
 
	mèû
;};

24 
Temp_œbñLi°
 
Temp_LabñLi°
(
Temp_œbñ
 
h
, Temp_œbñLi° 
t
);

26 
Temp_m≠_
 *
	tTemp_m≠
;

27 
Temp_m≠
 
Temp_em±y
();

28 
Temp_m≠
 
Temp_œyîM≠
(Temp_m≠ 
ovî
, Temp_m≠ 
undî
);

29 
Temp_íãr
(
Temp_m≠
 
m
, 
Temp_ãmp
 
t
, 
°rög
 
s
);

30 
°rög
 
Temp_look
(
Temp_m≠
 
m
, 
Temp_ãmp
 
t
);

31 
Temp_dumpM≠
(
FILE
 *
out
, 
Temp_m≠
 
m
);

33 
Temp_m≠
 
Temp_«me
();

	@translate.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

3 
	~"utû.h
"

4 
	~"symbﬁ.h
"

5 
	~"ãmp.h
"

6 
	~"åì.h
"

7 
	~"‰ame.h
"

8 
	~"å™¶©e.h
"

9 
	~"absyn.h
"

12 
Tr_Àvñ
 
	gouãrMo°Levñ
 = 
NULL
;

17 
Tr_Àvñ
 
	$Tr_ouãrmo°
()

20 if(
ouãrMo°Levñ
 =
NULL
){

21 
ouãrMo°Levñ
 = 
	`Tr_√wLevñ
(
NULL
,
	`Temp_«medœbñ
("tigermain"),NULL);

23  
ouãrMo°Levñ
;

24 
	}
}

26 
E_ívíåy
 
	$E_V¨E¡ry
(
Tr_ac˚ss
 
ac˚ss
, 
Ty_ty
 
ty
){

27 
E_ívíåy
 
íåy
 = (E_ívíåy)
	`checked_mÆloc
((
E_ívíåy_
));

28 
íåy
->
köd
 = 
E_v¨E¡ry
;

29 
íåy
->
u
.
v¨
.
ac˚ss
 =áccess;

30 
íåy
->
u
.
v¨
.
ty
 =Åy;

31  
íåy
;

32 
	}
}

33 
E_ívíåy
 
	$E_FunE¡ry
(
Tr_Àvñ
 
Àvñ
, 
Temp_œbñ
 
œbñ
, 
Ty_tyLi°
 
f‹mÆs
, 
Ty_ty
 
ªsu…
){

34 
E_ívíåy
 
íåy
 = (E_ívíåy)
	`checked_mÆloc
((
E_ívíåy_
));

35 
íåy
->
köd
 = 
E_funE¡ry
;

36 
íåy
->
u
.
fun
.
Àvñ
 =Üevel;

37 
íåy
->
u
.
fun
.
œbñ
 =Üabel;

38 
íåy
->
u
.
fun
.
f‹mÆs
 = formals;

39 
íåy
->
u
.
fun
.
ªsu…
 =Ñesult;

40  
íåy
;

41 
	}
}

43 
Tr_ac˚ssLi°
 
	$Tr_Ac˚ssLi°
(
Tr_ac˚ss
 
hód
, 
Tr_ac˚ssLi°
 
èû
){

44 
Tr_ac˚ssLi°
 
li°
 = (Tr_ac˚ssLi°)
	`checked_mÆloc
((
Tr_ac˚ssLi°_
));

45 
li°
->
hód
 = head;

46 
li°
->
èû
 =Åail;

47  
li°
;

48 
	}
}

49 
Tr_Àvñ
 
	$Tr_√wLevñ
(
Tr_Àvñ
 
∑ª¡
, 
Temp_œbñ
 
«me
, 
U_boﬁLi°
 
f‹mÆs
){

50 
Tr_Àvñ
 
Àvñ
 = (Tr_Àvñ)
	`checked_mÆloc
((
Tr_Àvñ_
));

51 
Àvñ
->
‰ame
 = 
	`F_√wFøme
(
«me
,
f‹mÆs
);

52 
Àvñ
->
∑ª¡
 =Öarent;

53  
Àvñ
;

54 
	}
}

56 
Tr_ac˚ssLi°
 
	$Tr_f‹mÆs
(
Tr_Àvñ
 
Àvñ
){

57 
Tr_ac˚ssLi°
 
li°
 = (Tr_ac˚ssLi°)
	`checked_mÆloc
((
Tr_ac˚ssLi°_
));

58 
Tr_ac˚ss
 
ac˚ss
 = (Tr_ac˚ss)
	`checked_mÆloc
((
Tr_ac˚ss_
));

59 
li°
->
hód
 = 
ac˚ss
;

60 
ac˚ss
->
Àvñ
 =Üevel;

62  
li°
;

63 
	}
}

64 
Tr_ac˚ss
 
	$Tr_ÆlocLoˇl
(
Tr_Àvñ
 
Àvñ
, 
boﬁ
 
esˇ≥
){

65 
Tr_ac˚ss
 
ac˚ss
 = (Tr_ac˚ss)
	`checked_mÆloc
((
Tr_ac˚ss_
));

66 
ac˚ss
->
Àvñ
 =Üevel;

68 
ac˚ss
->ac˚s†
	`F_ÆlocLoˇl
(
Àvñ
->
‰ame
,
esˇ≥
);

69  
ac˚ss
;

70 
	}
}

71 
	$Tr_Àvñ_di°™˚
(
Tr_Àvñ
 
cur
){

72 
Àvñ_cou¡
 = 0;

73 
cur
 !
	`Tr_ouãrmo°
()){

74 
Àvñ_cou¡
++;

75 
cur
 = cur->
∑ª¡
;

77  
Àvñ_cou¡
;

78 
	}
}

79 
	$doP©ch
(
∑tchLi°
 
tLi°
, 
Temp_œbñ
 
œbñ
){

80 ;
tLi°
;tLi° =ÅLi°->
èû
){

81 *(
tLi°
->
hód
Ë
œbñ
;

83 
	}
}

84 
∑tchLi°
 
	$joöP©ch
(
∑tchLi°
 
fú°
,Ö©chLi° 
£c⁄d
){

85 if(!
fú°
){

86  
£c⁄d
;

88 ;
fú°
->
èû
;first=first->tail);

89 
fú°
->
èû
 = 
£c⁄d
;

90  
fú°
;

91 
	}
}

92 
T_exp
 
	$unEx
(
Tr_exp
 
e
){

93 
e
->
köd
) {

94 
Tr_ex
:{

95 
	`as£π
(
e
->
u
.
ex
 !
NULL
);

96  
e
->
u
.
ex
;

98 
Tr_cx
:{

99 
Temp_ãmp
 
r
 = 
	`F_S¸©chTemp
();

100 
Temp_œbñ
 
t
 = 
	`Temp_√wœbñ
();

101 
Temp_œbñ
 
f
 = 
	`Temp_√wœbñ
();

102 
	`doP©ch
(
e
->
u
.
cx
.
åues
, 
t
);

103 
	`doP©ch
(
e
->
u
.
cx
.
Ál£s
, 
f
);

104 
	`as£π
(
e
->
u
.
cx
.
°m
 !
NULL
);

105  
	`T_E£q
(
	`T_Move
(
	`T_Temp
(
r
), 
	`T_C⁄°
(1)),

106 
	`T_E£q
(
e
->
u
.
cx
.
°m
,

107 
	`T_E£q
(
	`T_Labñ
(
f
),

108 
	`T_E£q
(
	`T_Move
(
	`T_Temp
(
r
), 
	`T_C⁄°
(0)),

109 
	`T_E£q
(
	`T_Labñ
(
t
),
	`T_Temp
(
r
))))));

111 
Tr_nx
:{

112 
	`as£π
(
e
->
u
.
nx
 !
NULL
);

113  
	`T_E£q
(
e
->
u
.
nx
, 
	`T_C⁄°
(0));

116 
	`as£π
(0);

118 
	}
}

119 
T_°m
 
	$unNx
(
Tr_exp
 
e
){

120 if(!
e
){

121  
NULL
;

123 
e
->
köd
){

124 
Tr_ex
:{

125  
	`T_Exp
(
e
->
u
.
ex
);

127 
Tr_cx
:{

128  
e
->
u
.
cx
.
°m
;

130 
Tr_nx
:{

131  
e
->
u
.
nx
;

134 
	`as£π
(0);

136 
	}
}

137 
Cx
 
	$unCx
(
Tr_exp
 
e
){

138 
e
->
köd
){

139 
Tr_ex
:{

140 
Cx
 
cx
;

141 
cx
.
°m
 = 
	`T_Cjump
(
T_√
, 
e
->
u
.
ex
, 
	`T_C⁄°
(0),
NULL
,NULL);

142 
cx
.
åues
 = 
	`P©chLi°
(&cx.
°m
->
u
.
CJUMP
.
åue
,
NULL
);

143 
cx
.
Ál£s
 = 
	`P©chLi°
(&cx.
°m
->
u
.
CJUMP
.
Ál£
, 
NULL
);

144  
cx
;

146 
Tr_cx
:{

147  
e
->
u
.
cx
;

149 
Tr_nx
:{

150 
	`as£π
(0);

153 
	`as£π
(0);

155 
	`as£π
(0);

156 
	}
}

162 
Tr_exp
 
	$Tr_sim∂eV¨
(
Tr_ac˚ss
 
acc
, 
Tr_Àvñ
 
Àvñ
){

163 
T_exp
 
exp
 = 
	`T_Temp
(
	`F_FP
());

164 
Tr_Àvñ
 
cuæevñ
 = 
acc
->
Àvñ
;

165 if(
Àvñ
 !
cuæevñ
){

167 
aimÀvñ
 = 
	`Tr_Àvñ_di°™˚
(
acc
->
Àvñ
);

168 
exp
 = 
	`T_CÆl
(
	`T_Name
(
	`S_Symbﬁ
("gë_°©i˛ök")),
	`T_ExpLi°
(
	`T_C⁄°
(
aimÀvñ
),
NULL
));

170 
exp
 = 
	`T_Mem
(
	`T_Bö›
(
T_∂us
, 
	`T_C⁄°
(
acc
->
ac˚ss
->
u
.
off£t
),Éxp));

171  
	`Tr_Ex
(
exp
);

172 
	}
}

174 
Tr_exp
 
	$Tr_fõldV¨
(
Tr_ac˚ss
 
acc
, 
Tr_Àvñ
 
Àvñ
, 
idx
){

175 
Tr_exp
 
„xp
 = 
	`Tr_sim∂eV¨
(
acc
, 
Àvñ
);

176  
	`Tr_Ex
(
	`T_Mem
(
	`T_Bö›
(
T_∂us
, 
	`unEx
(
„xp
Ë, 
	`T_C⁄°
(
idx
))));

177 
	}
}

179 
Tr_exp
 
	$Tr_Ex
(
T_exp
 
ex
){

180 
Tr_exp
 
exp
 = 
	`checked_mÆloc
((
Tr_exp_
));

181 
exp
->
köd
 = 
Tr_ex
;

182 
exp
->
u
.
ex
 =Éx;

183  
exp
;

184 
	}
}

185 
Tr_exp
 
	$Tr_Nx
(
T_°m
 
nx
){

186 
Tr_exp
 
exp
 = 
	`checked_mÆloc
((
Tr_exp_
));

187 
exp
->
köd
 = 
Tr_nx
;

188 
exp
->
u
.
nx
 =Çx;

189  
exp
;

190 
	}
}

191 
Tr_exp
 
	$Tr_Cx
(
∑tchLi°
 
åues
,Ö©chLi° 
Ál£s
, 
T_°m
 
°m
){

192 
Tr_exp
 
exp
 = 
	`checked_mÆloc
((
Tr_exp_
));

193 
exp
->
köd
 = 
Tr_cx
;

194 
exp
->
u
.
cx
.
°m
 = stm;

195 
exp
->
u
.
cx
.
åues
 =Årues;

196 
exp
->
u
.
cx
.
Ál£s
 = falses;

197  
exp
;

198 
	}
}

199 
Tr_ac˚ss
 
	$Tr_Ac˚ss
(
Tr_Àvñ
 
Àvñ
, 
F_ac˚ss
 
ac˚ss
){

200 
Tr_ac˚ss
 
a
 = 
	`checked_mÆloc
((
Tr_ac˚ss_
));

201 
a
->
Àvñ
 =Üevel;

202 
a
->
ac˚ss
 =áccess;

203  
a
;

204 
	}
}

	@translate.h

4 #i‚de‡
_TRANSLATE_H_


5 
	#_TRANSLATE_H_


	)

6 
	~"utû.h
"

7 
	~"ty≥s.h
"

8 
	~"ãmp.h
"

9 
	~"‰ame.h
"

10 
	~"åì.h
"

11 
Tr_ac˚ss_
 *
	tTr_ac˚ss
;

12 
Tr_ac˚ssLi°_
 *
	tTr_ac˚ssLi°
;

13 
Tr_Àvñ_
 *
	tTr_Àvñ
;

15 
	sTr_Àvñ_
 {
F_‰ame
 
	m‰ame
;
Tr_Àvñ
 
	m∑ª¡
;};

16 
	sTr_ac˚ss_
 {
Tr_Àvñ
 
	mÀvñ
;
F_ac˚ss
 
	mac˚ss
;};

17 
	sTr_ac˚ssLi°_
 {
Tr_ac˚ss
 
	mhód
;
Tr_ac˚ssLi°
 
	mèû
;};

18 
E_ívíåy_
 *
	tE_ívíåy
;

19 
	sE_ívíåy_
 {

20 íum {
	mE_v¨E¡ry
, 
	mE_funE¡ry
}
	mköd
;

23 
Tr_ac˚ss
 
	mac˚ss
;

24 
Ty_ty
 
	mty
;

25 }
	mv¨
;

27 
Tr_Àvñ
 
	mÀvñ
;

28 
Temp_œbñ
 
	mœbñ
;

29 
Ty_tyLi°
 
	mf‹mÆs
;

30 
Ty_ty
 
	mªsu…
;

31 }
	mfun
;

32 }
	mu
;

34 
Tr_ac˚ss
 
Tr_Ac˚ss
(
Tr_Àvñ
 
Àvñ
, 
F_ac˚ss
 
ac˚ss
);

35 
∑tchLi°_
 *
	t∑tchLi°
;

36 
	s∑tchLi°_
 {

37 
Temp_œbñ
 *
	mhód
;

38 
∑tchLi°
 
	mèû
;

40 
∑tchLi°
 
	$P©chLi°
(
Temp_œbñ
 *
hód
, 
∑tchLi°
 
èû
){

41 
∑tchLi°
 
p
 = 
	`checked_mÆloc
((
∑tchLi°_
));

42 
p
->
hód
 = head;

43 
p
->
èû
 =Åail;

44  
p
;

45 
	}
}

47 
Tr_exp_
 *
	tTr_exp
;

48 
	sCx
 {

49 
∑tchLi°
 
	måues
;

50 
∑tchLi°
 
	mÁl£s
;

51 
T_°m
 
	m°m
;

53 
	sTr_exp_
 {

55 
	mTr_ex
, 
	mTr_nx
, 
	mTr_cx


56 }
	mköd
;

58 
T_exp
 
	mex
;

59 
T_°m
 
	mnx
;

60 
Cx
 
	mcx
;

61 } 
	mu
;

64 
Tr_exp
 
Tr_Ex
(
T_exp
 
ex
);

65 
Tr_exp
 
Tr_Nx
(
T_°m
 
nx
);

66 
Tr_exp
 
Tr_Cx
(
∑tchLi°
 
åues
,Ö©chLi° 
Ál£s
, 
T_°m
 
°m
);

68 
doP©ch
(
∑tchLi°
 
tLi°
, 
Temp_œbñ
 
œbñ
);

69 
∑tchLi°
 
joöP©ch
’©chLi° 
fú°
,Ö©chLi° 
£c⁄d
);

70 
T_exp
 
unEx
(
Tr_exp
 
e
);

71 
T_°m
 
unNx
(
Tr_exp
 
e
);

72 
Cx
 
unCx
(
Tr_exp
 
e
);

74 
E_ívíåy
 
E_V¨E¡ry
(
Tr_ac˚ss
 
ac˚ss
, 
Ty_ty
 
ty
);

75 
E_ívíåy
 
E_FunE¡ry
(
Tr_Àvñ
 
Àvñ
, 
Temp_œbñ
 
œbñ
, 
Ty_tyLi°
 
f‹mÆs
, 
Ty_ty
 
ªsu…
);

76 
Tr_Àvñ
 
Tr_ouãrmo°
();

77 
Tr_Àvñ_di°™˚
(
Tr_Àvñ
 
cur
);

78 
Tr_ac˚ssLi°
 
Tr_Ac˚ssLi°
(
Tr_ac˚ss
 
hód
, Tr_ac˚ssLi° 
èû
);

79 
Tr_Àvñ
 
Tr_√wLevñ
(Tr_Àvñ 
∑ª¡
, 
Temp_œbñ
 
«me
, 
U_boﬁLi°
 
f‹mÆs
);

80 
Tr_ac˚ssLi°
 
Tr_f‹mÆs
(
Tr_Àvñ
 
Àvñ
);

81 
Tr_ac˚ss
 
Tr_ÆlocLoˇl
(
Tr_Àvñ
 
Àvñ
, 
boﬁ
 
esˇ≥
);

82 
Tr_exp
 
Tr_sim∂eV¨
(
Tr_ac˚ss
 
acc
, 
Tr_Àvñ
 
Àvñ
);

83 
Tr_exp
 
Tr_fõldV¨
(
Tr_ac˚ss
 
acc
, 
Tr_Àvñ
 
Àvñ
, 
idx
);

	@tree.c

1 
	~<°dio.h
>

2 
	~"utû.h
"

3 
	~"symbﬁ.h
"

4 
	~"ãmp.h
"

5 
	~"åì.h
"

7 
T_expLi°
 
	$T_ExpLi°
(
T_exp
 
hód
, 
T_expLi°
 
èû
)

8 {
T_expLi°
 
p
 = (T_expLi°Ë
	`checked_mÆloc
 ( *p);

9 
p
->
hód
=hód;Ö->
èû
=tail;

10  
p
;

11 
	}
}

13 
T_°mLi°
 
	$T_StmLi°
(
T_°m
 
hód
, 
T_°mLi°
 
èû
)

14 {
T_°mLi°
 
p
 = (T_°mLi°Ë
	`checked_mÆloc
 ( *p);

15 
p
->
hód
=hód;Ö->
èû
=tail;

16  
p
;

17 
	}
}

19 
T_°m
 
	$T_Seq
(
T_°m
 
À·
, T_°m 
right
)

20 {
T_°m
 
p
 = (T_°mË
	`checked_mÆloc
( *p);

21 
p
->
köd
=
T_SEQ
;

22 
p
->
u
.
SEQ
.
À·
=left;

23 
p
->
u
.
SEQ
.
right
=right;

24  
p
;

25 
	}
}

27 
T_°m
 
	$T_Labñ
(
Temp_œbñ
 
œbñ
)

28 {
T_°m
 
p
 = (T_°mË
	`checked_mÆloc
( *p);

29 
p
->
köd
=
T_LABEL
;

30 
p
->
u
.
LABEL
=
œbñ
;

31  
p
;

32 
	}
}

34 
T_°m
 
	$T_Jump
(
T_exp
 
exp
, 
Temp_œbñLi°
 
œbñs
)

35 {
T_°m
 
p
 = (T_°mË
	`checked_mÆloc
( *p);

36 
p
->
köd
=
T_JUMP
;

37 
p
->
u
.
JUMP
.
exp
=exp;

38 
p
->
u
.
JUMP
.
jumps
=
œbñs
;

39  
p
;

40 
	}
}

42 
T_°m
 
	$T_Cjump
(
T_ªlOp
 
›
, 
T_exp
 
À·
, T_ex∞
right
,

43 
Temp_œbñ
 
åue
, Temp_œbñ 
Ál£
)

44 {
T_°m
 
p
 = (T_°mË
	`checked_mÆloc
( *p);

45 
p
->
köd
=
T_CJUMP
;

46 
p
->
u
.
CJUMP
.
›
=›;Ö->u.CJUMP.
À·
ˆe·;Ö->u.CJUMP.
right
=right;

47 
p
->
u
.
CJUMP
.
åue
=true;

48 
p
->
u
.
CJUMP
.
Ál£
=false;

49  
p
;

50 
	}
}

52 
T_°m
 
	$T_Move
(
T_exp
 
d°
, T_ex∞
§c
)

53 {
T_°m
 
p
 = (T_°mË
	`checked_mÆloc
( *p);

54 
p
->
köd
=
T_MOVE
;

55 
p
->
u
.
MOVE
.
d°
=dst;

56 
p
->
u
.
MOVE
.
§c
=src;

57  
p
;

58 
	}
}

60 
T_°m
 
	$T_Exp
(
T_exp
 
exp
)

61 {
T_°m
 
p
 = (T_°mË
	`checked_mÆloc
( *p);

62 
p
->
köd
=
T_EXP
;

63 
p
->
u
.
EXP
=
exp
;

64  
p
;

65 
	}
}

67 
T_exp
 
	$T_Bö›
(
T_böOp
 
›
, 
T_exp
 
À·
, T_ex∞
right
)

68 {
T_exp
 
p
 = (T_expË
	`checked_mÆloc
( *p);

69 
p
->
köd
=
T_BINOP
;

70 
p
->
u
.
BINOP
.
›
=op;

71 
p
->
u
.
BINOP
.
À·
=left;

72 
p
->
u
.
BINOP
.
right
=right;

73  
p
;

74 
	}
}

76 
T_exp
 
	$T_Mem
(
T_exp
 
exp
)

77 {
T_exp
 
p
 = (T_expË
	`checked_mÆloc
( *p);

78 
p
->
köd
=
T_MEM
;

79 
p
->
u
.
MEM
=
exp
;

80  
p
;

81 
	}
}

83 
T_exp
 
	$T_Temp
(
Temp_ãmp
 
ãmp
)

84 {
T_exp
 
p
 = (T_expË
	`checked_mÆloc
( *p);

85 
p
->
köd
=
T_TEMP
;

86 
p
->
u
.
TEMP
=
ãmp
;

87  
p
;

88 
	}
}

90 
T_exp
 
	$T_E£q
(
T_°m
 
°m
, 
T_exp
 
exp
)

91 {
T_exp
 
p
 = (T_expË
	`checked_mÆloc
( *p);

92 
p
->
köd
=
T_ESEQ
;

93 
p
->
u
.
ESEQ
.
°m
=stm;

94 
p
->
u
.
ESEQ
.
exp
=exp;

95  
p
;

96 
	}
}

98 
T_exp
 
	$T_Name
(
Temp_œbñ
 
«me
)

99 {
T_exp
 
p
 = (T_expË
	`checked_mÆloc
( *p);

100 
p
->
köd
=
T_NAME
;

101 
p
->
u
.
NAME
=
«me
;

102  
p
;

103 
	}
}

105 
T_exp
 
	$T_C⁄°
(
c⁄°i
)

106 {
T_exp
 
p
 = (T_expË
	`checked_mÆloc
( *p);

107 
p
->
köd
=
T_CONST
;

108 
p
->
u
.
CONST
=
c⁄°i
;

109  
p
;

110 
	}
}

112 
T_exp
 
	$T_CÆl
(
T_exp
 
fun
, 
T_expLi°
 
¨gs
)

113 {
T_exp
 
p
 = (T_expË
	`checked_mÆloc
( *p);

114 
p
->
köd
=
T_CALL
;

115 
p
->
u
.
CALL
.
fun
=fun;

116 
p
->
u
.
CALL
.
¨gs
=args;

117  
p
;

118 
	}
}

120 
T_ªlOp
 
	$T_nŸRñ
(
T_ªlOp
 
r
)

122 
r
)

123 {
T_eq
:  
T_√
;

124 
T_√
:  
T_eq
;

125 
T_…
:  
T_ge
;

126 
T_ge
:  
T_…
;

127 
T_gt
:  
T_À
;

128 
T_À
:  
T_gt
;

129 
T_u…
:  
T_uge
;

130 
T_uge
:  
T_u…
;

131 
T_uÀ
:  
T_ugt
 ;

132 
T_ugt
:  
T_uÀ
;

134 
	`as£π
(0);  0;

135 
	}
}

137 
T_ªlOp
 
	$T_commuã
(
T_ªlOp
 
r
)

138 {
r
) {

139 
T_eq
:  T_eq;

140 
T_√
:  T_ne;

141 
T_…
:  
T_gt
;

142 
T_ge
:  
T_À
;

143 
T_gt
:  
T_…
 ;

144 
T_À
:  
T_ge
;

145 
T_u…
:  
T_ugt
;

146 
T_uge
:  
T_uÀ
;

147 
T_uÀ
:  
T_uge
 ;

148 
T_ugt
:  
T_u…
;

150 
	`as£π
(0);  0;

151 
	}
}

	@tree.h

5 #i‚de‡
_TREE_H_


6 
	#_TREE_H_


	)

10 
T_°m_
 *
	tT_°m
;

11 
T_exp_
 *
	tT_exp
;

12 
T_expLi°_
 *
	tT_expLi°
;

13 
	sT_expLi°_
 {
T_exp
 
	mhód
; 
T_expLi°
 
	mèû
;};

14 
T_°mLi°_
 *
	tT_°mLi°
;

15 
	sT_°mLi°_
 {
T_°m
 
	mhód
; 
T_°mLi°
 
	mèû
;};

17 íum {
	mT_∂us
, 
	mT_möus
, 
	mT_mul
, 
	mT_div
,

18 
	mT_™d
, 
	mT_‹
, 
	mT_lshi·
, 
	mT_rshi·
, 
	mT_¨shi·
, 
	mT_x‹
} 
	tT_böOp
 ;

20 íum {
	mT_eq
, 
	mT_√
, 
	mT_…
, 
	mT_gt
, 
	mT_À
, 
	mT_ge
,

21 
	mT_u…
, 
	mT_uÀ
, 
	mT_ugt
, 
	mT_uge
} 
	tT_ªlOp
;

23 
	sT_°m_
 {íum {
	mT_SEQ
, 
	mT_LABEL
, 
	mT_JUMP
, 
	mT_CJUMP
, 
	mT_MOVE
,

24 
	mT_EXP
} 
	mköd
;

25 uni⁄ {°ru˘ {
T_°m
 
	mÀ·
, 
	mright
;} 
	mSEQ
;

26 
Temp_œbñ
 
	mLABEL
;

27 °ru˘ {
T_exp
 
	mexp
; 
Temp_œbñLi°
 
	mjumps
;} 
	mJUMP
;

28 °ru˘ {
T_ªlOp
 
	m›
; 
T_exp
 
	mÀ·
, 
	mright
;

29 
Temp_œbñ
 
	måue
, 
	mÁl£
;} 
	mCJUMP
;

30 °ru˘ {
T_exp
 
	md°
, 
	m§c
;} 
	mMOVE
;

31 
T_exp
 
	mEXP
;

32 } 
	mu
;

35 
	sT_exp_
 {íum {
	mT_BINOP
, 
	mT_MEM
, 
	mT_TEMP
, 
	mT_ESEQ
, 
	mT_NAME
,

36 
	mT_CONST
, 
	mT_CALL
} 
	mköd
;

37 uni⁄ {°ru˘ {
T_böOp
 
	m›
; 
T_exp
 
	mÀ·
, 
	mright
;} 
	mBINOP
;

38 
T_exp
 
	mMEM
;

39 
Temp_ãmp
 
	mTEMP
;

40 °ru˘ {
T_°m
 
	m°m
; 
T_exp
 
	mexp
;} 
	mESEQ
;

41 
Temp_œbñ
 
	mNAME
;

42 
	mCONST
;

43 °ru˘ {
T_exp
 
	mfun
; 
T_expLi°
 
	m¨gs
;} 
	mCALL
;

44 } 
	mu
;

47 
T_expLi°
 
T_ExpLi°
 (
T_exp
 
hód
, T_expLi° 
èû
);

48 
T_°mLi°
 
T_StmLi°
 (
T_°m
 
hód
, T_°mLi° 
èû
);

50 
T_°m
 
T_Seq
(T_°m 
À·
, T_°m 
right
);

51 
T_°m
 
T_Labñ
(
Temp_œbñ
);

52 
T_°m
 
T_Jump
(
T_exp
 
exp
, 
Temp_œbñLi°
 
œbñs
);

53 
T_°m
 
T_Cjump
(
T_ªlOp
 
›
, 
T_exp
 
À·
, T_ex∞
right
,

54 
Temp_œbñ
 
åue
, Temp_œbñ 
Ál£
);

55 
T_°m
 
T_Move
(
T_exp
, T_exp);

56 
T_°m
 
T_Exp
(
T_exp
);

58 
T_exp
 
T_Bö›
(
T_böOp
, T_exp, T_exp);

59 
T_exp
 
T_Mem
(T_exp);

60 
T_exp
 
T_Temp
(
Temp_ãmp
);

61 
T_exp
 
T_E£q
(
T_°m
, T_exp);

62 
T_exp
 
T_Name
(
Temp_œbñ
);

63 
T_exp
 
T_C⁄°
();

64 
T_exp
 
T_CÆl
(T_exp, 
T_expLi°
);

66 
T_ªlOp
 
T_nŸRñ
(T_relOp);

67 
T_ªlOp
 
T_commuã
(T_relOp);

	@types.c

8 
	~<°dio.h
>

9 
	~"utû.h
"

10 
	~"symbﬁ.h
"

11 
	~"ty≥s.h
"

13 
Ty_ty_
 
	gtynû
 = {
Ty_nû
};

14 
Ty_ty
 
	$Ty_Nû
(Ë{ &
tynû
;
	}
}

16 
Ty_ty_
 
	gtyöt
 = {
Ty_öt
};

17 
Ty_ty
 
	$Ty_I¡
(Ë{ &
työt
;
	}
}

19 
Ty_ty_
 
	gty°rög
 = {
Ty_°rög
};

20 
Ty_ty
 
	$Ty_Såög
(Ë{ &
ty°rög
;
	}
}

22 
Ty_ty_
 
	gtyvoid
 = {
Ty_void
};

23 
Ty_ty
 
	$Ty_Void
(Ë{ &
tyvoid
;
	}
}

25 
Ty_ty
 
	$Ty_Rec‹d
(
Ty_fõldLi°
 
fõlds
)

26 {
Ty_ty
 
p
 = 
	`checked_mÆloc
((*p));

27 
p
->
köd
=
Ty_ªc‹d
;

28 
p
->
u
.
ªc‹d
=
fõlds
;

29  
p
;

30 
	}
}

32 
Ty_ty
 
	$Ty_Aºay
(
Ty_ty
 
ty
)

33 {
Ty_ty
 
p
 = 
	`checked_mÆloc
((*p));

34 
p
->
köd
=
Ty_¨øy
;

35 
p
->
u
.
¨øy
=
ty
;

36  
p
;

37 
	}
}

39 
Ty_ty
 
	$Ty_Name
(
S_symbﬁ
 
sym
, 
Ty_ty
 
ty
)

40 {
Ty_ty
 
p
 = 
	`checked_mÆloc
((*p));

41 
p
->
köd
=
Ty_«me
;

42 
p
->
u
.
«me
.
sym
=sym;

43 
p
->
u
.
«me
.
ty
=ty;

44  
p
;

45 
	}
}

48 
Ty_tyLi°
 
	$Ty_TyLi°
(
Ty_ty
 
hód
, 
Ty_tyLi°
 
èû
)

49 {
Ty_tyLi°
 
p
 = 
	`checked_mÆloc
((*p));

50 
p
->
hód
=head;

51 
p
->
èû
=tail;

52  
p
;

53 
	}
}

55 
Ty_fõld
 
	$Ty_Fõld
(
S_symbﬁ
 
«me
, 
Ty_ty
 
ty
)

56 {
Ty_fõld
 
p
 = 
	`checked_mÆloc
((*p));

57 
p
->
«me
=name;

58 
p
->
ty
=ty;

59  
p
;

60 
	}
}

62 
Ty_fõldLi°
 
	$Ty_FõldLi°
(
Ty_fõld
 
hód
, 
Ty_fõldLi°
 
èû
)

63 {
Ty_fõldLi°
 
p
 = 
	`checked_mÆloc
((*p));

64 
p
->
hód
=head;

65 
p
->
èû
=tail;

66  
p
;

67 
	}
}

69 
	$Ty_FõldIdx
(
Ty_fõldLi°
 
li°
, 
S_symbﬁ
 
sym
){

70 
off£t
 = 0;

71 ;
li°
;li° =Üi°->
èû
, 
off£t
++){

72 if(
sym
 =
li°
->
hód
->
«me
){

73  
off£t
;

77 
	}
}

78 
Ty_ty
 
	$Ty_IdxFõld
(
Ty_fõldLi°
 
li°
, 
idx
){

79 ;
idx
;
li°
 =Üi°->
èû
, idx--);

80  
li°
->
hód
->
ty
;

81 
	}
}

83 
Ty_fõldLi°
 
TyFõldLi°
(
S_èbÀ
 
ãnv
, 
A_fõldLi°
 
l
);

85 
	g°r_ty
[][12] = {

90 
	$Ty_¥öt
(
Ty_ty
 
t
)

92 i‡(
t
 =
NULL
Ë
	`¥ötf
("null");

93 { 
	`¥ötf
("%s", 
°r_ty
[
t
->
köd
]);

94 i‡(
t
->
köd
 =
Ty_«me
) {

95 
	`¥ötf
(", %s", 
	`S_«me
(
t
->
u
.
«me
.
sym
)); }

97 
	}
}

99 
	$TyLi°_¥öt
(
Ty_tyLi°
 
li°
)

101 i‡(
li°
 =
NULL
Ë
	`¥ötf
("null");

103 
	`¥ötf
("TyList( ");

104 
	`Ty_¥öt
(
li°
->
hód
);

105 
	`¥ötf
(", ");

106 
	`TyLi°_¥öt
(
li°
->
èû
);

107 
	`¥ötf
(")");

109 
	}
}

111 
Ty_ty
 
	$å™sTy
(
S_èbÀ
 
ãnv
, 
A_ty
 
a
) {

112 
a
->
köd
) {

113 
A_«meTy
:

115 
Ty_ty
 
r
 = 
	`S_look
(
ãnv
, 
a
->
u
.
«me
);

116 i‡(
r
) {

117  
r
;

119 
	`EM_îr‹
(
a
->
pos
, "illegalÅype cycle");

120  
	`Ty_Void
();

124 
A_ªc‹dTy
:

126 
Ty_fõldLi°
 
t
 = 
	`TyFõldLi°
(
ãnv
, 
a
->
u
.
ªc‹d
);

127 i‡(
t
->
hód
) {

128  
	`Ty_Rec‹d
(
t
);

130  
	`Ty_Void
();

134 
A_¨øyTy
:

136 
Ty_ty
 
r
 = 
	`S_look
(
ãnv
, 
a
->
u
.
¨øy
);

137 i‡(
r
) {

138  
	`Ty_Aºay
(
r
);

140 
	`EM_îr‹
(
a
->
pos
, "transárrayTyÇo suchÅype");

141  
	`Ty_Void
();

146 
	`as£π
(0);

148 
	}
}

150 
Ty_fõldLi°
 
	$TyFõldLi°
(
S_èbÀ
 
ãnv
, 
A_fõldLi°
 
l
){

151 
Ty_fõldLi°
 
é
 = 
NULL
;

152 
Ty_fõldLi°
 
tmp
 = 
NULL
;

153 
l
){

154 if(!
é
){

155 
é
 = 
	`Ty_FõldLi°
(
	`Ty_Fõld
(
l
->
hód
->
«me
, 
	`S_look
(
ãnv
,Ü->hód->
typ
)),
NULL
);

156 
tmp
 = 
é
;

158 
tmp
->
èû
 = 
	`Ty_FõldLi°
(
	`Ty_Fõld
(
l
->
hód
->
«me
, 
	`S_look
(
ãnv
,Ü->hód->
typ
)),
NULL
);

159 
tmp
 =Åmp->
èû
;

161 
l
 =Ü->
èû
;

163  
é
;

164 
	}
}

165 
Ty_tyLi°
 
	$TyF‹mÆLi°
(
S_èbÀ
 
ãnv
, 
A_fõldLi°
 
l
){

166 
Ty_tyLi°
 
é
 = 
NULL
;

167 
Ty_tyLi°
 
tmp
 = 
NULL
;

168 
l
){

169 if(!
é
){

170 
é
 = 
	`Ty_TyLi°
(
	`S_look
(
ãnv
, 
l
->
hód
->
typ
),
NULL
);

171 
tmp
 = 
é
;

173 
tmp
->
èû
 = 
	`Ty_TyLi°
(
	`S_look
(
ãnv
, 
l
->
hód
->
typ
),
NULL
);

174 
tmp
 =Åmp->
èû
;

176 
l
 =Ü->
èû
;

178  
é
;

179 
	}
}

180 
Ty_ty
 
	$a˘uÆ_ty
(
S_èbÀ
 
ãnv
, 
Ty_ty
 
ty
) {

181 i‡(!
ty
) {

182  
NULL
;

184 
Ty_ty
 
tmp
 = 
ty
;

185 
tmp
 !
NULL
 &&Åmp->
köd
 =
Ty_«me
) {

186 
tmp
 =Åmp->
u
.
«me
.
ty
;

187 i‡(
tmp
 =
ty
) {

191  
tmp
;

192 
	}
}

	@types.h

7 #i‚de‡
_TYPES_H_


8 
	#_TYPES_H_


	)

10 
	~"absyn.h
"

11 
	~"symbﬁ.h
"

13 
Ty_ty_
 *
	tTy_ty
;

14 
Ty_tyLi°_
 *
	tTy_tyLi°
;

15 
Ty_fõld_
 *
	tTy_fõld
;

16 
Ty_fõldLi°_
 *
	tTy_fõldLi°
;

18 
	sTy_ty_
 {íum {
	mTy_ªc‹d
, 
	mTy_nû
, 
	mTy_öt
, 
	mTy_°rög
, 
	mTy_¨øy
,

19 
	mTy_«me
, 
	mTy_void
} 
	mköd
;

20 uni⁄ {
Ty_fõldLi°
 
	mªc‹d
;

21 
Ty_ty
 
	m¨øy
;

22 °ru˘ {
S_symbﬁ
 
	msym
; 
Ty_ty
 
	mty
;} 
	m«me
;

23 } 
	mu
;

26 
	sTy_tyLi°_
 {
Ty_ty
 
	mhód
; 
Ty_tyLi°
 
	mèû
;};

27 
	sTy_fõld_
 {
S_symbﬁ
 
	m«me
; 
Ty_ty
 
	mty
;};

28 
	sTy_fõldLi°_
 {
Ty_fõld
 
	mhód
; 
Ty_fõldLi°
 
	mèû
;};

30 
Ty_ty
 
Ty_Nû
();

31 
Ty_ty
 
Ty_I¡
();

32 
Ty_ty
 
Ty_Såög
();

33 
Ty_ty
 
Ty_Void
();

35 
Ty_ty
 
Ty_Rec‹d
(
Ty_fõldLi°
 
fõlds
);

36 
Ty_ty
 
Ty_Aºay
(Ty_ty 
ty
);

37 
Ty_ty
 
Ty_Name
(
S_symbﬁ
 
sym
, Ty_ty 
ty
);

39 
Ty_tyLi°
 
Ty_TyLi°
(
Ty_ty
 
hód
, Ty_tyLi° 
èû
);

40 
Ty_fõld
 
Ty_Fõld
(
S_symbﬁ
 
«me
, 
Ty_ty
 
ty
);

41 
Ty_fõldLi°
 
Ty_FõldLi°
(
Ty_fõld
 
hód
, Ty_fõldLi° 
èû
);

42 
Ty_FõldIdx
(
Ty_fõldLi°
 
li°
, 
S_symbﬁ
 
sym
);

43 
Ty_ty
 
Ty_IdxFõld
(
Ty_fõldLi°
 
li°
, 
idx
);

45 
Ty_¥öt
(
Ty_ty
 
t
);

46 
TyLi°_¥öt
(
Ty_tyLi°
 
li°
);

48 
Ty_ty
 
å™sTy
(
S_èbÀ
 
ãnv
, 
A_ty
 
a
);

49 
Ty_fõldLi°
 
TyFõldLi°
(
S_èbÀ
 
ãnv
, 
A_fõldLi°
 
l
);

50 
Ty_ty
 
a˘uÆ_ty
(
S_èbÀ
 
ãnv
, Ty_ty 
ty
);

51 
Ty_tyLi°
 
TyF‹mÆLi°
(
S_èbÀ
 
ãnv
, 
A_fõldLi°
 
l
);

	@util.c

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~<°rög.h
>

8 
	~"utû.h
"

9 *
	$checked_mÆloc
(
Àn
)

10 {*
p
 = 
	`mÆloc
(
Àn
);

11 i‡(!
p
) {

12 
	`Ârötf
(
°dîr
,"\nRan out of memory!\n");

13 
	`exô
(1);

15 
	`mem£t
(
p
,0,
Àn
);

16  
p
;

17 
	}
}

19 
°rög
 
	$Såög
(*
s
)

20 {
°rög
 
p
 = 
	`checked_mÆloc
(
	`°æí
(
s
)+1);

21 
	`°r˝y
(
p
,
s
);

22  
p
;

23 
	}
}

25 
°rög
 
	$ßµíd
(*
s
,* 
ãxt
)

27 if(!
s
)

29 
°rög
 
p
 = 
	`checked_mÆloc
(
	`°æí
(
ãxt
)+1);

31 
	`°r˝y
(
p
,
ãxt
);

32  
p
;

34 
°rög
 
ns
 = 
	`checked_mÆloc
(
	`°æí
(
s
Ë+ såÀn(
ãxt
) + 1);

35 
	`°r˝y
(
ns
,
s
);

36 
	`°rˇt
(
ns
,
ãxt
);

38  
ns
;

39 
	}
}

41 
°rög
 
	$gë°rög1
(*
s
)

43 if(!
s
Ë 
NULL
;

44 
°rög
 
p
 = 
	`checked_mÆloc
(
	`°æí
(
s
) + 1);

45 * 
ps
,*
µ
;

46 
ps
 = 
s
;

47 
µ
 = 
p
;

48 *
ps
 != '\0')

50 if(*
ps
 != '\\')

51 *
µ
++ = *
ps
++;

52 if(*(
ps
+1) != '\0' && *(ps+1) == 'n')

53 {*
µ
++ = 10;
ps
++;ps++;}

54 if(*(
ps
+1) != '\0' && *(ps+1) == 't')

55 {*
µ
++ = 9;
ps
++;ps++;}

56 if(*(
ps
+1) != '\0' && *(ps+1) == '"')

57 {*
µ
++ = 34;
ps
++;ps++;}

58 if(*(
ps
+1) != '\0' && *(ps+1) == '\\')

59 {*
µ
++ = 92;
ps
++;ps++;}

60 if(*(
ps
+1) == 9 ||*(ps+1) == 10 ||*(ps+1) == 32 )

62 * 
ãmp
 = 
ps
;

63 
ãmp
++;

64 *
ãmp
 != '\\' && (*temp == 9 || *temp == 10 || *temp == 32) && *temp != '\0')

65 
ãmp
++;

66 if(*
ãmp
 == '\\')

67 
ps
 = 
ãmp
 + 1;

69 {
ps
++;*
µ
++ = '\\';}

71 if(*(
ps
+1) != '\0' && *(ps+2) != '\0' && *(ps+3) != '\0'

72 && *(
ps
+1) >= 48 && *(ps+1) <= 57

73 && *(
ps
+2) >= 48 && *(ps+2) <= 57

74 && *(
ps
+3) >= 48 && *(ps+3) <= 57)

76 
°rög
 
ãmp
 = 
	`checked_mÆloc
(4);

77 *
ps
++;

78 *
ãmp
++ = *
ps
++;

79 *
ãmp
++ = *
ps
++;

80 *
ãmp
++ = *
ps
++;

81 *
ãmp
 = '\0';

82 *
µ
++ = 
	`©oi
(
ãmp
);

84 if(*(
ps
+1) == '^' && *(ps+2) >= '@' && *(ps+2) <= '_')

86 
ps
++;ps++;

87 *
µ
++ = (*
ps
)-64;

88 
ps
++;

90 *
µ
++ = *
ps
++;

93 *
µ
 = '\0';

94  
p
;

95 
	}
}

97 
U_boﬁLi°
 
	$U_BoﬁLi°
(
boﬁ
 
hód
, 
U_boﬁLi°
 
èû
)

98 { 
U_boﬁLi°
 
li°
 = 
	`checked_mÆloc
((*list));

99 
li°
->
hód
 = head;

100 
li°
->
èû
 =Åail;

101  
li°
;

102 
	}
}

104 
TabÀ_
 
	$TabÀ
(
°rög
 
id
, 
vÆue
, 
TabÀ_
 
èû
)

106 
TabÀ_
 
t
 = 
	`checked_mÆloc
((*t));

107 
t
->
id
 = id;

108 
t
->
vÆue
 = value;

109 
t
->
èû
 =Åail;

110  
t
;

112 
	}
}

114 
	$upd©e
(
TabÀ_
 
t
, 
°rög
 
s
, 
vÆue
)

116 
TabÀ_
 
Iãr
 = 
t
;

117 
Iãr
->
èû
)

119 
Iãr
 = Iãr->
èû
;

120 if(!
	`°rcmp
(
Iãr
->
id
,
s
))

122 
Iãr
->
vÆue
 = value;

126 
TabÀ_
 
√wnode
 = 
	`TabÀ
(
s
,
vÆue
,
NULL
);

127 
Iãr
->
èû
 = 
√wnode
;

128 
	}
}

130 
	$lookup
(
TabÀ_
 
t
, 
°rög
 
s
)

132 
TabÀ_
 
Iãr
 = 
t
;

133 
Iãr
->
èû
)

135 
Iãr
 = Iãr->
èû
;

136 if(!
	`°rcmp
(
Iãr
->
id
,
s
))

137  
Iãr
->
vÆue
;

139 
	`¥ötf
("Idítifõ∏%†d€†nŸÉxi°!\¿", 
s
);

140 
	`exô
(1);

141 
	}
}

143 
	$dum±abÀ
(
TabÀ_
 
t
)

145 
TabÀ_
 
Iãr
 = 
t
;

146 
Iãr
->
èû
)

148 
Iãr
 = Iãr->
èû
;

149 
	`¥ötf
(" %† : %d \n", 
Iãr
->
id
, Iãr->
vÆue
);

151 
	}
}

	@util.h

1 #i‚de‡
_UTIL_H_


2 
	#_UTIL_H_


	)

6 
	~<as£π.h
>

8 *
	t°rög
;

9 
	tboﬁ
;

11 
	#TRUE
 1

	)

12 
	#FALSE
 0

	)

14 *
checked_mÆloc
();

15 
°rög
 
Såög
(*);

16 
°rög
 
gë°rög1
(*);

17 
°rög
 
ßµíd
(*
s
,* 
ãxt
);

19 
U_boﬁLi°_
 *
	tU_boﬁLi°
;

20 
	sU_boﬁLi°_
 {
boﬁ
 
	mhód
; 
U_boﬁLi°
 
	mèû
;};

21 
U_boﬁLi°
 
U_BoﬁLi°
(
boﬁ
 
hód
, U_boﬁLi° 
èû
);

24 
èbÀ
 *
	tTabÀ_
;

25 
	sèbÀ
{
°rög
 
	mid
; 
	mvÆue
;
TabÀ_
 
	mèû
;};

26 
TabÀ_
 
TabÀ
(
°rög
 
id
, 
vÆue
, TabÀ_ 
èû
);

27 
upd©e
(
TabÀ_
 
t
, 
°rög
 
s
, 
vÆue
);

28 
lookup
(
TabÀ_
 
t
, 
°rög
 
s
);

29 
dum±abÀ
(
TabÀ_
 
t
);

	@y.tab.c

46 
	#YYBISON
 1

	)

49 
	#YYBISON_VERSION
 "2.4.1"

	)

52 
	#YYSKELETON_NAME
 "yacc.c"

	)

55 
	#YYPURE
 0

	)

58 
	#YYPUSH
 0

	)

61 
	#YYPULL
 1

	)

64 
	#YYLSP_NEEDED
 0

	)

73 
	~<°dio.h
>

74 
	~"utû.h
"

75 
	~"îr‹msg.h
"

76 
	~"symbﬁ.h
"

77 
	~"absyn.h
"

79 
yyÀx
();

81 
A_exp
 
	gabsyn_roŸ
;

83 
	$yyîr‹
(*
s
)

85 
	`EM_îr‹
(
EM_tokPos
, "%s", 
s
);

86 
	}
}

93 #i‚de‡
YYDEBUG


94 
	#YYDEBUG
 0

	)

98 #ifde‡
YYERROR_VERBOSE


99 #unde‡
YYERROR_VERBOSE


100 
	#YYERROR_VERBOSE
 1

	)

102 
	#YYERROR_VERBOSE
 0

	)

106 #i‚de‡
YYTOKEN_TABLE


107 
	#YYTOKEN_TABLE
 0

	)

112 #i‚de‡
YYTOKENTYPE


113 
	#YYTOKENTYPE


	)

116 
	eyytokíty≥
 {

117 
	mID
 = 258,

118 
	mSTRING
 = 259,

119 
	mINT
 = 260,

120 
	mCOMMA
 = 261,

121 
	mCOLON
 = 262,

122 
	mSEMICOLON
 = 263,

123 
	mLPAREN
 = 264,

124 
	mRPAREN
 = 265,

125 
	mLBRACK
 = 266,

126 
	mRBRACK
 = 267,

127 
	mLBRACE
 = 268,

128 
	mRBRACE
 = 269,

129 
	mDOT
 = 270,

130 
	mPLUS
 = 271,

131 
	mMINUS
 = 272,

132 
	mTIMES
 = 273,

133 
	mDIVIDE
 = 274,

134 
	mEQ
 = 275,

135 
	mNEQ
 = 276,

136 
	mLT
 = 277,

137 
	mLE
 = 278,

138 
	mGT
 = 279,

139 
	mGE
 = 280,

140 
	mAND
 = 281,

141 
	mOR
 = 282,

142 
	mASSIGN
 = 283,

143 
	mARRAY
 = 284,

144 
	mIF
 = 285,

145 
	mTHEN
 = 286,

146 
	mELSE
 = 287,

147 
	mWHILE
 = 288,

148 
	mFOR
 = 289,

149 
	mTO
 = 290,

150 
	mDO
 = 291,

151 
	mLET
 = 292,

152 
	mIN
 = 293,

153 
	mEND
 = 294,

154 
	mOF
 = 295,

155 
	mBREAK
 = 296,

156 
	mNIL
 = 297,

157 
	mFUNCTION
 = 298,

158 
	mVAR
 = 299,

159 
	mTYPE
 = 300,

160 
	mLOWER
 = 301,

161 
	mLOW
 = 302,

162 
	mUMINUS
 = 303

166 
	#ID
 258

	)

167 
	#STRING
 259

	)

168 
	#INT
 260

	)

169 
	#COMMA
 261

	)

170 
	#COLON
 262

	)

171 
	#SEMICOLON
 263

	)

172 
	#LPAREN
 264

	)

173 
	#RPAREN
 265

	)

174 
	#LBRACK
 266

	)

175 
	#RBRACK
 267

	)

176 
	#LBRACE
 268

	)

177 
	#RBRACE
 269

	)

178 
	#DOT
 270

	)

179 
	#PLUS
 271

	)

180 
	#MINUS
 272

	)

181 
	#TIMES
 273

	)

182 
	#DIVIDE
 274

	)

183 
	#EQ
 275

	)

184 
	#NEQ
 276

	)

185 
	#LT
 277

	)

186 
	#LE
 278

	)

187 
	#GT
 279

	)

188 
	#GE
 280

	)

189 
	#AND
 281

	)

190 
	#OR
 282

	)

191 
	#ASSIGN
 283

	)

192 
	#ARRAY
 284

	)

193 
	#IF
 285

	)

194 
	#THEN
 286

	)

195 
	#ELSE
 287

	)

196 
	#WHILE
 288

	)

197 
	#FOR
 289

	)

198 
	#TO
 290

	)

199 
	#DO
 291

	)

200 
	#LET
 292

	)

201 
	#IN
 293

	)

202 
	#END
 294

	)

203 
	#OF
 295

	)

204 
	#BREAK
 296

	)

205 
	#NIL
 297

	)

206 
	#FUNCTION
 298

	)

207 
	#VAR
 299

	)

208 
	#TYPE
 300

	)

209 
	#LOWER
 301

	)

210 
	#LOW
 302

	)

211 
	#UMINUS
 303

	)

216 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


217 
	uYYSTYPE


223 
	mpos
;

224 
	mivÆ
;

225 
°rög
 
	msvÆ
;

226 
A_exp
 
	mexp
;

227 
A_expLi°
 
	mex∂i°
;

228 
A_v¨
 
	mv¨
;

229 
A_decLi°
 
	mde˛i°
;

230 
A_dec
 
	mdec
;

231 
A_efõldLi°
 
	mefõldli°
;

232 
A_efõld
 
	mefõld
;

233 
A_«mëy
 
	m«mëy
;

234 
A_«mëyLi°
 
	m«mëyli°
;

235 
A_fõldLi°
 
	mfõldli°
;

236 
A_fõld
 
	mfõld
;

237 
A_fundecLi°
 
	mfunde˛i°
;

238 
A_fundec
 
	mfundec
;

239 
A_ty
 
	mty
;

245 } 
	tYYSTYPE
;

246 
	#YYSTYPE_IS_TRIVIAL
 1

	)

247 
	#yy°y≥
 
YYSTYPE


	)

248 
	#YYSTYPE_IS_DECLARED
 1

	)

262 #ifde‡
YYTYPE_UINT8


263 
YYTYPE_UINT8
 
	tyyty≥_uöt8
;

265 
	tyyty≥_uöt8
;

268 #ifde‡
YYTYPE_INT8


269 
YYTYPE_INT8
 
	tyyty≥_öt8
;

270 #ñi‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

271 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

272 sig√d 
	tyyty≥_öt8
;

274 
	tyyty≥_öt8
;

277 #ifde‡
YYTYPE_UINT16


278 
YYTYPE_UINT16
 
	tyyty≥_uöt16
;

280 
	tyyty≥_uöt16
;

283 #ifde‡
YYTYPE_INT16


284 
YYTYPE_INT16
 
	tyyty≥_öt16
;

286 
	tyyty≥_öt16
;

289 #i‚de‡
YYSIZE_T


290 #ifde‡
__SIZE_TYPE__


291 
	#YYSIZE_T
 
__SIZE_TYPE__


	)

292 #ñi‡
deföed
 
size_t


293 
	#YYSIZE_T
 
size_t


	)

294 #ñi‡! 
deföed
 
YYSIZE_T
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

295 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

296 
	~<°ddef.h
>

297 
	#YYSIZE_T
 
size_t


	)

299 
	#YYSIZE_T
 

	)

303 
	#YYSIZE_MAXIMUM
 ((
YYSIZE_T
Ë-1)

	)

305 #i‚de‡
YY_


306 #i‡
YYENABLE_NLS


307 #i‡
ENABLE_NLS


308 
	~<liböé.h
>

309 
	#YY_
(
msgid
Ë
	`dgëãxt
 ("bis⁄-ru¡ime", msgid)

	)

312 #i‚de‡
YY_


313 
	#YY_
(
msgid
Ë
	)
msgid

318 #i‡! 
deföed
 
löt
 || deföed 
__GNUC__


319 
	#YYUSE
(
e
Ë((Ë”))

	)

321 
	#YYUSE
(
e
Ë

	)

325 #i‚de‡
löt


326 
	#YYID
(
n
Ë“)

	)

328 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

329 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

331 
	$YYID
 (
yyi
)

334 
	$YYID
 (
yyi
)

335 
yyi
;

338  
yyi
;

339 
	}
}

342 #i‡! 
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


346 #ifde‡
YYSTACK_USE_ALLOCA


347 #i‡
YYSTACK_USE_ALLOCA


348 #ifde‡
__GNUC__


349 
	#YYSTACK_ALLOC
 
__buûtö_Æloˇ


	)

350 #ñi‡
deföed
 
__BUILTIN_VA_ARG_INCR


351 
	~<Æloˇ.h
>

352 #ñi‡
deföed
 
_AIX


353 
	#YYSTACK_ALLOC
 
__Æloˇ


	)

354 #ñi‡
deföed
 
_MSC_VER


355 
	~<mÆloc.h
>

356 
	#Æloˇ
 
_Æloˇ


	)

358 
	#YYSTACK_ALLOC
 
Æloˇ


	)

359 #i‡! 
deföed
 
_ALLOCA_H
 && ! deföed 
_STDLIB_H
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

360 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

361 
	~<°dlib.h
>

362 #i‚de‡
_STDLIB_H


363 
	#_STDLIB_H
 1

	)

370 #ifde‡
YYSTACK_ALLOC


372 
	#YYSTACK_FREE
(
På
Ëdÿ{ ; } 
	`YYID
 (0))

	)

373 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


378 
	#YYSTACK_ALLOC_MAXIMUM
 4032

	)

381 
	#YYSTACK_ALLOC
 
YYMALLOC


	)

382 
	#YYSTACK_FREE
 
YYFREE


	)

383 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


384 
	#YYSTACK_ALLOC_MAXIMUM
 
YYSIZE_MAXIMUM


	)

386 #i‡(
deföed
 
__˝lu•lus
 && ! deföed 
_STDLIB_H
 \

387 && ! ((
deföed
 
	gYYMALLOC
 || deföed 
	gmÆloc
) \

388 && (
deföed
 
	gYYFREE
 || deföed 
	g‰ì
)))

389 
	~<°dlib.h
>

390 #i‚de‡
_STDLIB_H


391 
	#_STDLIB_H
 1

	)

394 #i‚de‡
YYMALLOC


395 
	#YYMALLOC
 
mÆloc


	)

396 #i‡! 
deföed
 
mÆloc
 && ! deföed 
_STDLIB_H
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

397 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

398 *
mÆloc
 (
YYSIZE_T
);

401 #i‚de‡
YYFREE


402 
	#YYFREE
 
‰ì


	)

403 #i‡! 
deföed
 
‰ì
 && ! deföed 
_STDLIB_H
 && (deföed 
__STDC__
 || deföed 
__C99__FUNC__
 \

404 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

405 
‰ì
 (*);

412 #i‡(! 
deföed
 
yyovîÊow
 \

413 && (! 
deföed
 
	g__˝lu•lus
 \

414 || (
deföed
 
	gYYSTYPE_IS_TRIVIAL
 && YYSTYPE_IS_TRIVIAL)))

417 
	uyyÆloc


419 
yyty≥_öt16
 
	myyss_Æloc
;

420 
YYSTYPE
 
	myyvs_Æloc
;

424 
	#YYSTACK_GAP_MAXIMUM
 ( (
yyÆloc
Ë- 1)

	)

428 
	#YYSTACK_BYTES
(
N
) \

429 ((
N
Ë* ( (
yyty≥_öt16
Ë+  (
YYSTYPE
)) \

430 + 
YYSTACK_GAP_MAXIMUM
)

	)

434 #i‚de‡
YYCOPY


435 #i‡
deföed
 
__GNUC__
 && 1 < __GNUC__

436 
	#YYCOPY
(
To
, 
From
, 
Cou¡
) \

437 
	`__buûtö_mem˝y
 (
To
, 
From
, (
Cou¡
Ë*  (*(From)))

	)

439 
	#YYCOPY
(
To
, 
From
, 
Cou¡
) \

442 
YYSIZE_T
 
yyi
; \

443 
yyi
 = 0; yyò< (
Cou¡
); yyi++) \

444 (
To
)[
yyi
] = (
From
)[yyi]; \

446 
	`YYID
 (0))

	)

455 
	#YYSTACK_RELOCATE
(
Sèck_Æloc
, 
Sèck
) \

458 
YYSIZE_T
 
yy√wbyãs
; \

459 
	`YYCOPY
 (&
yy±r
->
Sèck_Æloc
, 
Sèck
, 
yysize
); \

460 
Sèck
 = &
yy±r
->
Sèck_Æloc
; \

461 
yy√wbyãs
 = 
yy°acksize
 *  (*
Sèck
Ë+ 
YYSTACK_GAP_MAXIMUM
; \

462 
yy±r
 +
yy√wbyãs
 /  (*yyptr); \

464 
	`YYID
 (0))

	)

469 
	#YYFINAL
 39

	)

471 
	#YYLAST
 305

	)

474 
	#YYNTOKENS
 49

	)

476 
	#YYNNTS
 26

	)

478 
	#YYNRULES
 77

	)

480 
	#YYNSTATES
 150

	)

483 
	#YYUNDEFTOK
 2

	)

484 
	#YYMAXUTOK
 303

	)

486 
	#YYTRANSLATE
(
YYX
) \

487 ((Ë(
YYX
Ë<
YYMAXUTOK
 ? 
yyå™¶©e
[YYX] : 
YYUNDEFTOK
)

	)

490 c⁄° 
yyty≥_uöt8
 
	gyyå™¶©e
[] =

525 #i‡
YYDEBUG


528 c⁄° 
yyty≥_uöt16
 
	gyy¥hs
[] =

541 c⁄° 
yyty≥_öt8
 
	gyyrhs
[] =

574 c⁄° 
yyty≥_uöt8
 
	gyyæöe
[] =

587 #i‡
YYDEBUG
 || 
YYERROR_VERBOSE
 || 
YYTOKEN_TABLE


590 c⁄° *c⁄° 
	gyyäame
[] =

605 #ifde‡
YYPRINT


608 c⁄° 
yyty≥_uöt16
 
	gyytoknum
[] =

619 c⁄° 
yyty≥_uöt8
 
	gyyr1
[] =

632 c⁄° 
yyty≥_uöt8
 
	gyyr2
[] =

647 c⁄° 
yyty≥_uöt8
 
	gyydeÁ˘
[] =

667 c⁄° 
yyty≥_öt8
 
	gyydefgŸo
[] =

676 
	#YYPACT_NINF
 -61

	)

677 c⁄° 
yyty≥_öt16
 
	gyy∑˘
[] =

697 c⁄° 
yyty≥_öt8
 
	gyypgŸo
[] =

708 
	#YYTABLE_NINF
 -1

	)

709 c⁄° 
yyty≥_öt16
 
	gyyèbÀ
[] =

744 c⁄° 
yyty≥_öt16
 
	gyycheck
[] =

781 c⁄° 
yyty≥_uöt8
 
	gyy°os
[] =

800 
	#yyîrok
 (
yyîr°©us
 = 0)

	)

801 
	#yy˛órö
 (
yych¨
 = 
YYEMPTY
)

	)

802 
	#YYEMPTY
 (-2)

	)

803 
	#YYEOF
 0

	)

805 
	#YYACCEPT
 
yyac˚±œb


	)

806 
	#YYABORT
 
yyab‹éab


	)

807 
	#YYERROR
 
yyîr‹œb


	)

814 
	#YYFAIL
 
yyîæab


	)

816 
	#YYRECOVERING
(Ë(!!
yyîr°©us
)

	)

818 
	#YYBACKUP
(
Tokí
, 
VÆue
) \

820 i‡(
yych¨
 =
YYEMPTY
 && 
yyÀn
 == 1) \

822 
yych¨
 = (
Tokí
); \

823 
yylvÆ
 = (
VÆue
); \

824 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
); \

825 
	`YYPOPSTACK
 (1); \

826 
yybackup
; \

830 
	`yyîr‹
 (
	`YY_
("syntaxÉrror: cannot back up")); \

831 
YYERROR
; \

833 
	`YYID
 (0))

	)

836 
	#YYTERROR
 1

	)

837 
	#YYERRCODE
 256

	)

844 
	#YYRHSLOC
(
Rhs
, 
K
Ë((Rhs)[K])

	)

845 #i‚de‡
YYLLOC_DEFAULT


846 
	#YYLLOC_DEFAULT
(
Cuºít
, 
Rhs
, 
N
) \

848 i‡(
	`YYID
 (
N
)) \

850 (
Cuºít
).
fú°_löe
 = 
	`YYRHSLOC
 (
Rhs
, 1).first_line; \

851 (
Cuºít
).
fú°_cﬁumn
 = 
	`YYRHSLOC
 (
Rhs
, 1).first_column; \

852 (
Cuºít
).
œ°_löe
 = 
	`YYRHSLOC
 (
Rhs
, 
N
).last_line; \

853 (
Cuºít
).
œ°_cﬁumn
 = 
	`YYRHSLOC
 (
Rhs
, 
N
).last_column; \

857 (
Cuºít
).
fú°_löe
 = (Cuºít).
œ°_löe
 = \

858 
	`YYRHSLOC
 (
Rhs
, 0).
œ°_löe
; \

859 (
Cuºít
).
fú°_cﬁumn
 = (Cuºít).
œ°_cﬁumn
 = \

860 
	`YYRHSLOC
 (
Rhs
, 0).
œ°_cﬁumn
; \

862 
	`YYID
 (0))

	)

870 #i‚de‡
YY_LOCATION_PRINT


871 #i‡
YYLTYPE_IS_TRIVIAL


872 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
) \

873 
	`Ârötf
 (
Fûe
, "%d.%d-%d.%d", \

874 (
Loc
).
fú°_löe
, (Loc).
fú°_cﬁumn
, \

875 (
Loc
).
œ°_löe
, (Loc).
œ°_cﬁumn
)

	)

877 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
Ë((Ë0)

	)

884 #ifde‡
YYLEX_PARAM


885 
	#YYLEX
 
	`yyÀx
 (
YYLEX_PARAM
)

	)

887 
	#YYLEX
 
	`yyÀx
 ()

	)

891 #i‡
YYDEBUG


893 #i‚de‡
YYFPRINTF


894 
	~<°dio.h
>

895 
	#YYFPRINTF
 
Ârötf


	)

898 
	#YYDPRINTF
(
Args
) \

900 i‡(
yydebug
) \

901 
YYFPRINTF
 
Args
; \

902 } 
	`YYID
 (0))

	)

904 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
) \

906 i‡(
yydebug
) \

908 
	`YYFPRINTF
 (
°dîr
, "%†", 
TôÀ
); \

909 
	`yy_symbﬁ_¥öt
 (
°dîr
, \

910 
Ty≥
, 
VÆue
); \

911 
	`YYFPRINTF
 (
°dîr
, "\n"); \

913 } 
	`YYID
 (0))

	)

921 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

922 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

924 
	$yy_symbﬁ_vÆue_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

927 
	$yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
)

928 
FILE
 *
yyouçut
;

929 
yyty≥
;

930 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
;

933 i‡(!
yyvÆuï
)

935 #ifde‡
YYPRINT


936 i‡(
yyty≥
 < 
YYNTOKENS
)

937 
	`YYPRINT
 (
yyouçut
, 
yytoknum
[
yyty≥
], *
yyvÆuï
);

939 
	`YYUSE
 (
yyouçut
);

941 
yyty≥
)

946 
	}
}

953 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

954 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

956 
	$yy_symbﬁ_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

959 
	$yy_symbﬁ_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
)

960 
FILE
 *
yyouçut
;

961 
yyty≥
;

962 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
;

965 i‡(
yyty≥
 < 
YYNTOKENS
)

966 
	`YYFPRINTF
 (
yyouçut
, "tokí %†(", 
yyäame
[
yyty≥
]);

968 
	`YYFPRINTF
 (
yyouçut
, "¡îm %†(", 
yyäame
[
yyty≥
]);

970 
	`yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
);

971 
	`YYFPRINTF
 (
yyouçut
, ")");

972 
	}
}

979 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

980 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

982 
	$yy_°ack_¥öt
 (
yyty≥_öt16
 *
yybŸtom
, yyty≥_öt16 *
yyt›
)

985 
	$yy_°ack_¥öt
 (
yybŸtom
, 
yyt›
)

986 
yyty≥_öt16
 *
yybŸtom
;

987 
yyty≥_öt16
 *
yyt›
;

990 
	`YYFPRINTF
 (
°dîr
, "StackÇow");

991 ; 
yybŸtom
 <
yyt›
; yybottom++)

993 
yybŸ
 = *
yybŸtom
;

994 
	`YYFPRINTF
 (
°dîr
, " %d", 
yybŸ
);

996 
	`YYFPRINTF
 (
°dîr
, "\n");

997 
	}
}

999 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
) \

1001 i‡(
yydebug
) \

1002 
	`yy_°ack_¥öt
 ((
BŸtom
), (
T›
)); \

1003 } 
	`YYID
 (0))

	)

1010 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1011 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1013 
	$yy_ªdu˚_¥öt
 (
YYSTYPE
 *
yyv•
, 
yyruÀ
)

1016 
	$yy_ªdu˚_¥öt
 (
yyv•
, 
yyruÀ
)

1017 
YYSTYPE
 *
yyv•
;

1018 
yyruÀ
;

1021 
yyƒhs
 = 
yyr2
[
yyruÀ
];

1022 
yyi
;

1023 
yy o
 = 
yyæöe
[
yyruÀ
];

1024 
	`YYFPRINTF
 (
°dîr
, "Reducing stack byÑule %d (line %lu):\n",

1025 
yyruÀ
 - 1, 
yy o
);

1027 
yyi
 = 0; yyò< 
yyƒhs
; yyi++)

1029 
	`YYFPRINTF
 (
°dîr
, " $%d = ", 
yyi
 + 1);

1030 
	`yy_symbﬁ_¥öt
 (
°dîr
, 
yyrhs
[
yy¥hs
[
yyruÀ
] + 
yyi
],

1031 &(
yyv•
[(
yyi
 + 1Ë- (
yyƒhs
)])

1033 
	`YYFPRINTF
 (
°dîr
, "\n");

1035 
	}
}

1037 
	#YY_REDUCE_PRINT
(
RuÀ
) \

1039 i‡(
yydebug
) \

1040 
	`yy_ªdu˚_¥öt
 (
yyv•
, 
RuÀ
); \

1041 } 
	`YYID
 (0))

	)

1045 
	gyydebug
;

1047 
	#YYDPRINTF
(
Args
)

	)

1048 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
)

	)

1049 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
)

	)

1050 
	#YY_REDUCE_PRINT
(
RuÀ
)

	)

1055 #i‚def 
YYINITDEPTH


1056 
	#YYINITDEPTH
 200

	)

1066 #i‚de‡
YYMAXDEPTH


1067 
	#YYMAXDEPTH
 10000

	)

1072 #i‡
YYERROR_VERBOSE


1074 #i‚de‡
yy°æí


1075 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H


1076 
	#yy°æí
 
°æí


	)

1079 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1080 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1081 
YYSIZE_T


1082 
	$yy°æí
 (c⁄° *
yy°r
)

1084 
YYSIZE_T


1085 
	$yy°æí
 (
yy°r
)

1086 c⁄° *
yy°r
;

1089 
YYSIZE_T
 
yyÀn
;

1090 
yyÀn
 = 0; 
yy°r
[yylen]; yylen++)

1092  
yyÀn
;

1093 
	}
}

1097 #i‚de‡
yy°p˝y


1098 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H
 && deföed 
_GNU_SOURCE


1099 
	#yy°p˝y
 
°p˝y


	)

1103 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1104 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1106 
	$yy°p˝y
 (*
yyde°
, c⁄° *
yy§c
)

1109 
	$yy°p˝y
 (
yyde°
, 
yy§c
)

1110 *
yyde°
;

1111 c⁄° *
yy§c
;

1114 *
yyd
 = 
yyde°
;

1115 c⁄° *
yys
 = 
yy§c
;

1117 (*
yyd
++ = *
yys
++) != '\0')

1120  
yyd
 - 1;

1121 
	}
}

1125 #i‚de‡
yyäamîr


1133 
YYSIZE_T


1134 
	$yyäamîr
 (*
yyªs
, c⁄° *
yy°r
)

1136 i‡(*
yy°r
 == '"')

1138 
YYSIZE_T
 
yyn
 = 0;

1139 c⁄° *
yyp
 = 
yy°r
;

1142 *++
yyp
)

1146 
do_nŸ_°rù_quŸes
;

1149 i‡(*++
yyp
 != '\\')

1150 
do_nŸ_°rù_quŸes
;

1153 i‡(
yyªs
)

1154 
yyªs
[
yyn
] = *
yyp
;

1155 
yyn
++;

1159 i‡(
yyªs
)

1160 
yyªs
[
yyn
] = '\0';

1161  
yyn
;

1163 
do_nŸ_°rù_quŸes
: ;

1166 i‡(! 
yyªs
)

1167  
	`yy°æí
 (
yy°r
);

1169  
	`yy°p˝y
 (
yyªs
, 
yy°r
) - yyres;

1170 
	}
}

1180 
YYSIZE_T


1181 
	$yysy¡ax_îr‹
 (*
yyªsu…
, 
yy°©e
, 
yych¨
)

1183 
yyn
 = 
yy∑˘
[
yy°©e
];

1185 i‡(! (
YYPACT_NINF
 < 
yyn
 && yy¿<
YYLAST
))

1189 
yyty≥
 = 
	`YYTRANSLATE
 (
yych¨
);

1190 
YYSIZE_T
 
yysize0
 = 
	`yyäamîr
 (0, 
yyäame
[
yyty≥
]);

1191 
YYSIZE_T
 
yysize
 = 
yysize0
;

1192 
YYSIZE_T
 
yysize1
;

1193 
yysize_ovîÊow
 = 0;

1194 íum { 
YYERROR_VERBOSE_ARGS_MAXIMUM
 = 5 };

1195 c⁄° *
yy¨g
[
YYERROR_VERBOSE_ARGS_MAXIMUM
];

1196 
yyx
;

1201 
	`YY_
("syntaxÉrror, unexpected %s");

1202 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s");

1203 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s");

1204 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s");

1205 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s or %s");

1207 *
yyfmt
;

1208 c⁄° *
yyf
;

1209 c⁄° 
yyu√x≥˘ed
[] = "syntaxÉrror, unexpected %s";

1210 c⁄° 
yyex≥˘ög
[] = ",Éxpecting %s";

1211 c⁄° 
yy‹
[] = " or %s";

1212 
yyf‹m©
[ 
yyu√x≥˘ed


1213 +  
yyex≥˘ög
 - 1

1214 + ((
YYERROR_VERBOSE_ARGS_MAXIMUM
 - 2)

1215 * ( 
yy‹
 - 1))];

1216 c⁄° *
yy¥efix
 = 
yyex≥˘ög
;

1220 
yyxbegö
 = 
yyn
 < 0 ? -yyn : 0;

1223 
yychecklim
 = 
YYLAST
 - 
yyn
 + 1;

1224 
yyxíd
 = 
yychecklim
 < 
YYNTOKENS
 ? yychecklim : YYNTOKENS;

1225 
yycou¡
 = 1;

1227 
yy¨g
[0] = 
yyäame
[
yyty≥
];

1228 
yyfmt
 = 
	`yy°p˝y
 (
yyf‹m©
, 
yyu√x≥˘ed
);

1230 
yyx
 = 
yyxbegö
; yyx < 
yyxíd
; ++yyx)

1231 i‡(
yycheck
[
yyx
 + 
yyn
] =yyx && yyx !
YYTERROR
)

1233 i‡(
yycou¡
 =
YYERROR_VERBOSE_ARGS_MAXIMUM
)

1235 
yycou¡
 = 1;

1236 
yysize
 = 
yysize0
;

1237 
yyf‹m©
[ 
yyu√x≥˘ed
 - 1] = '\0';

1240 
yy¨g
[
yycou¡
++] = 
yyäame
[
yyx
];

1241 
yysize1
 = 
yysize
 + 
	`yyäamîr
 (0, 
yyäame
[
yyx
]);

1242 
yysize_ovîÊow
 |(
yysize1
 < 
yysize
);

1243 
yysize
 = 
yysize1
;

1244 
yyfmt
 = 
	`yy°p˝y
 (yyfmt, 
yy¥efix
);

1245 
yy¥efix
 = 
yy‹
;

1248 
yyf
 = 
	`YY_
(
yyf‹m©
);

1249 
yysize1
 = 
yysize
 + 
	`yy°æí
 (
yyf
);

1250 
yysize_ovîÊow
 |(
yysize1
 < 
yysize
);

1251 
yysize
 = 
yysize1
;

1253 i‡(
yysize_ovîÊow
)

1254  
YYSIZE_MAXIMUM
;

1256 i‡(
yyªsu…
)

1261 *
yyp
 = 
yyªsu…
;

1262 
yyi
 = 0;

1263 (*
yyp
 = *
yyf
) != '\0')

1265 i‡(*
yyp
 ='%' && 
yyf
[1] ='s' && 
yyi
 < 
yycou¡
)

1267 
yyp
 +
	`yyäamîr
 (yyp, 
yy¨g
[
yyi
++]);

1268 
yyf
 += 2;

1272 
yyp
++;

1273 
yyf
++;

1277  
yysize
;

1279 
	}
}

1288 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1289 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1291 
	$yyde°ru˘
 (c⁄° *
yymsg
, 
yyty≥
, 
YYSTYPE
 *
yyvÆuï
)

1294 
	$yyde°ru˘
 (
yymsg
, 
yyty≥
, 
yyvÆuï
)

1295 c⁄° *
yymsg
;

1296 
yyty≥
;

1297 
YYSTYPE
 *
yyvÆuï
;

1300 
	`YYUSE
 (
yyvÆuï
);

1302 i‡(!
yymsg
)

1303 
yymsg
 = "Deleting";

1304 
	`YY_SYMBOL_PRINT
 (
yymsg
, 
yyty≥
, 
yyvÆuï
, 
yyloˇti⁄p
);

1306 
yyty≥
)

1312 
	}
}

1315 #ifde‡
YYPARSE_PARAM


1316 #i‡
deföed
 
__STDC__
 || deföed 
__˝lu•lus


1317 
yy∑r£
 (*
YYPARSE_PARAM
);

1319 
yy∑r£
 ();

1322 #i‡
deföed
 
__STDC__
 || deföed 
__˝lu•lus


1323 
yy∑r£
 ();

1325 
yy∑r£
 ();

1331 
	gyych¨
;

1334 
YYSTYPE
 
	gyylvÆ
;

1337 
	gyy√ºs
;

1345 #ifde‡
YYPARSE_PARAM


1346 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1347 || 
deföed
 
	g__˝lu•lus
 || deföed 
	g_MSC_VER
)

1349 
	$yy∑r£
 (*
YYPARSE_PARAM
)

1352 
	$yy∑r£
 (
YYPARSE_PARAM
)

1353 *
YYPARSE_PARAM
;

1356 #i‡(
deföed
 
__STDC__
 || deföed 
__C99__FUNC__
 \

1357 || 
deföed
 
__˝lu•lus
 || deföed 
_MSC_VER
)

1359 
	$yy∑r£
 ()

1362 
	$yy∑r£
 ()

1369 
yy°©e
;

1371 
yyîr°©us
;

1381 
yyty≥_öt16
 
yysß
[
YYINITDEPTH
];

1382 
yyty≥_öt16
 *
yyss
;

1383 
yyty≥_öt16
 *
yys•
;

1386 
YYSTYPE
 
yyvß
[
YYINITDEPTH
];

1387 
YYSTYPE
 *
yyvs
;

1388 
YYSTYPE
 *
yyv•
;

1390 
YYSIZE_T
 
yy°acksize
;

1392 
yyn
;

1393 
yyªsu…
;

1395 
yytokí
;

1398 
YYSTYPE
 
yyvÆ
;

1400 #i‡
YYERROR_VERBOSE


1402 
yymsgbuf
[128];

1403 *
yymsg
 = 
yymsgbuf
;

1404 
YYSIZE_T
 
yymsg_Æloc
 =  
yymsgbuf
;

1407 
	#YYPOPSTACK
(
N
Ë(
yyv•
 -(N), 
yys•
 -(N))

	)

1411 
yyÀn
 = 0;

1413 
yytokí
 = 0;

1414 
yyss
 = 
yysß
;

1415 
yyvs
 = 
yyvß
;

1416 
yy°acksize
 = 
YYINITDEPTH
;

1418 
	`YYDPRINTF
 ((
°dîr
, "StartingÖarse\n"));

1420 
yy°©e
 = 0;

1421 
yyîr°©us
 = 0;

1422 
yy√ºs
 = 0;

1423 
yych¨
 = 
YYEMPTY
;

1429 
yys•
 = 
yyss
;

1430 
yyv•
 = 
yyvs
;

1432 
yy£t°©e
;

1437 
yy√w°©e
:

1440 
yys•
++;

1442 
yy£t°©e
:

1443 *
yys•
 = 
yy°©e
;

1445 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1448 
YYSIZE_T
 
yysize
 = 
yys•
 - 
yyss
 + 1;

1450 #ifde‡
yyovîÊow


1455 
YYSTYPE
 *
yyvs1
 = 
yyvs
;

1456 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1462 
	`yyovîÊow
 (
	`YY_
("memoryÉxhausted"),

1463 &
yyss1
, 
yysize
 *  (*
yys•
),

1464 &
yyvs1
, 
yysize
 *  (*
yyv•
),

1465 &
yy°acksize
);

1467 
yyss
 = 
yyss1
;

1468 
yyvs
 = 
yyvs1
;

1471 #i‚de‡
YYSTACK_RELOCATE


1472 
yyexhau°edœb
;

1475 i‡(
YYMAXDEPTH
 <
yy°acksize
)

1476 
yyexhau°edœb
;

1477 
yy°acksize
 *= 2;

1478 i‡(
YYMAXDEPTH
 < 
yy°acksize
)

1479 
yy°acksize
 = 
YYMAXDEPTH
;

1482 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1483 
yyÆloc
 *
yy±r
 =

1484 (
yyÆloc
 *Ë
	`YYSTACK_ALLOC
 (
	`YYSTACK_BYTES
 (
yy°acksize
));

1485 i‡(! 
yy±r
)

1486 
yyexhau°edœb
;

1487 
	`YYSTACK_RELOCATE
 (
yyss_Æloc
, 
yyss
);

1488 
	`YYSTACK_RELOCATE
 (
yyvs_Æloc
, 
yyvs
);

1489 #unde‡
YYSTACK_RELOCATE


1490 i‡(
yyss1
 !
yysß
)

1491 
	`YYSTACK_FREE
 (
yyss1
);

1496 
yys•
 = 
yyss
 + 
yysize
 - 1;

1497 
yyv•
 = 
yyvs
 + 
yysize
 - 1;

1499 
	`YYDPRINTF
 ((
°dîr
, "Stack size increasedÅo %lu\n",

1500 (Ë
yy°acksize
));

1502 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1503 
YYABORT
;

1506 
	`YYDPRINTF
 ((
°dîr
, "E¡îög sèã %d\n", 
yy°©e
));

1508 i‡(
yy°©e
 =
YYFINAL
)

1509 
YYACCEPT
;

1511 
yybackup
;

1516 
yybackup
:

1522 
yyn
 = 
yy∑˘
[
yy°©e
];

1523 i‡(
yyn
 =
YYPACT_NINF
)

1524 
yydeÁu…
;

1529 i‡(
yych¨
 =
YYEMPTY
)

1531 
	`YYDPRINTF
 ((
°dîr
, "ReadingáÅoken: "));

1532 
yych¨
 = 
YYLEX
;

1535 i‡(
yych¨
 <
YYEOF
)

1537 
yych¨
 = 
yytokí
 = 
YYEOF
;

1538 
	`YYDPRINTF
 ((
°dîr
, "NowátÉnd of input.\n"));

1542 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

1543 
	`YY_SYMBOL_PRINT
 ("Nexàtokí is", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1548 
yyn
 +
yytokí
;

1549 i‡(
yyn
 < 0 || 
YYLAST
 < yy¿|| 
yycheck
[yyn] !
yytokí
)

1550 
yydeÁu…
;

1551 
yyn
 = 
yyèbÀ
[yyn];

1552 i‡(
yyn
 <= 0)

1554 i‡(
yyn
 =0 || yy¿=
YYTABLE_NINF
)

1555 
yyîæab
;

1556 
yyn
 = -yyn;

1557 
yyªdu˚
;

1562 i‡(
yyîr°©us
)

1563 
yyîr°©us
--;

1566 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1569 
yych¨
 = 
YYEMPTY
;

1571 
yy°©e
 = 
yyn
;

1572 *++
yyv•
 = 
yylvÆ
;

1574 
yy√w°©e
;

1580 
yydeÁu…
:

1581 
yyn
 = 
yydeÁ˘
[
yy°©e
];

1582 i‡(
yyn
 == 0)

1583 
yyîæab
;

1584 
yyªdu˚
;

1590 
yyªdu˚
:

1592 
yyÀn
 = 
yyr2
[
yyn
];

1602 
yyvÆ
 = 
yyv•
[1-
yyÀn
];

1605 
	`YY_REDUCE_PRINT
 (
yyn
);

1606 
yyn
)

1612 {
absyn_roŸ
 = (
yyv•
[(1Ë- (1)].
exp
);}

1619 {(
yyvÆ
.
exp
Ë
NULL
;}

1626 {(
yyvÆ
.
exp
)=(
yyv•
[(1) - (1)].exp);}

1633 {(
yyvÆ
.
exp
Ë
	`A_I¡Exp
(
EM_tokPos
,(
yyv•
[(1Ë- (1)].
ivÆ
));}

1640 {(
yyvÆ
.
exp
Ë
	`A_SåögExp
(
EM_tokPos
,(
yyv•
[(1Ë- (1)].
svÆ
));}

1647 {(
yyvÆ
.
exp
Ë
	`A_V¨Exp
(
EM_tokPos
,(
yyv•
[(1Ë- (1)].
v¨
));}

1654 {(
yyvÆ
.
exp
Ë
	`A_NûExp
(
EM_tokPos
);}

1661 {(
yyvÆ
.
exp
Ë
	`A_SeqExp
(
EM_tokPos
,(
yyv•
[(2Ë- (3)].
ex∂i°
));}

1668 {(
yyvÆ
.
exp
Ë
	`A_OpExp
(
EM_tokPos
,
A_∂usOp
,(
yyv•
[(1) - (3)].exp),(yyvsp[(3) - (3)].exp));}

1675 {(
yyvÆ
.
exp
Ë
	`A_OpExp
(
EM_tokPos
,
A_möusOp
,(
yyv•
[(1) - (3)].exp),(yyvsp[(3) - (3)].exp));}

1682 {(
yyvÆ
.
exp
Ë
	`A_OpExp
(
EM_tokPos
,
A_timesOp
,(
yyv•
[(1) - (3)].exp),(yyvsp[(3) - (3)].exp));}

1689 {(
yyvÆ
.
exp
Ë
	`A_OpExp
(
EM_tokPos
,
A_divideOp
,(
yyv•
[(1) - (3)].exp),(yyvsp[(3) - (3)].exp));}

1696 {(
yyvÆ
.
exp
Ë
	`A_OpExp
(
EM_tokPos
,
A_eqOp
,(
yyv•
[(1) - (3)].exp),(yyvsp[(3) - (3)].exp));}

1703 {(
yyvÆ
.
exp
Ë
	`A_OpExp
(
EM_tokPos
,
A_√qOp
,(
yyv•
[(1) - (3)].exp),(yyvsp[(3) - (3)].exp));}

1710 {(
yyvÆ
.
exp
Ë
	`A_OpExp
(
EM_tokPos
,
A_…Op
,(
yyv•
[(1) - (3)].exp),(yyvsp[(3) - (3)].exp));}

1717 {(
yyvÆ
.
exp
Ë
	`A_OpExp
(
EM_tokPos
,
A_ÀOp
,(
yyv•
[(1) - (3)].exp),(yyvsp[(3) - (3)].exp));}

1724 {(
yyvÆ
.
exp
Ë
	`A_OpExp
(
EM_tokPos
,
A_gtOp
,(
yyv•
[(1) - (3)].exp),(yyvsp[(3) - (3)].exp));}

1731 {(
yyvÆ
.
exp
Ë
	`A_OpExp
(
EM_tokPos
,
A_geOp
,(
yyv•
[(1) - (3)].exp),(yyvsp[(3) - (3)].exp));}

1738 {(
yyvÆ
.
exp
Ë
	`A_IfExp
(
EM_tokPos
,(
yyv•
[(1Ë- (3)].exp),(yyv•[(3Ë- (3)].exp),
	`A_I¡Exp
(EM_tokPos,0));}

1745 {(
yyvÆ
.
exp
Ë
	`A_IfExp
(
EM_tokPos
,(
yyv•
[(1Ë- (3)].exp),
	`A_I¡Exp
(EM_tokPos,1),(yyvsp[(3) - (3)].exp));}

1752 {(
yyvÆ
.
exp
Ë
	`A_OpExp
(
EM_tokPos
,
A_möusOp
,
	`A_I¡Exp
(EM_tokPos,0),(
yyv•
[(2) - (2)].exp));}

1759 {(
yyvÆ
.
exp
Ë(
yyv•
[(2) - (3)].exp);}

1766 {(
yyvÆ
.
exp
Ë
	`A_CÆlExp
(
EM_tokPos
,
	`S_Symbﬁ
((
yyv•
[(1Ë- (4)].
svÆ
)),(yyv•[(3Ë- (4)].
ex∂i°
));}

1773 {(
yyvÆ
.
exp
Ë
	`A_AssignExp
(
EM_tokPos
,(
yyv•
[(1Ë- (3)].
v¨
),(yyvsp[(3) - (3)].exp));}

1780 {(
yyvÆ
.
exp
Ë
	`A_IfExp
(
EM_tokPos
,(
yyv•
[(2Ë- (4)].exp),(yyv•[(4Ë- (4)].exp),
NULL
);}

1787 {(
yyvÆ
.
exp
Ë
	`A_IfExp
(
EM_tokPos
,(
yyv•
[(2) - (6)].exp),(yyvsp[(4) - (6)].exp),(yyvsp[(6) - (6)].exp));}

1794 {(
yyvÆ
.
exp
Ë
	`A_WhûeExp
(
EM_tokPos
,(
yyv•
[(2) - (4)].exp),(yyvsp[(4) - (4)].exp));}

1801 {(
yyvÆ
.
exp
Ë
	`A_F‹Exp
(
EM_tokPos
,
	`S_Symbﬁ
((
yyv•
[(2Ë- (8)].
svÆ
)),(yyvsp[(4) - (8)].exp),(yyvsp[(6) - (8)].exp),(yyvsp[(8) - (8)].exp));}

1808 {(
yyvÆ
.
exp
Ë
	`A_BªakExp
(
EM_tokPos
);}

1815 {(
yyvÆ
.
exp
Ë
	`A_LëExp
(
EM_tokPos
,(
yyv•
[(2Ë- (5)].
de˛i°
),(yyvsp[(4) - (5)].exp));}

1822 {(
yyvÆ
.
exp
Ë
	`A_Rec‹dExp
(
EM_tokPos
,
	`S_Symbﬁ
((
yyv•
[(1Ë- (4)].
svÆ
)),(yyv•[(3Ë- (4)].
efõldli°
));}

1829 {(
yyvÆ
.
exp
Ë
	`A_AºayExp
(
EM_tokPos
,
	`S_Symbﬁ
((
yyv•
[(1Ë- (6)].
svÆ
)),(yyvsp[(3) - (6)].exp),(yyvsp[(6) - (6)].exp));}

1836 {(
yyvÆ
.
v¨
Ë
	`A_Sim∂eV¨
(
EM_tokPos
,
	`S_Symbﬁ
((
yyv•
[(1Ë- (1)].
svÆ
)));}

1843 {(
yyvÆ
.
v¨
Ë(
yyv•
[(1) - (1)].var);}

1850 {(
yyvÆ
.
v¨
Ë(
yyv•
[(1) - (1)].var);}

1857 {(
yyvÆ
.
v¨
Ë
	`A_FõldV¨
(
EM_tokPos
,(
yyv•
[(1Ë- (3)].v¨),
	`S_Symbﬁ
((yyv•[(3Ë- (3)].
svÆ
)));}

1864 {(
yyvÆ
.
v¨
Ë
	`A_Subs¸ùtV¨
(
EM_tokPos
,(
yyv•
[(1Ë- (4)].v¨),(yyv•[(3Ë- (4)].
exp
));}

1871 {(
yyvÆ
.
v¨
Ë
	`A_FõldV¨
(
EM_tokPos
,
	`A_Sim∂eV¨
(EM_tokPos,
	`S_Symbﬁ
((
yyv•
[(1Ë- (3)].
svÆ
))),S_Symbol((yyvsp[(3) - (3)].sval)));}

1878 {(
yyvÆ
.
v¨
Ë
	`A_Subs¸ùtV¨
(
EM_tokPos
,
	`A_Sim∂eV¨
(EM_tokPos,
	`S_Symbﬁ
((
yyv•
[(1Ë- (4)].
svÆ
))),(yyv•[(3Ë- (4)].
exp
));}

1885 {(
yyvÆ
.
efõldli°
Ë=(
yyv•
[(1) - (1)].efieldlist);}

1892 {(
yyvÆ
.
efõldli°
Ë
NULL
;}

1899 {(
yyvÆ
.
efõldli°
Ë
	`A_EfõldLi°
((
yyv•
[(1Ë- (1)].
efõld
),
NULL
);}

1906 {(
yyvÆ
.
efõldli°
Ë
	`A_EfõldLi°
((
yyv•
[(1Ë- (3)].
efõld
),(yyvsp[(3) - (3)].efieldlist));}

1913 {(
yyvÆ
.
efõld
Ë
	`A_Efõld
(
	`S_Symbﬁ
((
yyv•
[(1Ë- (3)].
svÆ
)),(yyv•[(3Ë- (3)].
exp
));}

1920 {(
yyvÆ
.
ex∂i°
Ë
	`A_ExpLi°
((
yyv•
[(1Ë- (3)].
exp
),(yyvsp[(3) - (3)].explist));}

1927 {(
yyvÆ
.
ex∂i°
Ë
	`A_ExpLi°
((
yyv•
[(1Ë- (1)].
exp
),
NULL
);}

1934 {(
yyvÆ
.
ex∂i°
Ë
	`A_ExpLi°
((
yyv•
[(1Ë- (3)].
exp
),(yyvsp[(3) - (3)].explist));}

1941 {(
yyvÆ
.
ex∂i°
Ë(
yyv•
[(1) - (1)].explist);}

1948 {(
yyvÆ
.
ex∂i°
Ë
NULL
;}

1955 {(
yyvÆ
.
ex∂i°
Ë
	`A_ExpLi°
((
yyv•
[(1Ë- (1)].
exp
),
NULL
);}

1962 {(
yyvÆ
.
ex∂i°
Ë
	`A_ExpLi°
((
yyv•
[(1Ë- (3)].
exp
),(yyvsp[(3) - (3)].explist));}

1969 {(
yyvÆ
.
exp
Ë
	`A_SeqExp
(
EM_tokPos
,(
yyv•
[(1Ë- (1)].
ex∂i°
));}

1976 {(
yyvÆ
.
exp
Ë
	`A_SeqExp
(
EM_tokPos
,
NULL
);}

1983 {(
yyvÆ
.
de˛i°
Ë(
yyv•
[(1) - (1)].declist);}

1990 {(
yyvÆ
.
de˛i°
Ë
NULL
;}

1997 {(
yyvÆ
.
de˛i°
Ë
	`A_DecLi°
((
yyv•
[(1Ë- (1)].
dec
),
NULL
);}

2004 {(
yyvÆ
.
de˛i°
Ë
	`A_DecLi°
((
yyv•
[(1Ë- (2)].
dec
),(yyvsp[(2) - (2)].declist));}

2011 {(
yyvÆ
.
dec
Ë
	`A_Ty≥Dec
(
EM_tokPos
,(
yyv•
[(1Ë- (1)].
«mëyli°
));}

2018 {(
yyvÆ
.
dec
Ë(
yyv•
[(1) - (1)].dec);}

2025 {(
yyvÆ
.
dec
Ë
	`A_Fun˘i⁄Dec
(
EM_tokPos
,(
yyv•
[(1Ë- (1)].
funde˛i°
));}

2032 {(
yyvÆ
.
«mëyli°
Ë
	`A_NamëyLi°
((
yyv•
[(1Ë- (1)].
«mëy
),
NULL
);}

2039 {(
yyvÆ
.
«mëyli°
Ë
	`A_NamëyLi°
((
yyv•
[(1Ë- (2)].
«mëy
),(yyvsp[(2) - (2)].nametylist));}

2046 {(
yyvÆ
.
«mëy
Ë
	`A_Namëy
(
	`S_Symbﬁ
((
yyv•
[(2Ë- (4)].
svÆ
)),(yyv•[(4Ë- (4)].
ty
));}

2053 {(
yyvÆ
.
ty
Ë
	`A_NameTy
(
EM_tokPos
,
	`S_Symbﬁ
((
yyv•
[(1Ë- (1)].
svÆ
)));}

2060 {(
yyvÆ
.
ty
Ë
	`A_Rec‹dTy
(
EM_tokPos
,(
yyv•
[(2Ë- (3)].
fõldli°
));}

2067 {(
yyvÆ
.
ty
Ë
	`A_AºayTy
(
EM_tokPos
,
	`S_Symbﬁ
((
yyv•
[(3Ë- (3)].
svÆ
)));}

2074 {(
yyvÆ
.
fõldli°
Ë(
yyv•
[(1) - (1)].fieldlist);}

2081 {(
yyvÆ
.
fõldli°
Ë
NULL
;}

2088 {(
yyvÆ
.
fõldli°
Ë
	`A_FõldLi°
(
	`A_Fõld
(
EM_tokPos
,
	`S_Symbﬁ
((
yyv•
[(1Ë- (3)].
svÆ
)),S_Symbﬁ((yyv•[(3Ë- (3)].svÆ))),
NULL
);}

2095 {(
yyvÆ
.
fõldli°
Ë
	`A_FõldLi°
(
	`A_Fõld
(
EM_tokPos
,
	`S_Symbﬁ
((
yyv•
[(1Ë- (5)].
svÆ
)),S_Symbol((yyvsp[(3) - (5)].sval))),(yyvsp[(5) - (5)].fieldlist));}

2102 {(
yyvÆ
.
dec
Ë
	`A_V¨Dec
(
EM_tokPos
,
	`S_Symbﬁ
((
yyv•
[(2Ë- (4)].
svÆ
)),
NULL
,(yyv•[(4Ë- (4)].
exp
));}

2109 {(
yyvÆ
.
dec
Ë
	`A_V¨Dec
(
EM_tokPos
,
	`S_Symbﬁ
((
yyv•
[(2Ë- (6)].
svÆ
)),S_Symbﬁ((yyv•[(4Ë- (6)].svÆ)),(yyv•[(6Ë- (6)].
exp
));}

2116 {(
yyvÆ
.
funde˛i°
Ë
	`A_FundecLi°
((
yyv•
[(1Ë- (1)].
fundec
),
NULL
);}

2123 {(
yyvÆ
.
funde˛i°
Ë
	`A_FundecLi°
((
yyv•
[(1Ë- (2)].
fundec
),(yyvsp[(2) - (2)].fundeclist));}

2130 {(
yyvÆ
.
fundec
Ë
	`A_Fundec
(
EM_tokPos
,
	`S_Symbﬁ
((
yyv•
[(2Ë- (7)].
svÆ
)),(yyv•[(4Ë- (7)].
fõldli°
),
NULL
,(yyv•[(7Ë- (7)].
exp
));}

2137 {(
yyvÆ
.
fundec
Ë
	`A_Fundec
(
EM_tokPos
,
	`S_Symbﬁ
((
yyv•
[(2Ë- (9)].
svÆ
)),(yyv•[(4Ë- (9)].
fõldli°
),S_Symbﬁ((yyv•[(7Ë- (9)].svÆ)),(yyv•[(9Ë- (9)].
exp
));}

2146 
	`YY_SYMBOL_PRINT
 ("-> $$ =", 
yyr1
[
yyn
], &
yyvÆ
, &
yyloc
);

2148 
	`YYPOPSTACK
 (
yyÀn
);

2149 
yyÀn
 = 0;

2150 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2152 *++
yyv•
 = 
yyvÆ
;

2158 
yyn
 = 
yyr1
[yyn];

2160 
yy°©e
 = 
yypgŸo
[
yyn
 - 
YYNTOKENS
] + *
yys•
;

2161 i‡(0 <
yy°©e
 && yy°©ê<
YYLAST
 && 
yycheck
[yy°©e] =*
yys•
)

2162 
yy°©e
 = 
yyèbÀ
[yystate];

2164 
yy°©e
 = 
yydefgŸo
[
yyn
 - 
YYNTOKENS
];

2166 
yy√w°©e
;

2172 
yyîæab
:

2174 i‡(!
yyîr°©us
)

2176 ++
yy√ºs
;

2177 #i‡! 
YYERROR_VERBOSE


2178 
	`yyîr‹
 (
	`YY_
("syntaxÉrror"));

2181 
YYSIZE_T
 
yysize
 = 
	`yysy¡ax_îr‹
 (0, 
yy°©e
, 
yych¨
);

2182 i‡(
yymsg_Æloc
 < 
yysize
 && yymsg_Ælo¯< 
YYSTACK_ALLOC_MAXIMUM
)

2184 
YYSIZE_T
 
yyÆloc
 = 2 * 
yysize
;

2185 i‡(! (
yysize
 <
yyÆloc
 && yyÆlo¯<
YYSTACK_ALLOC_MAXIMUM
))

2186 
yyÆloc
 = 
YYSTACK_ALLOC_MAXIMUM
;

2187 i‡(
yymsg
 !
yymsgbuf
)

2188 
	`YYSTACK_FREE
 (
yymsg
);

2189 
yymsg
 = (*Ë
	`YYSTACK_ALLOC
 (
yyÆloc
);

2190 i‡(
yymsg
)

2191 
yymsg_Æloc
 = 
yyÆloc
;

2194 
yymsg
 = 
yymsgbuf
;

2195 
yymsg_Æloc
 =  
yymsgbuf
;

2199 i‡(0 < 
yysize
 && yysizê<
yymsg_Æloc
)

2201 (Ë
	`yysy¡ax_îr‹
 (
yymsg
, 
yy°©e
, 
yych¨
);

2202 
	`yyîr‹
 (
yymsg
);

2206 
	`yyîr‹
 (
	`YY_
("syntaxÉrror"));

2207 i‡(
yysize
 != 0)

2208 
yyexhau°edœb
;

2216 i‡(
yyîr°©us
 == 3)

2221 i‡(
yych¨
 <
YYEOF
)

2224 i‡(
yych¨
 =
YYEOF
)

2225 
YYABORT
;

2229 
	`yyde°ru˘
 ("Error: discarding",

2230 
yytokí
, &
yylvÆ
);

2231 
yych¨
 = 
YYEMPTY
;

2237 
yyîæab1
;

2243 
yyîr‹œb
:

2249 
yyîr‹œb
;

2253 
	`YYPOPSTACK
 (
yyÀn
);

2254 
yyÀn
 = 0;

2255 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2256 
yy°©e
 = *
yys•
;

2257 
yyîæab1
;

2263 
yyîæab1
:

2264 
yyîr°©us
 = 3;

2268 
yyn
 = 
yy∑˘
[
yy°©e
];

2269 i‡(
yyn
 !
YYPACT_NINF
)

2271 
yyn
 +
YYTERROR
;

2272 i‡(0 <
yyn
 && yy¿<
YYLAST
 && 
yycheck
[yyn] =
YYTERROR
)

2274 
yyn
 = 
yyèbÀ
[yyn];

2275 i‡(0 < 
yyn
)

2281 i‡(
yys•
 =
yyss
)

2282 
YYABORT
;

2285 
	`yyde°ru˘
 ("Error:Öopping",

2286 
yy°os
[
yy°©e
], 
yyv•
);

2287 
	`YYPOPSTACK
 (1);

2288 
yy°©e
 = *
yys•
;

2289 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2292 *++
yyv•
 = 
yylvÆ
;

2296 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yy°os
[
yyn
], 
yyv•
, 
yyl•
);

2298 
yy°©e
 = 
yyn
;

2299 
yy√w°©e
;

2305 
yyac˚±œb
:

2306 
yyªsu…
 = 0;

2307 
yyªtu∫
;

2312 
yyab‹éab
:

2313 
yyªsu…
 = 1;

2314 
yyªtu∫
;

2316 #i‡!
	`deföed
(
yyovîÊow
Ë|| 
YYERROR_VERBOSE


2320 
yyexhau°edœb
:

2321 
	`yyîr‹
 (
	`YY_
("memoryÉxhausted"));

2322 
yyªsu…
 = 2;

2326 
yyªtu∫
:

2327 i‡(
yych¨
 !
YYEMPTY
)

2328 
	`yyde°ru˘
 ("Cleanup: discardingÜookahead",

2329 
yytokí
, &
yylvÆ
);

2332 
	`YYPOPSTACK
 (
yyÀn
);

2333 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2334 
yys•
 !
yyss
)

2336 
	`yyde°ru˘
 ("Cleanup:Öopping",

2337 
yy°os
[*
yys•
], 
yyv•
);

2338 
	`YYPOPSTACK
 (1);

2340 #i‚de‡
yyovîÊow


2341 i‡(
yyss
 !
yysß
)

2342 
	`YYSTACK_FREE
 (
yyss
);

2344 #i‡
YYERROR_VERBOSE


2345 i‡(
yymsg
 !
yymsgbuf
)

2346 
	`YYSTACK_FREE
 (
yymsg
);

2349  
	`YYID
 (
yyªsu…
);

2350 
	}
}

	@y.tab.h

37 #i‚de‡
YYTOKENTYPE


38 
	#YYTOKENTYPE


	)

41 
	eyytokíty≥
 {

42 
	mID
 = 258,

43 
	mSTRING
 = 259,

44 
	mINT
 = 260,

45 
	mCOMMA
 = 261,

46 
	mCOLON
 = 262,

47 
	mSEMICOLON
 = 263,

48 
	mLPAREN
 = 264,

49 
	mRPAREN
 = 265,

50 
	mLBRACK
 = 266,

51 
	mRBRACK
 = 267,

52 
	mLBRACE
 = 268,

53 
	mRBRACE
 = 269,

54 
	mDOT
 = 270,

55 
	mPLUS
 = 271,

56 
	mMINUS
 = 272,

57 
	mTIMES
 = 273,

58 
	mDIVIDE
 = 274,

59 
	mEQ
 = 275,

60 
	mNEQ
 = 276,

61 
	mLT
 = 277,

62 
	mLE
 = 278,

63 
	mGT
 = 279,

64 
	mGE
 = 280,

65 
	mAND
 = 281,

66 
	mOR
 = 282,

67 
	mASSIGN
 = 283,

68 
	mARRAY
 = 284,

69 
	mIF
 = 285,

70 
	mTHEN
 = 286,

71 
	mELSE
 = 287,

72 
	mWHILE
 = 288,

73 
	mFOR
 = 289,

74 
	mTO
 = 290,

75 
	mDO
 = 291,

76 
	mLET
 = 292,

77 
	mIN
 = 293,

78 
	mEND
 = 294,

79 
	mOF
 = 295,

80 
	mBREAK
 = 296,

81 
	mNIL
 = 297,

82 
	mFUNCTION
 = 298,

83 
	mVAR
 = 299,

84 
	mTYPE
 = 300,

85 
	mLOWER
 = 301,

86 
	mLOW
 = 302,

87 
	mUMINUS
 = 303

91 
	#ID
 258

	)

92 
	#STRING
 259

	)

93 
	#INT
 260

	)

94 
	#COMMA
 261

	)

95 
	#COLON
 262

	)

96 
	#SEMICOLON
 263

	)

97 
	#LPAREN
 264

	)

98 
	#RPAREN
 265

	)

99 
	#LBRACK
 266

	)

100 
	#RBRACK
 267

	)

101 
	#LBRACE
 268

	)

102 
	#RBRACE
 269

	)

103 
	#DOT
 270

	)

104 
	#PLUS
 271

	)

105 
	#MINUS
 272

	)

106 
	#TIMES
 273

	)

107 
	#DIVIDE
 274

	)

108 
	#EQ
 275

	)

109 
	#NEQ
 276

	)

110 
	#LT
 277

	)

111 
	#LE
 278

	)

112 
	#GT
 279

	)

113 
	#GE
 280

	)

114 
	#AND
 281

	)

115 
	#OR
 282

	)

116 
	#ASSIGN
 283

	)

117 
	#ARRAY
 284

	)

118 
	#IF
 285

	)

119 
	#THEN
 286

	)

120 
	#ELSE
 287

	)

121 
	#WHILE
 288

	)

122 
	#FOR
 289

	)

123 
	#TO
 290

	)

124 
	#DO
 291

	)

125 
	#LET
 292

	)

126 
	#IN
 293

	)

127 
	#END
 294

	)

128 
	#OF
 295

	)

129 
	#BREAK
 296

	)

130 
	#NIL
 297

	)

131 
	#FUNCTION
 298

	)

132 
	#VAR
 299

	)

133 
	#TYPE
 300

	)

134 
	#LOWER
 301

	)

135 
	#LOW
 302

	)

136 
	#UMINUS
 303

	)

141 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


142 
	uYYSTYPE


148 
	mpos
;

149 
	mivÆ
;

150 
°rög
 
	msvÆ
;

151 
A_exp
 
	mexp
;

152 
A_expLi°
 
	mex∂i°
;

153 
A_v¨
 
	mv¨
;

154 
A_decLi°
 
	mde˛i°
;

155 
A_dec
 
	mdec
;

156 
A_efõldLi°
 
	mefõldli°
;

157 
A_efõld
 
	mefõld
;

158 
A_«mëy
 
	m«mëy
;

159 
A_«mëyLi°
 
	m«mëyli°
;

160 
A_fõldLi°
 
	mfõldli°
;

161 
A_fõld
 
	mfõld
;

162 
A_fundecLi°
 
	mfunde˛i°
;

163 
A_fundec
 
	mfundec
;

164 
A_ty
 
	mty
;

170 } 
	tYYSTYPE
;

171 
	#YYSTYPE_IS_TRIVIAL
 1

	)

172 
	#yy°y≥
 
YYSTYPE


	)

173 
	#YYSTYPE_IS_DECLARED
 1

	)

176 
YYSTYPE
 
yylvÆ
;

	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 #i‚de‡
_ASSERT_H_DECLS


67 
	#_ASSERT_H_DECLS


	)

68 
__BEGIN_DECLS


71 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

72 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

73 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

76 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

77 
__löe
,

78 
__c⁄°
 *
__fun˘i⁄
)

79 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

84 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

85 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

88 
__END_DECLS


91 
	#as£π
(
ex¥
) \

92 ((
ex¥
) \

93 ? 
	`__ASSERT_VOID_CAST
 (0) \

94 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ifdef 
__USE_GNU


97 
	#as£π_≥º‹
(
î∫um
) \

98 (!(
î∫um
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

108 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

109 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

111 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

112 
	#__ASSERT_FUNCTION
 
__func__


	)

114 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/libintl.h

21 #i‚de‡
_LIBINTL_H


22 
	#_LIBINTL_H
 1

	)

24 
	~<„©uªs.h
>

28 
	#__USE_GNU_GETTEXT
 1

	)

32 
	#__GNU_GETTEXT_SUPPORTED_REVISION
(
maj‹
) \

33 ((
maj‹
Ë=0 ? 1 : -1)

	)

35 
__BEGIN_DECLS


40 *
	$gëãxt
 (
__c⁄°
 *
__msgid
)

41 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (1);

45 *
	$dgëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid
)

46 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

47 *
	$__dgëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid
)

48 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

52 *
	$dcgëãxt
 (
__c⁄°
 *
__domaö«me
,

53 
__c⁄°
 *
__msgid
, 
__ˇãg‹y
)

54 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

55 *
	$__dcgëãxt
 (
__c⁄°
 *
__domaö«me
,

56 
__c⁄°
 *
__msgid
, 
__ˇãg‹y
)

57 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

62 *
	$ngëãxt
 (
__c⁄°
 *
__msgid1
, __c⁄° *
__msgid2
,

63 
__n
)

64 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (1Ë
	`__©åibuã_f‹m©_¨g__
 (2);

68 *
	$dngëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid1
,

69 
__c⁄°
 *
__msgid2
, 
__n
)

70 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

74 *
	$d˙gëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid1
,

75 
__c⁄°
 *
__msgid2
, 
__n
,

76 
__ˇãg‹y
)

77 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

83 *
	$ãxtdomaö
 (
__c⁄°
 *
__domaö«me
Ë
__THROW
;

87 *
	$bödãxtdomaö
 (
__c⁄°
 *
__domaö«me
,

88 
__c⁄°
 *
__dú«me
Ë
__THROW
;

92 *
	$böd_ãxtdomaö_code£t
 (
__c⁄°
 *
__domaö«me
,

93 
__c⁄°
 *
__code£t
Ë
__THROW
;

97 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


100 
	#__√ed_NULL


	)

101 
	~<°ddef.h
>

104 
	~<loˇÀ.h
>

110 
	#gëãxt
(
msgid
Ë
	`dgëãxt
 (
NULL
, msgid)

	)

112 
	#dgëãxt
(
domaö«me
, 
msgid
) \

113 
	`dcgëãxt
 (
domaö«me
, 
msgid
, 
LC_MESSAGES
)

	)

115 
	#ngëãxt
(
msgid1
, 
msgid2
, 
n
Ë
	`dngëãxt
 (
NULL
, msgid1, msgid2,Ç)

	)

117 
	#dngëãxt
(
domaö«me
, 
msgid1
, 
msgid2
, 
n
) \

118 
	`d˙gëãxt
 (
domaö«me
, 
msgid1
, 
msgid2
, 
n
, 
LC_MESSAGES
)

	)

122 
__END_DECLS


	@/usr/include/malloc.h

21 #i‚de‡
_MALLOC_H


22 
	#_MALLOC_H
 1

	)

24 
	~<„©uªs.h
>

25 
	~<°ddef.h
>

26 
	~<°dio.h
>

27 
	#__mÆloc_±r_t
 *

	)

30 
	#__mÆloc_size_t
 
size_t


	)

31 
	#__mÆloc_±rdiff_t
 
±rdiff_t


	)

33 #ifde‡
__GNUC__


35 
	#__MALLOC_P
(
¨gs
Ë¨g†
__THROW


	)

38 
	#__MALLOC_PMT
(
¨gs
Ë
	)
args

42 
	#__MALLOC_P
(
¨gs
Ë
	)
args

43 
	#__MALLOC_PMT
(
¨gs
Ë
	)
args

48 
__BEGIN_DECLS


51 *
mÆloc
 
__MALLOC_P
 ((
size_t
 
__size
)Ë
__©åibuã_mÆloc__
 
__wur
;

54 *
ˇŒoc
 
__MALLOC_P
 ((
size_t
 
__nmemb
, size_à
__size
))

55 
__©åibuã_mÆloc__
 
__wur
;

62 *
ªÆloc
 
__MALLOC_P
 ((*
__±r
, 
size_t
 
__size
))

63 
__©åibuã_w¨n_unu£d_ªsu…__
;

66 
‰ì
 
__MALLOC_P
 ((*
__±r
));

69 
c‰ì
 
__MALLOC_P
 ((*
__±r
));

72 *
memÆign
 
__MALLOC_P
 ((
size_t
 
__Æignmít
, size_à
__size
))

73 
__©åibuã_mÆloc__
 
__wur
;

76 *
vÆloc
 
__MALLOC_P
 ((
size_t
 
__size
))

77 
__©åibuã_mÆloc__
 
__wur
;

81 * 
pvÆloc
 
__MALLOC_P
 ((
size_t
 
__size
))

82 
__©åibuã_mÆloc__
 
__wur
;

86 *(*
__m‹ec‹e
Ë
__MALLOC_PMT
 ((
±rdiff_t
 
__size
));

89 *
__deÁu…_m‹ec‹e
 
__MALLOC_P
 ((
±rdiff_t
 
__size
))

90 
__©åibuã_mÆloc__
;

94 
	smÆlöfo
 {

95 
	m¨ía
;

96 
	m‹dblks
;

97 
	msmblks
;

98 
	mhblks
;

99 
	mhblkhd
;

100 
	musmblks
;

101 
	mfsmblks
;

102 
	mu‹dblks
;

103 
	mf‹dblks
;

104 
	mkìpco°
;

108 
mÆlöfo
 mÆlöfÿ
__MALLOC_P
 (());

111 #i‚de‡
M_MXFAST


112 
	#M_MXFAST
 1

	)

114 #i‚de‡
M_NLBLKS


115 
	#M_NLBLKS
 2

	)

117 #i‚de‡
M_GRAIN


118 
	#M_GRAIN
 3

	)

120 #i‚de‡
M_KEEP


121 
	#M_KEEP
 4

	)

125 
	#M_TRIM_THRESHOLD
 -1

	)

126 
	#M_TOP_PAD
 -2

	)

127 
	#M_MMAP_THRESHOLD
 -3

	)

128 
	#M_MMAP_MAX
 -4

	)

129 
	#M_CHECK_ACTION
 -5

	)

130 
	#M_PERTURB
 -6

	)

131 
	#M_ARENA_TEST
 -7

	)

132 
	#M_ARENA_MAX
 -8

	)

135 
mÆl›t
 
__MALLOC_P
 ((
__∑øm
, 
__vÆ
));

139 
mÆloc_åim
 
__MALLOC_P
 ((
size_t
 
__∑d
));

143 
size_t
 
mÆloc_ußbÀ_size
 
__MALLOC_P
 ((*
__±r
));

146 
mÆloc_°©s
 
__MALLOC_P
 (());

149 
mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
);

152 *
mÆloc_gë_°©e
 
__MALLOC_P
 (());

156 
mÆloc_£t_°©e
 
__MALLOC_P
 ((*
__±r
));

161 (*
__mÆloc_öôülize_hook
Ë
	`__MALLOC_PMT
 (());

163 (*
__‰ì_hook
Ë
	`__MALLOC_PMT
 ((*
__±r
,

164 
__c⁄°
 
__mÆloc_±r_t
));

165 *(*
__mÆloc_hook
Ë
	`__MALLOC_PMT
 ((
size_t
 
__size
,

166 
__c⁄°
 
__mÆloc_±r_t
));

167 *(*
__ªÆloc_hook
Ë
	`__MALLOC_PMT
 ((*
__±r
, 
size_t
 
__size
,

168 
__c⁄°
 
__mÆloc_±r_t
));

169 *(*
__memÆign_hook
Ë
	`__MALLOC_PMT
 ((
size_t
 
__Æignmít
,

170 
size_t
 
__size
,

171 
__c⁄°
 
__mÆloc_±r_t
));

172 (*
__a·î_m‹ec‹e_hook
Ë
	`__MALLOC_PMT
 (());

175 
__mÆloc_check_öô
 
	`__MALLOC_P
 (());

178 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


148 
	#P_tmpdú
 "/tmp"

	)

161 
	~<bôs/°dio_lim.h
>

165 
_IO_FILE
 *
°dö
;

166 
_IO_FILE
 *
°dout
;

167 
_IO_FILE
 *
°dîr
;

169 
	#°dö
 
°dö


	)

170 
	#°dout
 
°dout


	)

171 
	#°dîr
 
°dîr


	)

173 
__BEGIN_NAMESPACE_STD


175 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

177 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

178 
__END_NAMESPACE_STD


180 #ifde‡
__USE_ATFILE


182 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

183 
__c⁄°
 *
__√w
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


191 #i‚de‡
__USE_FILE_OFFSET64


192 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

194 #ifde‡
__REDIRECT


195 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

197 
	#tmpfûe
 
tmpfûe64


	)

201 #ifde‡
__USE_LARGEFILE64


202 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

206 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

207 
__END_NAMESPACE_STD


209 #ifde‡
__USE_MISC


212 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

216 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


224 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

225 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

229 
__BEGIN_NAMESPACE_STD


234 
	`f˛o£
 (
FILE
 *
__°ªam
);

239 
	`fÊush
 (
FILE
 *
__°ªam
);

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_MISC


249 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

252 #ifde‡
__USE_GNU


259 
	`f˛o£Æl
 ();

263 
__BEGIN_NAMESPACE_STD


264 #i‚de‡
__USE_FILE_OFFSET64


269 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

270 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

275 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

276 
__c⁄°
 *
__ª°ri˘
 
__modes
,

277 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

279 #ifde‡
__REDIRECT


280 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

281 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

282 
__wur
;

283 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

284 
__c⁄°
 *
__ª°ri˘
 
__modes
,

285 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

286 
__wur
;

288 
	#f›í
 
f›í64


	)

289 
	#‰e›í
 
‰e›í64


	)

292 
__END_NAMESPACE_STD


293 #ifde‡
__USE_LARGEFILE64


294 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

295 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

296 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

297 
__c⁄°
 *
__ª°ri˘
 
__modes
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 #ifdef 
__USE_POSIX


303 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

306 #ifdef 
__USE_GNU


309 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

310 
__c⁄°
 *
__ª°ri˘
 
__modes
,

311 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

314 #ifde‡
__USE_XOPEN2K8


316 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

317 
__THROW
 
__wur
;

322 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

326 
__BEGIN_NAMESPACE_STD


329 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

333 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

334 
__modes
, 
size_t
 
__n
Ë
__THROW
;

335 
__END_NAMESPACE_STD


337 #ifdef 
__USE_BSD


340 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

341 
size_t
 
__size
Ë
__THROW
;

344 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

348 
__BEGIN_NAMESPACE_STD


353 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

354 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

359 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

361 
	$•rötf
 (*
__ª°ri˘
 
__s
,

362 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

368 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

369 
_G_va_li°
 
__¨g
);

374 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

376 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

377 
_G_va_li°
 
__¨g
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


381 
__BEGIN_NAMESPACE_C99


383 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

384 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

385 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

387 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

388 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

389 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

390 
__END_NAMESPACE_C99


393 #ifde‡
__USE_GNU


396 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

397 
_G_va_li°
 
__¨g
)

398 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

399 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

400 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

401 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

402 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

403 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

404 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

407 #ifde‡
__USE_XOPEN2K8


414 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

415 
_G_va_li°
 
__¨g
)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

417 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

418 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

422 
__BEGIN_NAMESPACE_STD


427 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

428 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

435 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

436 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

438 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

439 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

440 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

441 #ifde‡
__REDIRECT


445 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

446 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_fsˇnf
Ë
__wur
;

448 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

449 
__isoc99_sˇnf
Ë
__wur
;

450 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

451 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

452 
__isoc99_ssˇnf
);

454 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

455 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

456 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

457 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

458 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

459 
	#fsˇnf
 
__isoc99_fsˇnf


	)

460 
	#sˇnf
 
__isoc99_sˇnf


	)

461 
	#ssˇnf
 
__isoc99_ssˇnf


	)

465 
__END_NAMESPACE_STD


467 #ifdef 
__USE_ISOC99


468 
__BEGIN_NAMESPACE_C99


473 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

474 
_G_va_li°
 
__¨g
)

475 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

481 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

482 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

485 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

486 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

487 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

489 #i‡!
deföed
 
__USE_GNU
 \

490 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

491 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

492 #ifde‡
__REDIRECT


496 
	`__REDIRECT
 (
vfsˇnf
,

497 (
FILE
 *
__ª°ri˘
 
__s
,

498 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

499 
__isoc99_vfsˇnf
)

500 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

501 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

502 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

503 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

504 
	`__REDIRECT_NTH
 (
vssˇnf
,

505 (
__c⁄°
 *
__ª°ri˘
 
__s
,

506 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

507 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

508 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

510 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

511 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

514 
_G_va_li°
 
__¨g
Ë
__wur
;

515 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

516 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

517 
_G_va_li°
 
__¨g
Ë
__THROW
;

518 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

519 
	#vsˇnf
 
__isoc99_vsˇnf


	)

520 
	#vssˇnf
 
__isoc99_vssˇnf


	)

524 
__END_NAMESPACE_C99


528 
__BEGIN_NAMESPACE_STD


533 
	`fgëc
 (
FILE
 *
__°ªam
);

534 
	`gëc
 (
FILE
 *
__°ªam
);

540 
	`gëch¨
 ();

541 
__END_NAMESPACE_STD


545 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

547 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


552 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

553 
	`gëch¨_u∆ocked
 ();

556 #ifde‡
__USE_MISC


563 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

567 
__BEGIN_NAMESPACE_STD


575 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

576 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

582 
	`putch¨
 (
__c
);

583 
__END_NAMESPACE_STD


587 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

589 #ifde‡
__USE_MISC


596 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

599 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


604 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

605 
	`putch¨_u∆ocked
 (
__c
);

609 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

610 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

612 
	`gëw
 (
FILE
 *
__°ªam
);

615 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

619 
__BEGIN_NAMESPACE_STD


624 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

625 
__wur
;

632 *
	$gës
 (*
__s
Ë
__wur
;

633 
__END_NAMESPACE_STD


635 #ifde‡
__USE_GNU


642 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

643 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

647 #ifdef 
__USE_XOPEN2K8


658 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

659 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

660 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

661 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

662 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

663 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

671 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

672 
size_t
 *
__ª°ri˘
 
__n
,

673 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

677 
__BEGIN_NAMESPACE_STD


682 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

688 
	`puts
 (
__c⁄°
 *
__s
);

695 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

702 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

703 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

708 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

709 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

710 
__END_NAMESPACE_STD


712 #ifde‡
__USE_GNU


719 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

720 
FILE
 *
__ª°ri˘
 
__°ªam
);

723 #ifde‡
__USE_MISC


730 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

731 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

732 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

733 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

737 
__BEGIN_NAMESPACE_STD


742 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

747 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

752 
	`ªwöd
 (
FILE
 *
__°ªam
);

753 
__END_NAMESPACE_STD


760 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


761 #i‚de‡
__USE_FILE_OFFSET64


766 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

771 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

773 #ifde‡
__REDIRECT


774 
	`__REDIRECT
 (
f£eko
,

775 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

776 
f£eko64
);

777 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

779 
	#f£eko
 
f£eko64


	)

780 
	#·ñlo
 
·ñlo64


	)

785 
__BEGIN_NAMESPACE_STD


786 #i‚de‡
__USE_FILE_OFFSET64


791 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

796 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

798 #ifde‡
__REDIRECT


799 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

800 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

801 
	`__REDIRECT
 (
f£ços
,

802 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

804 
	#fgëpos
 
fgëpos64


	)

805 
	#f£ços
 
f£ços64


	)

808 
__END_NAMESPACE_STD


810 #ifde‡
__USE_LARGEFILE64


811 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

812 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

813 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

814 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

817 
__BEGIN_NAMESPACE_STD


819 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

821 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

823 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

824 
__END_NAMESPACE_STD


826 #ifde‡
__USE_MISC


828 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

829 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
__BEGIN_NAMESPACE_STD


839 
	`≥º‹
 (
__c⁄°
 *
__s
);

840 
__END_NAMESPACE_STD


846 
	~<bôs/sys_îæi°.h
>

849 #ifdef 
__USE_POSIX


851 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

854 #ifde‡
__USE_MISC


856 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

860 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

861 
deföed
 
__USE_MISC
)

866 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

872 
	`p˛o£
 (
FILE
 *
__°ªam
);

876 #ifdef 
__USE_POSIX


878 *
	$˘îmid
 (*
__s
Ë
__THROW
;

882 #ifde‡
__USE_XOPEN


884 *
	`cu£rid
 (*
__s
);

888 #ifdef 
__USE_GNU


889 
ob°ack
;

892 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

893 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

894 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

895 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

896 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

897 
_G_va_li°
 
__¨gs
)

898 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

902 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


906 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

910 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

913 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


920 
	#__√ed_gë›t


	)

921 
	~<gë›t.h
>

926 #ifde‡
__USE_EXTERN_INLINES


927 
	~<bôs/°dio.h
>

929 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


930 
	~<bôs/°dio2.h
>

932 #ifde‡
__LDBL_COMPAT


933 
	~<bôs/°dio-ldbl.h
>

936 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), 
__s2_Àn
 = __buûtö_°æí (
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`__buûtö_°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__exã∫_Æways_ölöe
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__exã∫_Æways_ölöe
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

81 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

83 
	`__w¨n_mem£t_zîo_Àn
 ();

84  
__de°
;

86  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

87 
	}
}

89 #ifde‡
__USE_BSD


90 
__exã∫_Æways_ölöe
 

91 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__ª°ri˘
 
__§c
, *__ª°ri˘ 
__de°
,

92 
size_t
 
__Àn
))

94 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

95 
	}
}

97 
__exã∫_Æways_ölöe
 

98 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

100 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

101 
	}
}

104 
__exã∫_Æways_ölöe
 *

105 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

107  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

108 
	}
}

110 #ifde‡
__USE_GNU


111 
__exã∫_Æways_ölöe
 *

112 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

114  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

115 
	}
}

119 
__exã∫_Æways_ölöe
 *

120 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

121 
size_t
 
__Àn
))

123  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

124 
	}
}

127 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

128 
size_t
 
__de°Àn
Ë
__THROW
;

129 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

130 
__c⁄°
 *
__§c
,

131 
size_t
 
__n
), 
°≤˝y
);

133 
__exã∫_Æways_ölöe
 *

134 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

136 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

137 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

138  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

139  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

140 
	}
}

143 
__exã∫_Æways_ölöe
 *

144 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

146  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

147 
	}
}

150 
__exã∫_Æways_ölöe
 *

151 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

152 
size_t
 
__Àn
))

154  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

155 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

96 #unde‡
__USE_ISOC99


97 #unde‡
__USE_ISOC95


98 #unde‡
__USE_POSIX


99 #unde‡
__USE_POSIX2


100 #unde‡
__USE_POSIX199309


101 #unde‡
__USE_POSIX199506


102 #unde‡
__USE_XOPEN


103 #unde‡
__USE_XOPEN_EXTENDED


104 #unde‡
__USE_UNIX98


105 #unde‡
__USE_XOPEN2K


106 #unde‡
__USE_XOPEN2KXSI


107 #unde‡
__USE_XOPEN2K8


108 #unde‡
__USE_XOPEN2K8XSI


109 #unde‡
__USE_LARGEFILE


110 #unde‡
__USE_LARGEFILE64


111 #unde‡
__USE_FILE_OFFSET64


112 #unde‡
__USE_BSD


113 #unde‡
__USE_SVID


114 #unde‡
__USE_MISC


115 #unde‡
__USE_ATFILE


116 #unde‡
__USE_GNU


117 #unde‡
__USE_REENTRANT


118 #unde‡
__USE_FORTIFY_LEVEL


119 #unde‡
__FAVOR_BSD


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

129 
	#__USE_ANSI
 1

	)

138 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


139 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

140 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

142 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

147 #i‡
deföed
 
_BSD_SOURCE
 && \

148 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

149 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

150 
	#__FAVOR_BSD
 1

	)

154 #ifde‡
_GNU_SOURCE


155 #unde‡
_ISOC95_SOURCE


156 
	#_ISOC95_SOURCE
 1

	)

157 #unde‡
_ISOC99_SOURCE


158 
	#_ISOC99_SOURCE
 1

	)

159 #unde‡
_POSIX_SOURCE


160 
	#_POSIX_SOURCE
 1

	)

161 #unde‡
_POSIX_C_SOURCE


162 
	#_POSIX_C_SOURCE
 200809L

	)

163 #unde‡
_XOPEN_SOURCE


164 
	#_XOPEN_SOURCE
 700

	)

165 #unde‡
_XOPEN_SOURCE_EXTENDED


166 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

167 #unde‡
_LARGEFILE64_SOURCE


168 
	#_LARGEFILE64_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

180 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

181 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

182 
	#_BSD_SOURCE
 1

	)

183 
	#_SVID_SOURCE
 1

	)

190 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

191 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

192 
	#__USE_ISOC99
 1

	)

196 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

197 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

198 
	#__USE_ISOC95
 1

	)

203 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

204 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

205 
	#_POSIX_SOURCE
 1

	)

206 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

207 
	#_POSIX_C_SOURCE
 2

	)

208 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

209 
	#_POSIX_C_SOURCE
 199506L

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

211 
	#_POSIX_C_SOURCE
 200112L

	)

213 
	#_POSIX_C_SOURCE
 200809L

	)

215 
	#__USE_POSIX_IMPLICITLY
 1

	)

218 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


219 
	#__USE_POSIX
 1

	)

222 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


223 
	#__USE_POSIX2
 1

	)

226 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

227 
	#__USE_POSIX199309
 1

	)

230 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

231 
	#__USE_POSIX199506
 1

	)

234 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

235 
	#__USE_XOPEN2K
 1

	)

236 #unde‡
__USE_ISOC95


237 
	#__USE_ISOC95
 1

	)

238 #unde‡
__USE_ISOC99


239 
	#__USE_ISOC99
 1

	)

242 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

243 
	#__USE_XOPEN2K8
 1

	)

244 #unde‡
_ATFILE_SOURCE


245 
	#_ATFILE_SOURCE
 1

	)

248 #ifdef 
_XOPEN_SOURCE


249 
	#__USE_XOPEN
 1

	)

250 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

251 
	#__USE_XOPEN_EXTENDED
 1

	)

252 
	#__USE_UNIX98
 1

	)

253 #unde‡
_LARGEFILE_SOURCE


254 
	#_LARGEFILE_SOURCE
 1

	)

255 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

256 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

257 
	#__USE_XOPEN2K8
 1

	)

258 
	#__USE_XOPEN2K8XSI
 1

	)

260 
	#__USE_XOPEN2K
 1

	)

261 
	#__USE_XOPEN2KXSI
 1

	)

262 #unde‡
__USE_ISOC95


263 
	#__USE_ISOC95
 1

	)

264 #unde‡
__USE_ISOC99


265 
	#__USE_ISOC99
 1

	)

268 #ifde‡
_XOPEN_SOURCE_EXTENDED


269 
	#__USE_XOPEN_EXTENDED
 1

	)

274 #ifde‡
_LARGEFILE_SOURCE


275 
	#__USE_LARGEFILE
 1

	)

278 #ifde‡
_LARGEFILE64_SOURCE


279 
	#__USE_LARGEFILE64
 1

	)

282 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

283 
	#__USE_FILE_OFFSET64
 1

	)

286 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


287 
	#__USE_MISC
 1

	)

290 #ifdef 
_BSD_SOURCE


291 
	#__USE_BSD
 1

	)

294 #ifdef 
_SVID_SOURCE


295 
	#__USE_SVID
 1

	)

298 #ifdef 
_ATFILE_SOURCE


299 
	#__USE_ATFILE
 1

	)

302 #ifdef 
_GNU_SOURCE


303 
	#__USE_GNU
 1

	)

306 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


307 
	#__USE_REENTRANT
 1

	)

310 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

311 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

312 #i‡
_FORTIFY_SOURCE
 > 1

313 
	#__USE_FORTIFY_LEVEL
 2

	)

315 
	#__USE_FORTIFY_LEVEL
 1

	)

318 
	#__USE_FORTIFY_LEVEL
 0

	)

322 
	~<bôs/¥edefs.h
>

325 
	#__STDC_ISO_10646__
 200009L

	)

333 #unde‡
__GNU_LIBRARY__


334 
	#__GNU_LIBRARY__
 6

	)

338 
	#__GLIBC__
 2

	)

339 
	#__GLIBC_MINOR__
 12

	)

341 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

342 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

345 #i‡
deföed
 
__GNUC__
 \

346 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

347 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

348 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

349 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

353 #i‚de‡
__ASSEMBLER__


354 #i‚de‡
_SYS_CDEFS_H


355 
	~<sys/cdefs.h
>

360 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


361 
	#__USE_LARGEFILE
 1

	)

362 
	#__USE_LARGEFILE64
 1

	)

368 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

369 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

370 && 
deföed
 
	g__exã∫_ölöe


371 
	#__USE_EXTERN_INLINES
 1

	)

376 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

377 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

378 && 
deföed
 
	g__exã∫_ölöe


379 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

387 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

446 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

447 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

448 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

449 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

450 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

451 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

452 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

453 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

454 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

457 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

458 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

460 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

461 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

462 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

468 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

469 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

471 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

472 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 #ifde‡
_IO_MTSAFE_IO


476 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

477 
	#_IO_Êockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

479 
	#_IO_fu∆ockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

482 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

483 
	#_IO_Êockfûe
(
_Â
Ë

	)

484 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

485 
	#_IO_·rylockfûe
(
_Â
Ë

	)

486 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

487 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

490 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

491 
_IO_va_li°
, *
__ª°ri˘
);

492 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

493 
_IO_va_li°
);

494 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

495 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

497 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

498 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

500 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

502 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


503 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

504 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

505 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

506 #i‡
__GNUC__
 >= 2

509 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


510 
	~<shlib-com∑t.h
>

511 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

512 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

513 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

514 c⁄° 
_IO_°dö_u£d
;

515 
wók_exã∫
 (
_IO_°dö_u£d
);

518 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


519 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

523 
	#_IO_fwide
(
__Â
, 
__mode
) \

524 ({ 
__ªsu…
 = (
__mode
); \

525 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

527 i‡((
__Â
)->
_mode
 == 0) \

529 (
__Â
)->
_mode
 = -1; \

530 
__ªsu…
 = (
__Â
)->
_mode
; \

532 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

533 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

535 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

536 
__ªsu…
; })

	)

539 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

540 
_IO_va_li°
, *
__ª°ri˘
);

541 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

542 
_IO_va_li°
);

543 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

544 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

547 #ifde‡
__LDBL_COMPAT


548 
	~<bôs/libio-ldbl.h
>

551 #ifde‡
__˝lu•lus


	@/usr/include/locale.h

23 #i‚def 
_LOCALE_H


24 
	#_LOCALE_H
 1

	)

26 
	~<„©uªs.h
>

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

30 
	~<bôs/loˇÀ.h
>

32 
	g__BEGIN_DECLS


36 
	#LC_CTYPE
 
__LC_CTYPE


	)

37 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

38 
	#LC_TIME
 
__LC_TIME


	)

39 
	#LC_COLLATE
 
__LC_COLLATE


	)

40 
	#LC_MONETARY
 
__LC_MONETARY


	)

41 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

42 
	#LC_ALL
 
__LC_ALL


	)

43 
	#LC_PAPER
 
__LC_PAPER


	)

44 
	#LC_NAME
 
__LC_NAME


	)

45 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

46 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

47 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

48 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

51 
__BEGIN_NAMESPACE_STD


54 
	slc⁄v


58 *
	mdecimÆ_poöt
;

59 *
	mthoußnds_£p
;

65 *
	mgroupög
;

71 *
	möt_cuº_symbﬁ
;

72 *
	mcuºícy_symbﬁ
;

73 *
	mm⁄_decimÆ_poöt
;

74 *
	mm⁄_thoußnds_£p
;

75 *
	mm⁄_groupög
;

76 *
	mposôive_sign
;

77 *
	m√g©ive_sign
;

78 
	möt_‰ac_digôs
;

79 
	m‰ac_digôs
;

81 
	mp_cs_¥e˚des
;

83 
	mp_£p_by_•a˚
;

85 
	mn_cs_¥e˚des
;

87 
	mn_£p_by_•a˚
;

94 
	mp_sign_po¢
;

95 
	mn_sign_po¢
;

96 #ifde‡
__USE_ISOC99


98 
	möt_p_cs_¥e˚des
;

100 
	möt_p_£p_by_•a˚
;

102 
	möt_n_cs_¥e˚des
;

104 
	möt_n_£p_by_•a˚
;

111 
	möt_p_sign_po¢
;

112 
	möt_n_sign_po¢
;

114 
	m__öt_p_cs_¥e˚des
;

115 
	m__öt_p_£p_by_•a˚
;

116 
	m__öt_n_cs_¥e˚des
;

117 
	m__öt_n_£p_by_•a˚
;

118 
	m__öt_p_sign_po¢
;

119 
	m__öt_n_sign_po¢
;

125 *
	$£éoˇÀ
 (
__ˇãg‹y
, 
__c⁄°
 *
__loˇÀ
Ë
__THROW
;

128 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

130 
__END_NAMESPACE_STD


133 #ifdef 
__USE_XOPEN2K8


146 
	~<xloˇÀ.h
>

152 
__loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, 
__c⁄°
 *
__loˇÀ
,

153 
__loˇÀ_t
 
__ba£
Ë
__THROW
;

159 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

160 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

161 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

162 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

163 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

164 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

165 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

166 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

167 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

168 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

169 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

170 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

171 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

172 | 
LC_NUMERIC_MASK
 \

173 | 
LC_TIME_MASK
 \

174 | 
LC_COLLATE_MASK
 \

175 | 
LC_MONETARY_MASK
 \

176 | 
LC_MESSAGES_MASK
 \

177 | 
LC_PAPER_MASK
 \

178 | 
LC_NAME_MASK
 \

179 | 
LC_ADDRESS_MASK
 \

180 | 
LC_TELEPHONE_MASK
 \

181 | 
LC_MEASUREMENT_MASK
 \

182 | 
LC_IDENTIFICATION_MASK
 \

183 )

	)

187 
__loˇÀ_t
 
	$du∂oˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

191 
	$‰ìloˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

198 
__loˇÀ_t
 
	$u£loˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

202 
	#LC_GLOBAL_LOCALE
 ((
__loˇÀ_t
Ë-1L)

	)

206 
__END_DECLS


	@/usr/include/sys/types.h

23 #i‚def 
_SYS_TYPES_H


24 
	#_SYS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifdef 
__USE_BSD


33 #i‚de‡
__u_ch¨_deföed


34 
__u_ch¨
 
	tu_ch¨
;

35 
__u_sh‹t
 
	tu_sh‹t
;

36 
__u_öt
 
	tu_öt
;

37 
__u_l⁄g
 
	tu_l⁄g
;

38 
__quad_t
 
	tquad_t
;

39 
__u_quad_t
 
	tu_quad_t
;

40 
__fsid_t
 
	tfsid_t
;

41 
	#__u_ch¨_deföed


	)

45 
__loff_t
 
	tloff_t
;

47 #i‚de‡
__öo_t_deföed


48 #i‚de‡
__USE_FILE_OFFSET64


49 
__öo_t
 
	töo_t
;

51 
__öo64_t
 
	töo_t
;

53 
	#__öo_t_deföed


	)

55 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


56 
__öo64_t
 
	töo64_t
;

57 
	#__öo64_t_deföed


	)

60 #i‚de‡
__dev_t_deföed


61 
__dev_t
 
	tdev_t
;

62 
	#__dev_t_deföed


	)

65 #i‚de‡
__gid_t_deföed


66 
__gid_t
 
	tgid_t
;

67 
	#__gid_t_deföed


	)

70 #i‚de‡
__mode_t_deföed


71 
__mode_t
 
	tmode_t
;

72 
	#__mode_t_deföed


	)

75 #i‚de‡
__∆ök_t_deföed


76 
__∆ök_t
 
	t∆ök_t
;

77 
	#__∆ök_t_deföed


	)

80 #i‚de‡
__uid_t_deföed


81 
__uid_t
 
	tuid_t
;

82 
	#__uid_t_deföed


	)

85 #i‚de‡
__off_t_deföed


86 #i‚de‡
__USE_FILE_OFFSET64


87 
__off_t
 
	toff_t
;

89 
__off64_t
 
	toff_t
;

91 
	#__off_t_deföed


	)

93 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


94 
__off64_t
 
	toff64_t
;

95 
	#__off64_t_deföed


	)

98 #i‚de‡
__pid_t_deföed


99 
__pid_t
 
	tpid_t
;

100 
	#__pid_t_deföed


	)

103 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

104 && !
deföed
 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

228 && !
deföed
 
__blksize_t_deföed


229 
__blksize_t
 
	tblksize_t
;

230 
	#__blksize_t_deföed


	)

234 #i‚de‡
__USE_FILE_OFFSET64


235 #i‚de‡
__blk˙t_t_deföed


236 
__blk˙t_t
 
	tblk˙t_t
;

237 
	#__blk˙t_t_deföed


	)

239 #i‚de‡
__fsblk˙t_t_deföed


240 
__fsblk˙t_t
 
	tfsblk˙t_t
;

241 
	#__fsblk˙t_t_deföed


	)

243 #i‚de‡
__fsfû˙t_t_deföed


244 
__fsfû˙t_t
 
	tfsfû˙t_t
;

245 
	#__fsfû˙t_t_deföed


	)

248 #i‚de‡
__blk˙t_t_deföed


249 
__blk˙t64_t
 
	tblk˙t_t
;

250 
	#__blk˙t_t_deföed


	)

252 #i‚de‡
__fsblk˙t_t_deföed


253 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

254 
	#__fsblk˙t_t_deföed


	)

256 #i‚de‡
__fsfû˙t_t_deföed


257 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

258 
	#__fsfû˙t_t_deföed


	)

262 #ifde‡
__USE_LARGEFILE64


263 
__blk˙t64_t
 
	tblk˙t64_t
;

264 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

265 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

270 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


271 
	~<bôs/±hªadty≥s.h
>

274 
	g__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/locale.h

20 #i‡!
deföed
 
_LOCALE_H
 && !deföed 
_LANGINFO_H


24 #i‚de‡
_BITS_LOCALE_H


25 
	#_BITS_LOCALE_H
 1

	)

29 
	m__LC_CTYPE
 = 0,

30 
	m__LC_NUMERIC
 = 1,

31 
	m__LC_TIME
 = 2,

32 
	m__LC_COLLATE
 = 3,

33 
	m__LC_MONETARY
 = 4,

34 
	m__LC_MESSAGES
 = 5,

35 
	m__LC_ALL
 = 6,

36 
	m__LC_PAPER
 = 7,

37 
	m__LC_NAME
 = 8,

38 
	m__LC_ADDRESS
 = 9,

39 
	m__LC_TELEPHONE
 = 10,

40 
	m__LC_MEASUREMENT
 = 11,

41 
	m__LC_IDENTIFICATION
 = 12

	@/usr/include/bits/predefs.h

19 #i‚de‡
_FEATURES_H


23 #i‚de‡
_PREDEFS_H


24 
	#_PREDEFS_H


	)

27 
	#__STDC_IEC_559__
 1

	)

28 
	#__STDC_IEC_559_COMPLEX__
 1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

185 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

186 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

199 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

200 
	#__©åibuã__
(
xyz
Ë

	)

206 #i‡
__GNUC_PREREQ
 (2,96)

207 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

209 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (2,96)

216 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

218 
	#__©åibuã_puª__


	)

224 #i‡
__GNUC_PREREQ
 (3,1)

225 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

226 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

229 
	#__©åibuã_noölöe__


	)

233 #i‡
__GNUC_PREREQ
 (3,2)

234 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

236 
	#__©åibuã_dïªˇãd__


	)

245 #i‡
__GNUC_PREREQ
 (2,8)

246 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

248 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

255 #i‡
__GNUC_PREREQ
 (2,97)

256 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

257 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

264 #i‡
__GNUC_PREREQ
 (3,3)

265 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

267 
	#__n⁄nuŒ
(
∑øms
)

	)

272 #i‡
__GNUC_PREREQ
 (3,4)

273 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

274 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

275 #i‡
__USE_FORTIFY_LEVEL
 > 0

276 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

279 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

281 #i‚de‡
__wur


282 
	#__wur


	)

286 #i‡
__GNUC_PREREQ
 (3,2)

287 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

289 
	#__Æways_ölöe
 
__ölöe


	)

294 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

295 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


296 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

297 #i‡
__GNUC_PREREQ
 (4,3)

298 
	#__exã∫_Æways_ölöe
 \

299 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

301 
	#__exã∫_Æways_ölöe
 \

302 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

305 
	#__exã∫_ölöe
 
__ölöe


	)

306 #i‡
__GNUC_PREREQ
 (4,3)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

317 #i‡
__GNUC_PREREQ
 (4,3)

318 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

319 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

326 #i‡!
__GNUC_PREREQ
 (2,8)

327 
	#__exãnsi⁄__


	)

331 #i‡!
__GNUC_PREREQ
 (2,92)

332 
	#__ª°ri˘


	)

338 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


339 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

341 #ifde‡
__GNUC__


342 
	#__ª°ri˘_¨r


	)

344 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

345 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

348 
	#__ª°ri˘_¨r


	)

353 
	~<bôs/w‹dsize.h
>

355 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


356 
	#__LDBL_COMPAT
 1

	)

357 #ifde‡
__REDIRECT


358 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

359 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

360 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

361 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

362 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

363 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

364 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

365 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

366 
	#__LDBL_REDIR_DECL
(
«me
) \

367 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

368 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

369 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

370 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

371 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

374 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


375 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

376 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

377 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

378 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

379 
	#__LDBL_REDIR_DECL
(
«me
)

	)

380 #ifde‡
__REDIRECT


381 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

55 
	#__bsw≠_c⁄°™t_32
(
x
) \

56 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

57 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

59 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

60 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

61 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

62 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

63 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

64 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

65 || 
deföed
 
	g__amdÁm10__
)

68 
	#__bsw≠_32
(
x
) \

69 (
__exãnsi⁄__
 \

70 ({ 
__v
, 
__x
 = (
x
); \

71 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

72 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

74 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

75 
__v
; }))

	)

77 
	#__bsw≠_32
(
x
) \

78 (
__exãnsi⁄__
 \

79 ({ 
__v
, 
__x
 = (
x
); \

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

81 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

83 
	`__asm__
 ("rorw $8, %w0;" \

86 : "Ù" (
__v
) \

87 : "0" (
__x
) \

89 
__v
; }))

	)

92 
	#__bsw≠_32
(
x
) \

93 (
__exãnsi⁄__
 \

94 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

98 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

100 
	#__bsw≠_c⁄°™t_64
(
x
) \

101 ((((
x
) & 0xff00000000000000ull) >> 56) \

102 | (((
x
) & 0x00ff000000000000ull) >> 40) \

103 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

104 | (((
x
) & 0x000000ff00000000ull) >> 8) \

105 | (((
x
) & 0x00000000ff000000ull) << 8) \

106 | (((
x
) & 0x0000000000ff0000ull) << 24) \

107 | (((
x
) & 0x000000000000ff00ull) << 40) \

108 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

110 #i‡
__WORDSIZE
 == 64

111 
	#__bsw≠_64
(
x
) \

112 (
__exãnsi⁄__
 \

113 ({ 
__v
, 
__x
 = (
x
); \

114 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

115 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

117 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

118 
__v
; }))

	)

120 
	#__bsw≠_64
(
x
) \

121 (
__exãnsi⁄__
 \

122 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

123 
__l
[2]; } 
__w
, 
__r
; \

124 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

125 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

128 
__w
.
__Œ
 = (
x
); \

129 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

130 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

132 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

38 
	~<î∫o.h
>

39 
	~<gnu/›ti⁄-groups.h
>

43 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


44 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


45 
±hªad_muãx_t
 
	t__libc_lock_t
;

46 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

48 
	t__libc_lock_t
;

49 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

51 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

52 #ifde‡
__USE_UNIX98


53 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

55 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

58 
__libc_lock_›aque__
 
	t__libc_lock_t
;

59 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

60 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

64 
±hªad_key_t
 
	t__libc_key_t
;

73 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_lock_t
 
NAME
;

	)

75 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

77 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

79 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

80 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

91 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

92 #i‡
LLL_LOCK_INITIALIZER
 == 0

93 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

94 
CLASS
 
__libc_lock_t
 
NAME
;

	)

96 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

97 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

100 #i‡
__LT_SPINLOCK_INIT
 == 0

101 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

102 
CLASS
 
__libc_lock_t
 
NAME
;

	)

104 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

105 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

109 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

110 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

114 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

115 #i‡
LLL_LOCK_INITIALIZER
 == 0

116 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

117 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

119 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

120 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

122 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

123 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

125 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

126 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

127 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

128 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

131 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

132 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

133 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

134 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

136 
	#__πld_lock_öôülize
(
NAME
) \

137 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

144 #ifde‡
__PIC__


145 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

146 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

147 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

149 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

150 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

154 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


155 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

156 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

157 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

158 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

159 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

161 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

162 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

163 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

164 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

165 
FUNC
 
ARGS


	)

171 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

172 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

174 
	#__libc_lock_öô
(
NAME
) \

175 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

177 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


180 
	#__libc_rwlock_öô
(
NAME
) \

181 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

183 
	#__libc_rwlock_öô
(
NAME
) \

184 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

188 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

189 
	#__libc_lock_öô_ªcursive
(
NAME
) \

190 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

192 
	#__libc_lock_öô_ªcursive
(
NAME
) \

194 i‡(
__±hªad_muãx_öô
 !
NULL
) \

196 
±hªad_muãx©å_t
 
__©å
; \

197 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

198 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

199 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

200 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

202 } 0)

	)

205 
	#__πld_lock_öô_ªcursive
(
NAME
) \

207 i‡(
__±hªad_muãx_öô
 !
NULL
) \

209 
±hªad_muãx©å_t
 
__©å
; \

210 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

211 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

212 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

213 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

215 } 0)

	)

220 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

221 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

223 
	#__libc_lock_föi
(
NAME
) \

224 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

226 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


227 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

229 
	#__libc_rwlock_föi
(
NAME
) \

230 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

234 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

235 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

237 
	#__libc_lock_föi_ªcursive
(
NAME
) \

238 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

242 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

243 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

247 
__libc_lock_lock_‚
 (
__libc_lock_t
 *);

248 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_‚
);

250 #i‡
__OPTION_EGLIBC_BIG_MACROS


251 
	#__libc_lock_lock
(
NAME
) \

252 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

254 
	#__libc_lock_lock
(
NAME
) \

255 
	`__libc_lock_lock_‚
 (&(
NAME
))

	)

258 
	#__libc_lock_lock
(
NAME
) \

259 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

261 
	#__libc_rwlock_rdlock
(
NAME
) \

262 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

263 
	#__libc_rwlock_wæock
(
NAME
) \

264 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

267 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

268 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

272 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

273 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

275 #i‡
__OPTION_EGLIBC_BIG_MACROS


276 
	#__libc_lock_lock_ªcursive
(
NAME
) \

278 *
£lf
 = 
THREAD_SELF
; \

279 i‡((
NAME
).
ow√r
 !
£lf
) \

281 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

282 (
NAME
).
ow√r
 = 
£lf
; \

284 ++(
NAME
).
˙t
; \

285 } 0)

	)

287 
	#__libc_lock_lock_ªcursive
(
NAME
) \

288 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

291 
	#__libc_lock_lock_ªcursive
(
NAME
) \

292 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

296 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

297 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

301 
__libc_lock_åylock_‚
 (
__libc_lock_t
 *);

302 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_‚
);

304 #i‡
__OPTION_EGLIBC_BIG_MACROS


305 
	#__libc_lock_åylock
(
NAME
) \

306 
	`Œl_åylock
 (
NAME
)

	)

308 
	#__libc_lock_åylock
(
NAME
) \

309 
	`__libc_lock_åylock_‚
 (&(
NAME
))

	)

312 
	#__libc_lock_åylock
(
NAME
) \

313 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

315 
	#__libc_rwlock_åyrdlock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

317 
	#__libc_rwlock_åywæock
(
NAME
) \

318 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

321 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

322 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

326 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

327 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

329 #i‡
__OPTION_EGLIBC_BIG_MACROS


330 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

332 
ªsu…
 = 0; \

333 *
£lf
 = 
THREAD_SELF
; \

334 i‡((
NAME
).
ow√r
 !
£lf
) \

336 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

338 (
NAME
).
ow√r
 = 
£lf
; \

339 (
NAME
).
˙t
 = 1; \

342 
ªsu…
 = 
EBUSY
; \

345 ++(
NAME
).
˙t
; \

346 
ªsu…
; \

347 })

	)

349 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

350 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

353 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

357 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

358 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

361 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

362 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

366 
__libc_lock_u∆ock_‚
 (
__libc_lock_t
 *);

367 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_‚
);

369 #i‡
__OPTION_EGLIBC_BIG_MACROS


370 
	#__libc_lock_u∆ock
(
NAME
) \

371 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

373 
	#__libc_lock_u∆ock
(
NAME
) \

374 
	`__libc_lock_u∆ock_‚
 (&(
NAME
))

	)

377 
	#__libc_lock_u∆ock
(
NAME
) \

378 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

380 
	#__libc_rwlock_u∆ock
(
NAME
) \

381 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

384 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

385 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

389 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

390 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

392 #i‡
__OPTION_EGLIBC_BIG_MACROS


394 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

396 i‡(--(
NAME
).
˙t
 == 0) \

398 (
NAME
).
ow√r
 = 
NULL
; \

399 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

401 } 0)

	)

403 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

404 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

407 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

408 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

411 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


412 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

413 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

415 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

416 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

418 
	#__πld_lock_lock_ªcursive
(
NAME
) \

419 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

421 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

422 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

424 
	#__πld_lock_lock_ªcursive
(
NAME
) \

425 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

427 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

428 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

432 #i‡
PTHREAD_ONCE_INIT
 == 0

435 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

436 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

438 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

439 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

443 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

445 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

446 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

447 
INIT_FUNCTION
)); \

448 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

449 
	`INIT_FUNCTION
 (); \

450 (
ONCE_CONTROL
) |= 2; \

452 } 0)

	)

459 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

460 (*
routöe
Ë(*), *
¨g
);

461 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

462 
execuã
);

463 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

464 (*
routöe
Ë(*), *
¨g
);

465 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

466 
execuã
);

469 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

470 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

471 
_avaû
; \

472 i‡(
DOIT
) { \

473 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

474 i‡(
_avaû
) { \

475 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

476 
ARG
)); \

478 
_buf„r
.
__routöe
 = (
FCT
); \

479 
_buf„r
.
__¨g
 = (
ARG
); \

482 
_avaû
 = 0; \

483 }

	)

486 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

487 i‡(
_avaû
) { \

488 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

489 } i‡(
DOIT
) \

490 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

491 
	}

	)
}

494 
	#__libc_˛ónup_íd
(
DOIT
) \

495 i‡(
_avaû
) { \

496 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

497 } i‡(
DOIT
) \

498 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

502 
__exã∫_ölöe
 

503 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

505 i‡(
f
->
__do_ô
)

506 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

507 
	}
}

509 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

511 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

512 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

513 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

514 .
__do_ô
 = 1 };

	)

516 
	#__libc_˛ónup_p›
(
execuã
) \

517 
__˛‰ame
.
__do_ô
 = (
execuã
); \

518 } 0)

	)

522 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

523 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

526 
	#__libc_gë•ecific
(
KEY
) \

527 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

530 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

531 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

537 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

538 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

539 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

540 (*
__∑ª¡
) (),

541 (*
__chûd
) (),

542 *
__dso_h™dÀ
);

547 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

548 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

550 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

552 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

554 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

556 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

558 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

560 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

562 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

563 
__köd
);

565 #ifde‡
__USE_UNIX98


566 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

567 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

569 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

571 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

573 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

575 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

577 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

579 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

582 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

583 (*
__de°r_fun˘i⁄
) (*));

585 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

586 
__c⁄°
 *
__poöãr
);

588 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

590 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

591 (*
__öô_routöe
) ());

593 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

594 (*
__∑ª¡
) (),

595 (*
__chûd
) ());

601 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


602 #ifde‡
wók_exã∫


603 #i‡
_LIBC


604 
	~<bp-sym.h
>

606 
	#BP_SYM
(
sym
Ë
	)
sym

608 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

609 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

610 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

611 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

612 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

613 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

614 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

615 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

616 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

617 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

618 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

619 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

620 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

621 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

622 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

623 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

624 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

625 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

626 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

627 
	$wók_exã∫
 (
__±hªad_öôülize
)

628 
	$wók_exã∫
 (
__±hªad_©f‹k
)

629 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

630 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

631 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

633 #¥agm®
wók
 
__±hªad_muãx_öô


634 #¥agm®
wók
 
__±hªad_muãx_de°roy


635 #¥agm®
wók
 
__±hªad_muãx_lock


636 #¥agm®
wók
 
__±hªad_muãx_åylock


637 #¥agm®
wók
 
__±hªad_muãx_u∆ock


638 #¥agm®
wók
 
__±hªad_muãx©å_öô


639 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


640 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


641 #¥agm®
wók
 
__±hªad_rwlock_de°roy


642 #¥agm®
wók
 
__±hªad_rwlock_rdlock


643 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


644 #¥agm®
wók
 
__±hªad_rwlock_wæock


645 #¥agm®
wók
 
__±hªad_rwlock_åywæock


646 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


647 #¥agm®
wók
 
__±hªad_key_¸óã


648 #¥agm®
wók
 
__±hªad_£t•ecific


649 #¥agm®
wók
 
__±hªad_gë•ecific


650 #¥agm®
wók
 
__±hªad_⁄˚


651 #¥agm®
wók
 
__±hªad_öôülize


652 #¥agm®
wók
 
__±hªad_©f‹k


653 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


654 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


655 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

60 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

61 
	#__FD_ISSET
(
d
, 
£t
) \

62 ((
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] & 
	`__FDMASK
 (d)Ë!0)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

54 
	#CLOCK_MONOTONIC_RAW
 4

	)

56 
	#CLOCK_REALTIME_COARSE
 5

	)

58 
	#CLOCK_MONOTONIC_COARSE
 6

	)

61 
	#TIMER_ABSTIME
 1

	)

67 #ifde‡
__√ed_timevÆ


68 #unde‡
__√ed_timevÆ


69 #i‚de‡
_STRUCT_TIMEVAL


70 
	#_STRUCT_TIMEVAL
 1

	)

71 
	~<bôs/ty≥s.h
>

75 
	stimevÆ


77 
__time_t
 
	mtv_£c
;

78 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

323 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

327 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

328 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

332 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

333 
__THROW
;

336 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifde‡
__USE_GNU


342 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

343 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

344 
__THROW
;

348 
__BEGIN_NAMESPACE_STD


351 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

355 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

359 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

363 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

364 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

365 
mb°©e_t
 *
__p
Ë
__THROW
;

368 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

369 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
__END_NAMESPACE_STD


378 #ifde‡
__USE_EXTERN_INLINES


384 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

385 
__exã∫_ölöe
 
wöt_t


386 
	`__NTH
 (
	$btowc
 (
__c
))

387 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

388 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

390 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

391 
__exã∫_ölöe
 

392 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

393 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

394 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

396 
__exã∫_ölöe
 
size_t


397 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

398 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

399 {  (
__ps
 !
NULL


400 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

403 
__BEGIN_NAMESPACE_STD


406 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

407 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

408 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

412 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

413 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

414 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

415 
__END_NAMESPACE_STD


418 #ifdef 
__USE_XOPEN2K8


421 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

422 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

423 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

427 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

428 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

429 
size_t
 
__nwc
, size_à
__Àn
,

430 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

435 #ifde‡
__USE_XOPEN


437 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

441 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

445 
__BEGIN_NAMESPACE_STD


448 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

450 
__END_NAMESPACE_STD


452 #ifde‡
__USE_ISOC99


453 
__BEGIN_NAMESPACE_C99


455 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

456 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

457 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
__END_NAMESPACE_C99


463 
__BEGIN_NAMESPACE_STD


466 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

467 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

471 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

473 
__THROW
;

474 
__END_NAMESPACE_STD


476 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

477 
__BEGIN_NAMESPACE_C99


480 
__exãnsi⁄__


481 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

483 
__THROW
;

487 
__exãnsi⁄__


488 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

490 
__ba£
Ë
__THROW
;

491 
__END_NAMESPACE_C99


494 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


497 
__exãnsi⁄__


498 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

499 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

500 
__THROW
;

504 
__exãnsi⁄__


505 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

507 
__ba£
Ë
__THROW
;

510 #ifde‡
__USE_GNU


524 
	~<xloˇÀ.h
>

528 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

529 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

530 
__loˇÀ_t
 
__loc
Ë
__THROW
;

532 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

534 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

536 
__exãnsi⁄__


537 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
)

545 
__THROW
;

547 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
;

551 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
;

555 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

556 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

557 
__loˇÀ_t
 
__loc
Ë
__THROW
;

561 #ifdef 
__USE_XOPEN2K8


564 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

569 
__THROW
;

575 #ifdef 
__USE_XOPEN2K8


578 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

581 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_STD


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

648 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

649 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

650 #ifde‡
__REDIRECT


654 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

655 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

656 
__isoc99_fwsˇnf
)

658 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

659 
__isoc99_wsˇnf
)

661 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

662 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

663 ...), 
__isoc99_swsˇnf
)

666 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

667 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

669 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

671 
__THROW
;

672 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

673 
	#wsˇnf
 
__isoc99_wsˇnf


	)

674 
	#swsˇnf
 
__isoc99_swsˇnf


	)

678 
__END_NAMESPACE_STD


681 #ifde‡
__USE_ISOC99


682 
__BEGIN_NAMESPACE_C99


687 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

688 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

689 
__gnuc_va_li°
 
__¨g
)

695 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

696 
__gnuc_va_li°
 
__¨g
)

699 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

700 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

702 
__THROW
 ;

704 #i‡!
deföed
 
__USE_GNU
 \

705 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

706 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

707 #ifde‡
__REDIRECT


708 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

709 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

710 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

712 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

713 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

715 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

716 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

717 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

720 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

721 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
);

723 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

726 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

728 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

729 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

730 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

734 
__END_NAMESPACE_C99


738 
__BEGIN_NAMESPACE_STD


743 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

744 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

750 
wöt_t
 
	`gëwch¨
 ();

757 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

758 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

764 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

772 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

773 
__FILE
 *
__ª°ri˘
 
__°ªam
);

779 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

780 
__FILE
 *
__ª°ri˘
 
__°ªam
);

787 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

788 
__END_NAMESPACE_STD


791 #ifde‡
__USE_GNU


799 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

800 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

808 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

816 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

826 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

835 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

836 
__FILE
 *
__ª°ri˘
 
__°ªam
);

844 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

845 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
__BEGIN_NAMESPACE_C99


853 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

854 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

855 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

856 
__END_NAMESPACE_C99


858 #ifde‡
__USE_GNU


859 
	~<xloˇÀ.h
>

863 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

864 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

865 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

866 
__loˇÀ_t
 
__loc
Ë
__THROW
;

875 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


876 
	#__√ed_iswxxx


	)

877 
	~<w˘y≥.h
>

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/wch¨2.h
>

885 #ifde‡
__LDBL_COMPAT


886 
	~<bôs/wch¨-ldbl.h
>

889 
__END_DECLS


897 #unde‡
__√ed_mb°©e_t


898 #unde‡
__√ed_wöt_t


	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

24 #ifde‡
__WCHAR_MAX__


25 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

27 
	#__WCHAR_MAX
 (2147483647)

	)

32 #ifde‡
__WCHAR_UNSIGNED__


33 
	#__WCHAR_MIN
 
L
'\0'

	)

37 #ñi‡
L
'\0' - 1 > 0

38 
	#__WCHAR_MIN
 
L
'\0'

	)

40 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

64 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

65 
size_t
 
__ns1
), 
__wmemmove_chk
)

66 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

69 
__exã∫_Æways_ölöe
 
wch¨_t
 *

70 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

71 
size_t
 
__n
))

73 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

75 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

76  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

77 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

79 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

80  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

81 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

83  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

84 
	}
}

87 #ifde‡
__USE_GNU


88 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

89 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

90 
size_t
 
__ns1
Ë
__THROW
;

91 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

92 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

93 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

94 
size_t
 
__n
), 
wmemp˝y
);

95 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

96 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

97 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

98 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

99 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

102 
__exã∫_Æways_ölöe
 
wch¨_t
 *

103 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

104 
size_t
 
__n
))

106 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

108 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

109  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

110 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

112 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

113  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

114 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

116  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

117 
	}
}

121 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

122 
size_t
 
__ns
Ë
__THROW
;

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

124 
size_t
 
__n
), 
wmem£t
);

125 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

126 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

127 
size_t
 
__ns
), 
__wmem£t_chk
)

128 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

131 
__exã∫_Æways_ölöe
 
wch¨_t
 *

132 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__ª°ri˘
 
__s
, wch¨_à
__c
, 
size_t
 
__n
))

134 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

136 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

137  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

139 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

140  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

141 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

143  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

144 
	}
}

147 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

149 
size_t
 
__n
Ë
__THROW
;

150 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

151 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

152 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

154 
__exã∫_Æways_ölöe
 
wch¨_t
 *

155 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

157 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

158  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

159  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

160 
	}
}

163 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
,

164 
size_t
 
__de°Àn
Ë
__THROW
;

165 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
, (wch¨_à*
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__§c
),

167 
w˝˝y
);

169 
__exã∫_Æways_ölöe
 
wch¨_t
 *

170 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

172 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

173  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

174  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

175 
	}
}

178 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

179 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

180 
size_t
 
__de°Àn
Ë
__THROW
;

181 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

182 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

184 
size_t
 
__n
), 
wc¢˝y
);

185 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

186 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

187 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

188 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

189 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

192 
__exã∫_Æways_ölöe
 
wch¨_t
 *

193 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__exã∫_Æways_ölöe
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__exã∫_Æways_ölöe
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

265 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

266  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

267 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

268  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

269 
	}
}

272 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

273 
__Êag
, 
size_t
 
__s_Àn
,

274 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

275 
__THROW
 ;

277 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

278 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

279 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

280 
sw¥ötf
);

282 #ifde‡
__va_¨g_∑ck


283 
__exã∫_Æways_ölöe
 

284 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

285 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

287 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

288  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

289 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

290 
__fmt
, 
	`__va_¨g_∑ck
 ());

291  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

292 
	}
}

293 #ñi‡!
deföed
 
__˝lu•lus


295 
	#sw¥ötf
(
s
, 
n
, ...) \

296 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

297 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

298 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

299 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

302 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

303 
__Êag
, 
size_t
 
__s_Àn
,

304 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

305 
__gnuc_va_li°
 
__¨g
)

306 
__THROW
 ;

308 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

309 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

310 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

311 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

313 
__exã∫_Æways_ölöe
 

314 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

315 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

317 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

318  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

319 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

320  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

321 
	}
}

324 #i‡
__USE_FORTIFY_LEVEL
 > 1

326 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

328 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

330 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

331 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__gnuc_va_li°
 
__≠
);

333 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

336 #ifde‡
__va_¨g_∑ck


337 
__exã∫_Æways_ölöe
 

338 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

340  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

341 
	}
}

343 
__exã∫_Æways_ölöe
 

344 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

346  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

347 
	`__va_¨g_∑ck
 ());

348 
	}
}

349 #ñi‡!
deföed
 
__˝lu•lus


350 
	#w¥ötf
(...) \

351 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

352 
	#fw¥ötf
(
°ªam
, ...) \

353 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

356 
__exã∫_Æways_ölöe
 

357 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

359  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

360 
	}
}

362 
__exã∫_Æways_ölöe
 

363 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

364 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

366  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

367 
	}
}

371 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

372 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

373 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

374 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

375 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

376 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

377 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

378 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

379 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

382 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

383 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

385 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

387 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

388  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

389 
__n
, 
__°ªam
);

391 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

392  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

393 
__n
, 
__°ªam
);

395  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

396 
	}
}

398 #ifde‡
__USE_GNU


399 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

400 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

401 
__wur
;

402 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

403 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

404 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

405 
__wur
;

406 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

407 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

408 
__FILE
 *
__ª°ri˘
 
__°ªam
),

409 
__fgëws_u∆ocked_chk
)

410 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

413 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

414 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

416 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

418 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

419  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

420 
__n
, 
__°ªam
);

422 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

423  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

424 
__n
, 
__°ªam
);

426  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

427 
	}
}

431 
size_t
 
	$__w¸tomb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__p
,

432 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

433 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

434 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

437 
__exã∫_Æways_ölöe
 
__wur
 
size_t


438 
	`__NTH
 (
	$w¸tomb
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__ps
))

443 
	#__WCHAR_MB_LEN_MAX
 16

	)

444 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


447 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

448  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

449  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

450 
	}
}

453 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

454 
__c⁄°
 **
__ª°ri˘
 
__§c
,

455 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

456 
size_t
 
__d°Àn
Ë
__THROW
;

457 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

458 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

459 
__c⁄°
 **
__ª°ri˘
 
__§c
,

460 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

461 
mb§towcs
);

462 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

463 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

464 
__c⁄°
 **
__ª°ri˘
 
__§c
,

465 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

466 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

467 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

470 
__exã∫_Æways_ölöe
 
size_t


471 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

472 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

474 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

476 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

477  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

478 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

480 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

481  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

485 
	}
}

488 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

489 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

490 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

491 
size_t
 
__d°Àn
Ë
__THROW
;

492 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

493 (*
__ª°ri˘
 
__d°
,

494 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

495 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

496 
wc§tombs
);

497 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

498 (*
__ª°ri˘
 
__d°
,

499 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

500 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

501 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

502 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

504 
__exã∫_Æways_ölöe
 
size_t


505 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

506 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

508 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

510 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

511  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

513 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

514  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

517 
	}
}

520 #ifde‡
__USE_GNU


521 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

522 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

523 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

524 
size_t
 
__d°Àn
Ë
__THROW
;

525 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

526 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

527 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

528 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

529 
mb¢πowcs
);

530 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

531 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

532 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

533 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

534 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

535 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

538 
__exã∫_Æways_ölöe
 
size_t


539 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

540 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

542 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

544 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

545  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

546 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

548 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

549  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

553 
	}
}

556 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

557 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

558 
size_t
 
__nwc
, size_à
__Àn
,

559 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

560 
__THROW
;

561 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

562 (*
__ª°ri˘
 
__d°
,

563 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

564 
size_t
 
__nwc
, size_à
__Àn
,

565 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

566 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

567 (*
__ª°ri˘
 
__d°
,

568 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

569 
size_t
 
__nwc
, size_à
__Àn
,

570 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

571 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

572 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

574 
__exã∫_Æways_ölöe
 
size_t


575 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

576 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

578 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

580 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

581  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

582 
	`__bos
 (
__d°
));

584 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

585  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

589 
	}
}

	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CRYPT
 1

	)

20 
	#__OPTION_EGLIBC_CRYPT_UFC
 1

	)

21 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

22 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

23 
	#__OPTION_EGLIBC_ENVZ
 1

	)

24 
	#__OPTION_EGLIBC_FCVT
 1

	)

25 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

26 
	#__OPTION_EGLIBC_FSTAB
 1

	)

27 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

28 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

29 
	#__OPTION_EGLIBC_IDN
 1

	)

30 
	#__OPTION_EGLIBC_INET
 1

	)

31 
	#__OPTION_EGLIBC_INET_ANL
 1

	)

32 
	#__OPTION_EGLIBC_LIBM
 1

	)

33 
	#__OPTION_EGLIBC_LIBM_BIG
 1

	)

34 
	#__OPTION_EGLIBC_LOCALES
 1

	)

35 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

36 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

37 
	#__OPTION_EGLIBC_NIS
 1

	)

38 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

39 
	#__OPTION_EGLIBC_RCMD
 1

	)

40 
	#__OPTION_EGLIBC_RTLD_DEBUG
 1

	)

41 
	#__OPTION_EGLIBC_SPAWN
 1

	)

42 
	#__OPTION_EGLIBC_STREAMS
 1

	)

43 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

44 
	#__OPTION_EGLIBC_UTMP
 1

	)

45 
	#__OPTION_EGLIBC_UTMPX
 1

	)

46 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

47 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

48 
	#__OPTION_POSIX_REGEXP
 1

	)

49 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

50 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_XOPEN2K


68 
	mPTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

70 
	mPTHREAD_MUTEX_ROBUST
,

71 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_GNU


430 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

431 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

435 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, 
__c⁄°
 *
__«me
)

436 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 #ifde‡
__USE_UNIX98


442 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

445 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

448 #ifde‡
__USE_GNU


453 
	$±hªad_yõld
 (Ë
__THROW
;

458 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

459 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

460 
__THROW
 
	`__n⁄nuŒ
 ((3));

463 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

464 
˝u_£t_t
 *
__˝u£t
)

465 
__THROW
 
	`__n⁄nuŒ
 ((3));

478 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

479 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

490 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

494 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

497 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

502 
	`±hªad_ã°ˇn˚l
 ();

511 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

512 
__mask_was_ßved
;

513 } 
__ˇn˚l_jmp_buf
[1];

514 *
__∑d
[4];

515 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

518 #i‚de‡
__˛ónup_f˘_©åibuã


519 
	#__˛ónup_f˘_©åibuã


	)

524 
	s__±hªad_˛ónup_‰ame


526 (*
__ˇn˚l_routöe
) (*);

527 *
__ˇn˚l_¨g
;

528 
__do_ô
;

529 
__ˇn˚l_ty≥
;

532 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


533 #ifde‡
__˝lu•lus


535 ˛as†
	c__±hªad_˛ónup_˛ass


537 (*
__ˇn˚l_routöe
) (*);

538 *
__ˇn˚l_¨g
;

539 
__do_ô
;

540 
__ˇn˚l_ty≥
;

542 
public
:

543 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

544 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

545 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

546 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

547 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

548 &
__ˇn˚l_ty≥
); 
	}
}

549 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

559 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

561 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

565 
	#±hªad_˛ónup_p›
(
execuã
) \

566 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

567 } 0)

	)

569 #ifde‡
__USE_GNU


573 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

575 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

576 
__˛‰ame
.
	`__de„r
 ()

	)

581 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

582 
__˛‰ame
.
	`__ª°‹e
 (); \

583 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

584 } 0)

	)

591 
__exã∫_ölöe
 

592 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

594 i‡(
__‰ame
->
__do_ô
)

595 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

596 
	}
}

605 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

607 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

608 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

609 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

610 .
__do_ô
 = 1 };

	)

614 
	#±hªad_˛ónup_p›
(
execuã
) \

615 
__˛‰ame
.
__do_ô
 = (
execuã
); \

616 } 0)

	)

618 #ifde‡
__USE_GNU


622 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

624 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

625 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

626 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

627 .
__do_ô
 = 1 }; \

628 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

629 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

634 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

636 
__˛‰ame
.
__do_ô
 = (
execuã
); \

637 } 0)

	)

648 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

650 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

651 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

652 *
__ˇn˚l_¨g
 = (
¨g
); \

653 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

654 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

655 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

657 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

658 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

662 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 dÿ{

	)

664 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

669 
	#±hªad_˛ónup_p›
(
execuã
) \

672 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

673 i‡(
execuã
) \

674 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

675 } 0)

	)

676 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

677 
__˛ónup_f˘_©åibuã
;

679 #ifde‡
__USE_GNU


683 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

685 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

686 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

687 *
__ˇn˚l_¨g
 = (
¨g
); \

688 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

689 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

690 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

697 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

698 dÿ{

	)

699 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

700 
__˛ónup_f˘_©åibuã
;

705 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

708 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

709 i‡(
execuã
) \

710 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

711 
	}
} 0)

	)

712 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

713 
__˛ónup_f˘_©åibuã
;

717 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

718 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

719 #i‚de‡
SHARED


720 
	`__©åibuã__
 ((
__wók__
))

726 
__jmp_buf_èg
;

727 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

733 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

734 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

738 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

739 
__THROW
 
	`__n⁄nuŒ
 ((1));

742 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

743 
__THROW
 
	`__n⁄nuŒ
 ((1));

746 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

747 
__THROW
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_XOPEN2K


751 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

752 
__c⁄°
 
time•ec
 *
__ª°ri˘


753 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

757 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

758 
__THROW
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

763 
__ª°ri˘
 
__muãx
,

764 *
__ª°ri˘
 
__¥io˚ûög
)

765 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

769 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

770 
__¥io˚ûög
,

771 *
__ª°ri˘
 
__ﬁd_˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

775 #ifde‡
__USE_XOPEN2K8


777 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

778 
__THROW
 
	`__n⁄nuŒ
 ((1));

779 #ifde‡
__USE_GNU


780 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1));

798 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

799 
__ª°ri˘
 
__©å
,

800 *
__ª°ri˘
 
__psh¨ed
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

804 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

805 
__psh¨ed
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


810 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


811 
__©å
, *
__ª°ri˘
 
__köd
)

812 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

817 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

822 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

823 
__ª°ri˘
 
__©å
,

824 *
__ª°ri˘
 
__¥Ÿocﬁ
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

829 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

830 
__¥Ÿocﬁ
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1));

834 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

835 
__ª°ri˘
 
__©å
,

836 *
__ª°ri˘
 
__¥io˚ûög
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

840 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

841 
__¥io˚ûög
)

842 
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_XOPEN2K


846 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

847 *
__robu°√ss
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

849 #ifde‡
__USE_GNU


850 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

851 *
__robu°√ss
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__robu°√ss
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #ifde‡
__USE_GNU


860 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

861 
__robu°√ss
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

867 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


872 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

873 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


874 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

882 
__THROW
 
	`__n⁄nuŒ
 ((1));

885 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROW
 
	`__n⁄nuŒ
 ((1));

888 #ifde‡
__USE_XOPEN2K


890 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

891 
__c⁄°
 
time•ec
 *
__ª°ri˘


892 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

896 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

897 
__THROW
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1));

903 #ifde‡
__USE_XOPEN2K


905 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

906 
__c⁄°
 
time•ec
 *
__ª°ri˘


907 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

911 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

912 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

922 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

927 
__ª°ri˘
 
__©å
,

928 *
__ª°ri˘
 
__psh¨ed
)

929 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

932 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

933 
__psh¨ed
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

938 
__ª°ri˘
 
__©å
,

939 *
__ª°ri˘
 
__¥ef
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

943 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

944 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

952 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

953 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


954 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

961 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

962 
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

966 
__THROW
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

974 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

975 
	`__n⁄nuŒ
 ((1, 2));

984 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

985 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

986 
__c⁄°
 
time•ec
 *
__ª°ri˘


987 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

992 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

996 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1001 
__ª°ri˘
 
__©å
,

1002 *
__ª°ri˘
 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1006 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1007 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1009 #ifde‡
__USE_XOPEN2K


1011 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1012 
__ª°ri˘
 
__©å
,

1013 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1017 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1018 
__˛ockid_t
 
__˛ock_id
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 #ifde‡
__USE_XOPEN2K


1028 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1040 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1045 
__THROW
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1053 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1054 
__©å
, 
__cou¡
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1058 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1063 
__THROW
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1068 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1072 
__THROW
 
	`__n⁄nuŒ
 ((1));

1075 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1076 
__ª°ri˘
 
__©å
,

1077 *
__ª°ri˘
 
__psh¨ed
)

1078 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1081 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1082 
__psh¨ed
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1095 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1096 (*
__de°r_fun˘i⁄
) (*))

1097 
__THROW
 
	`__n⁄nuŒ
 ((1));

1100 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1103 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1106 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1107 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1110 #ifde‡
__USE_XOPEN2K


1112 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1113 
__˛ockid_t
 *
__˛ock_id
)

1114 
__THROW
 
	`__n⁄nuŒ
 ((2));

1129 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1130 (*
__∑ª¡
) (),

1131 (*
__chûd
Ë()Ë
__THROW
;

1134 #ifde‡
__USE_EXTERN_INLINES


1136 
__exã∫_ölöe
 

1137 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1139  
__thªad1
 =
__thªad2
;

1140 
	}
}

1143 
	g__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
ERFKILL


42 
	#ERFKILL
 132

	)

45 #i‚de‡
__ASSEMBLER__


47 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

49 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


51 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

56 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


60 
	#EDOM
 33

	)

61 
	#EILSEQ
 84

	)

62 
	#ERANGE
 34

	)

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/sched.h

21 #i‚def 
_SCHED_H


22 
	#_SCHED_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

32 
	#__√ed_time_t


	)

33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

35 
	#SCHED_IDLE
 5

	)

37 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

40 #ifde‡
__USE_MISC


42 
	#CSIGNAL
 0x000000f‡

	)

43 
	#CLONE_VM
 0x00000100

	)

44 
	#CLONE_FS
 0x00000200

	)

45 
	#CLONE_FILES
 0x00000400

	)

46 
	#CLONE_SIGHAND
 0x00000800

	)

47 
	#CLONE_PTRACE
 0x00002000

	)

48 
	#CLONE_VFORK
 0x00004000

	)

50 
	#CLONE_PARENT
 0x00008000

	)

52 
	#CLONE_THREAD
 0x00010000

	)

53 
	#CLONE_NEWNS
 0x00020000

	)

54 
	#CLONE_SYSVSEM
 0x00040000

	)

55 
	#CLONE_SETTLS
 0x00080000

	)

56 
	#CLONE_PARENT_SETTID
 0x00100000

	)

58 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

60 
	#CLONE_DETACHED
 0x00400000

	)

61 
	#CLONE_UNTRACED
 0x00800000

	)

63 
	#CLONE_CHILD_SETTID
 0x01000000

	)

65 
	#CLONE_NEWUTS
 0x04000000

	)

66 
	#CLONE_NEWIPC
 0x08000000

	)

67 
	#CLONE_NEWUSER
 0x10000000

	)

68 
	#CLONE_NEWPID
 0x20000000

	)

69 
	#CLONE_NEWNET
 0x40000000

	)

70 
	#CLONE_IO
 0x80000000

	)

74 
	ssched_∑øm


76 
	m__sched_¥i‹ôy
;

79 
	g__BEGIN_DECLS


81 #ifde‡
__USE_MISC


83 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

84 
__Êags
, *
__¨g
, ...Ë
__THROW
;

87 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

90 
	$sched_gë˝u
 (Ë
__THROW
;

93 
__END_DECLS


97 #i‡!
deföed
 
__deföed_sched∑øm
 \

98 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

99 
	#__deföed_sched∑øm
 1

	)

101 
	s__sched_∑øm


103 
__sched_¥i‹ôy
;

105 #unde‡
__√ed_sched∑øm


109 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


110 
	#__˝u_£t_t_deföed


	)

112 
	#__CPU_SETSIZE
 1024

	)

113 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

116 
	t__˝u_mask
;

119 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

120 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

125 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

126 } 
	t˝u_£t_t
;

129 #i‡
	`__GNUC_PREREQ
 (2, 91)

130 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

131 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

133 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

135 
size_t
 
__i
; \

136 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

137 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

138 
__i
 = 0; __ò< 
__imax
; ++__i) \

139 
__bôs
[
__i
] = 0; \

140 
	}
} 0)

	)

142 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

143 (
__exãnsi⁄__
 \

144 ({ 
size_t
 
__˝u
 = (
˝u
); \

145 
__˝u
 < 8 * (
£tsize
) \

146 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

147 |
	`__CPUMASK
 (
__˝u
)) \

148 : 0; }))

	)

149 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

150 (
__exãnsi⁄__
 \

151 ({ 
size_t
 
__˝u
 = (
˝u
); \

152 
__˝u
 < 8 * (
£tsize
) \

153 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

154 &~
	`__CPUMASK
 (
__˝u
)) \

155 : 0; }))

	)

156 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

157 (
__exãnsi⁄__
 \

158 ({ 
size_t
 
__˝u
 = (
˝u
); \

159 
__˝u
 < 8 * (
£tsize
) \

160 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

161 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

162 : 0; }))

	)

164 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

165 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

167 #i‡
__GNUC_PREREQ
 (2, 91)

168 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

169 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

171 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

172 (
__exãnsi⁄__
 \

173 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

174 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

175 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

176 
size_t
 
__i
; \

177 
__i
 = 0; __ò< 
__imax
; ++__i) \

178 i‡(
__bôs
[
__i
] != __bits[__i]) \

180 
__i
 =
__imax
; }))

	)

183 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

184 (
__exãnsi⁄__
 \

185 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

186 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

187 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

188 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

189 
size_t
 
__i
; \

190 
__i
 = 0; __ò< 
__imax
; ++__i) \

191 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

192 
__de°
; }))

	)

194 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

195 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

196 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

197 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

199 
__BEGIN_DECLS


201 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

202 
__THROW
;

203 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

204 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

206 
__END_DECLS


	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@
1
.
1
/usr/include
108
2102
absyn.c
absyn.h
assem.c
assem.h
canon.c
canon.h
codegen.c
codegen.h
env.c
env.h
errormsg.c
errormsg.h
escape.c
escape.h
frame.c
frame.h
lex.yy.c
parse.c
parse.h
prabsyn.c
prabsyn.h
printtree.c
printtree.h
runtime.c
semant.c
semant.h
symbol.c
symbol.h
table.c
table.h
temp.c
temp.h
translate.c
translate.h
tree.c
tree.h
types.c
types.h
util.c
util.h
y.tab.c
y.tab.h
/usr/include/alloca.h
/usr/include/assert.h
/usr/include/libintl.h
/usr/include/malloc.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/types.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/locale.h
/usr/include/sys/types.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/locale.h
/usr/include/bits/predefs.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/bits/wordsize.h
/usr/include/ctype.h
/usr/include/endian.h
/usr/include/gnu/stubs.h
/usr/include/sys/cdefs.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/time.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libc-lock.h
/usr/include/bits/select.h
/usr/include/bits/sigset.h
/usr/include/bits/time.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/wchar.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar.h
/usr/include/bits/wchar2.h
/usr/include/errno.h
/usr/include/gnu/option-groups.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/bits/errno.h
/usr/include/bits/setjmp.h
/usr/include/sched.h
/usr/include/bits/sched.h
/usr/include/linux/errno.h
/usr/include/asm/errno.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/errno-base.h
