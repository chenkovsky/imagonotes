本次project好像给的代码不对。
比如codegen没有考虑到callersave寄存器保存，所以我对原有代码进行了改动。
static link。
对于每一层，调用其他函数时将编译时候生成Tr_level作整数当第一个参数传入。每次要使用上层的参数时，用%ebp回溯，判断每层传入第一个参数是否和需要使用的参数的Tr_level相同。相同那么说明回溯到了正确的层，就可以获得参数了。

因为semant.c实在是太大了，我将pro3的代码拆开来自己编译了一个文件test.out专门负责检查语法，然后写了个python脚本Test.py,先检查语法然后编译。
凡是无语法错误的均能够生成汇编，其生成的程序行为也保证正确的。
--by Chenkovsky
